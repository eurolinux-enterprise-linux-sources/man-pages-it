.\" Hey Emacs! This file is -*- nroff -*- source.
.\"
.\" Copyright (C) 1993 Rickard E. Faith <faith@cs.unc.edu>
.\" and Copyright (C) 1994 Andries E. Brouwer <aeb@cwi.nl>
.\" and Copyright (C) 2002, 2005 Michael Kerrisk <mtk-manpages@gmx.net>
.\"
.\" Permission is granted to make and distribute verbatim copies of this
.\" manual provided the copyright notice and this permission notice are
.\" preserved on all copies.
.\"
.\" Permission is granted to copy and distribute modified versions of this
.\" manual under the conditions for verbatim copying, provided that the
.\" entire resulting derived work is distributed under the terms of a
.\" permission notice identical to this one.
.\" 
.\" Since the Linux kernel and libraries are constantly changing, this
.\" manual page may be incorrect or out-of-date.  The author(s) assume no
.\" responsibility for errors or omissions, or for damages resulting from
.\" the use of the information contained herein.  The author(s) may not
.\" have taken the same level of care in the production of this manual,
.\" which is licensed free of charge, as they might when working
.\" professionally.
.\" 
.\" Formatted or processed versions of this manual, if unaccompanied by
.\" the source, must acknowledge the copyright and authors of this work.
.\"
.\" 2008-10-06, mtk: Created this as a new page by splitting
.\"     umount/umount2 material out of mount.2
.\"
.\" Traduzione da man-pages-3.11 di Elisabetta Galli - ottobre 2008
.\"
.TH UMOUNT 2 "6 ottobre 2008" "Linux" "Linux Programmer's Manual"
.SH NOME
umount, umount2 \- smonta i file system
.SH SINTASSI
.nf
.B "#include <sys/mount.h>"
.sp
.BI "int umount(const char *" target );
.sp
.BI "int umount2(const char *" target ", int " flags );
.fi
.SH DESCRIZIONE
.BR umount ()
e
.BR umount2 ()
rimuovono il file system (più alto) montato su
.IR target .
.\" Nota: la denominazione del kernel cambia rispetto alla denominazione di glibc:
.\" umount2 è il nome usato da glibc per ciò che ora il kernel chiama umount,
.\" e umount è il nome usato da glibc per oldumount

Sono necessari privilegi appropriati (Linux: capacità
.B CAP_SYS_ADMIN)
per smontare i file system.

A partire da Linux 2.1.116 è stata aggiunta la
chiamata di sistema
.BR umount2 ()
che, come
.BR umount (),
smonta un target, ma permette
.I flag
aggiuntivi che controllano il comportamento dell'operazione:
.TP
.BR MNT_FORCE " (a partire da Linux 2.1.116)"
Forza lo smontaggio anche se occupato.
Questo può causare una perdita di dati.
(solo per i mount NFS).
.\" FIXME MNT_FORCE può causare una perdita di dati? Stando alla
.\" pagina di manuale di Solaris può farlo su Solaris.
.\" Se anche su Linux succede, dovrebbe essere documentato.
.TP
.BR MNT_DETACH " (a partire da Linux 2.4.11)"
Esegue uno smontaggio lento: rende il punto di mount non disponibile per i
nuovi accessi, e attualmente esegue lo smontaggio quando il punto di mount
smette di essere occupato.
.TP
.BR MNT_EXPIRE " (a partire da Linux 2.6.8)"
Marca il punto di mount come scaduto.
Se un punto di mount non è attualmente in uso, allora una chiamata iniziale a
.BR umount2 ()
con questo flag fallisce con l'errore
.BR EAGAIN ,
ma marca il punto di mount come scaduto.
Il punto di mount rimane scaduto fino a quando non vi
accede nessun processo.
Una seconda chiamata
.BR umount2 ()
che specifica
.B MNT_EXPIRE
somnta un punto di mount scaduto.
Questo flag non può essere specificato con
.B MNT_FORCE
o con
.BR MNT_DETACH .
.SH VALORE RESTITUITO
In caso di successo viene restituito zero.
In caso di errore viene restituito \-1 , e
.I errno
viene impostato di conseguenza.
.SH ERRORI
I valori di errore indicati di seguito sono causati da errori indipendenti dal 
tipo di file system.
Ciascun tipo di file system può avere i propri errori
speciali e il suo comportamento speciale.
Vedere il codice sorgente del kernel per dettagli.
.TP
.B EAGAIN
Una chiamata a
.BR umount2 ()
che specifica
.B MNT_EXPIRE
ha marcato con successo un file system non occupato come scaduto.
.TP
.B EBUSY
.I target
non può essere smontato in quanto occupato.
.TP
.B EFAULT
.I target
punta fuori dallo spazio di indirizzamento dell'utente.
.TP
.B EINVAL
.I target
non è un punto di mount.
Oppure
.BR umount2 ()
è stato chiamato con
.B MNT_EXPIRE
e con uno fra
.B MNT_DETACH
o
.B MNT_FORCE.
è stato chiamato con
.B MNT_EXPIRE
.TP
.B ENAMETOOLONG
Un nome di percorso è più lungo di
.BR MAXPATHLEN .
.TP
.B ENOENT
Un nome di percorso era vuoto o aveva un componente inesistente.
.TP
.B ENOMEM
Il kernel non può allocare una pagina libera in cui copiare nomi di file o dati.
.TP
.B EPERM
Il chiamante non ha i privilegi necessari.
.SH CONFORME A
Queste funzioni sono specifiche di Linux e non devono essere usate in 
programmi pensati per essere portabili.
.SH NOTE
La funzione originale
.BR umount ()
era chiamata come \fIumount(device)\fP e restituiva
.B ENOTBLK
quando non veniva chiamata da un dispositivo a blocchi.
In Linux 0.98p4 fu aggiunta una chiamata \fIumount(dir)\fP, per poter
supportare dispositivi anonimi.
In Linux 2.3.99-pre7 la chiamata \fIumount(device)\fP fu rimossa,
lasciando solo \fIumount(dir)\fP (poiché ora i dispositivi possono 
essere montati in più di un posto, così specificare il dispositivo non è sufficiente).
.SH VEDERE ANCHE
.BR mount (2),
.BR path_resolution (7),
.BR mount (8),
.BR umount (8)
.SH COLOPHON
Questa pagina fa parte del rilascio 3.11 del progetto
.I man-pages
di Linux.
Si può trovare una descrizione del progetto,
e informazioni su come riportare bachi,
presso
http://www.kernel.org/doc/man-pages/.
Per la traduzione in italiano si può fare riferimento a
http://www.pluto.it/ildp/collaborare/
