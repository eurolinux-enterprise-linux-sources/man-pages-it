.\"
.\" MAN PAGE COMMENTS to
.\"
.\"	Chet Ramey
.\"	Information Network Services
.\"	Case Western Reserve University
.\"	chet@po.cwru.edu
.\"
.\"	Last Change: Thu Sep 28 10:25:59 EDT 2006
.\"
.\" Traduzione:		Augusto Lenardi <augusto@comune.modena.it>
.\" da versione:	9 marzo 1995
.\" 			Settembre 1996
.\"
.\" Aggiornamento:	Marco Curreli <marcocurreli@tiscali.it>
.\" revisione: 		Antonio Colombo <azc100@gmail.com>
.\" da versione:	28 settembre 2006
.\"			Gennaio 2008
.\"
.\"
.\" bash_builtins, strip all but Built-Ins section
.if \n(zZ=1 .ig zZ
.if \n(zY=1 .ig zY
.TH BASH 1 "2006 September 28" "GNU Bash-3.2"
.\"
.\" There's some problem with having a `@'
.\" in a tagged paragraph with the BSD man macros.
.\" It has to do with `@' appearing in the }1 macro.
.\" This is a problem on 4.3 BSD and Ultrix, but Sun
.\" appears to have fixed it.
.\" If you're seeing the characters
.\" `@u-3p' appearing before the lines reading
.\" `possible-hostname-completions
.\" and `complete-hostname' down in READLINE,
.\" then uncomment this redefinition.
.\"
.de }1
.ds ]X \&\\*(]B\\
.nr )E 0
.if !"\\$1"" .nr )I \\$1n
.}f
.ll \\n(LLu
.in \\n()Ru+\\n(INu+\\n()Iu
.ti \\n(INu
.ie !\\n()Iu+\\n()Ru-\w\\*(]Xu-3p \{\\*(]X
.br\}
.el \\*(]X\h|\\n()Iu+\\n()Ru\c
.}f
..
.\"
.\" File Name macro.  This used to be `.PN', for Path Name,
.\" but Sun doesn't seem to like that very much.
.\"
.de FN
\fI\|\\$1\|\fP
..
.SH "NOME"
bash \- GNU Bourne-Again SHell
.SH SINTASSI
.B bash
[opzioni]
[file]
.SH COPYRIGHT
.if n Bash is Copyright (C) 1989-2005 by the Free Software Foundation, Inc.
.if t Bash is Copyright \(co 1989-2005 by the Free Software Foundation, Inc.
.SH DESCRIZIONE
.B Bash
è un interprete di linguaggio di comandi \fBsh\fR-compatibile che
esegue i comandi letti dallo standard input o da un file.
.B Bash
inoltre incorpora utili caratteristiche delle shell \fIKorn\fP e
\fIC\fP (\fBksh\fP e \fBcsh\fP).
.PP
.B Bash
è progettata per essere un'implementazione conforme alla
parte Shell and Utilities della IEEE POSIX specification
(IEEE Standard 1003.1).
.B Bash
può essere configurata per essere conforme allo standard POSIX per default.
.SH OPZIONI
In aggiunta alle opzioni della shell di un solo carattere documentate nella
descrizione del comando incorporato \fBset\fR, quando è invocata
\fBbash\fR interpreta le seguenti opzioni:
.PP
.PD 0
.TP 10
.BI \-c "\| stringa\^"
Se è presente l'opzione
.BR \-c ,
allora i comandi sono letti da
.IR stringa .
Se vi sono argomenti dopo la
.IR stringa ,
essi sono assegnati ai parametri posizionali, partendo da
.BR $0 .
.TP
.B \-i
Se è presente l'opzione
.BR \-i ,
la shell è
.IR interattiva .
.TP
.B \-l
fa sì che
.B bash
funzioni come se fosse stata invocata come una shell di login (si veda
.SM
.B INVOCAZIONE
più avanti).
.TP
.B \-r
Se l'opzione
.B \-r
è presente, la shell diventa
.I ristretta
(si veda
.SM
.B "SHELL RISTRETTA"
più avanti)
.TP
.B \-s
Se è presente l'opzione
.BR \-s ,
o se non rimane alcun argomento dopo che sono state esaminate le
opzioni, i comandi sono letti dallo standard input.
Quest'opzione permette di impostare i parametri posizionali
quando si invoca una shell interattiva.
.TP
.B \-D
Una lista di tutte le stringhe fra virgolette preceduta da
\fB$\fP è stampata sullo standard output.
Queste sono le stringhe che
sono soggette a traduzione di linguaggio quando la localizzazione
corrente non è \fBC\fP o \fBPOSIX\fP.
Questo implica l'opzione \fB\-n\fP; nessun comando verrà eseguito.
.TP
.B [\-+]O [\fIshopt_option\fP]
\fIshopt_option\fP è una delle opzioni di shell accettate dal
comando incorporato \fBshopt\fP (si veda
.SM
.B COMANDI INCORPORATI DELLA SHELL
più avanti).
Se \fIshopt_option\fP è presente, \fB\-O\fP imposta il valore di quella opzione;
\fB+O\fP lo rimuove.
Se \fIshopt_option\fP non è fornita, i nomi e i valori delle opzioni della
shell accettati da \fBshopt\fP sono stampati sullo standard output.
Se l'opzione di invocazione è \fB+O\fP, l'output è mostrato in un formato
riutilizzabile come input.
.TP
.B \-\-
Un
.B \-\-
segna la fine delle opzioni e disabilita l'ulteriore elaborazione
di opzioni.  Gli argomenti dopo il
.B \-\-
sono trattati come nomi di file e argomenti.  Un argomento di
.B \-
è equivalente a \fB\-\-\fP.
.PD
.PP
.B Bash
interpreta anche un certo numero di opzioni multicarattere.
Queste opzioni devono apparire nella riga di comando prima
delle opzioni a carattere singolo.
.PP
.PD 0
.TP
.B \-\-debugger
Dispone l'esecuzione del debugger profile
prima dell'avvio della shell.
Attiva la modalità estesa di debug (si veda la descrizione dell'opzione
.B extdebug
al comando incorporato
.B shopt
più avanti) e il tracciamento delle funzioni di shell
(si veda la descrizione dell'opzione
\fB\-o functrace\fP al comando incorporato
.B set
più avanti).
.TP
.B \-\-dump\-po\-strings
Equivalente a \fB\-D\fP, ma l'output è nel formato file
GNU \fIgettext\fP \fBpo\fP (portable object).
.TP
.B \-\-dump\-strings
Equivalente a \fB\-D\fP.
.TP
.B \-\-help
Mostra sullo standard output un messaggio sull'uso ed esce con stato di uscita 0.
.TP
\fB\-\-init\-file\fP \fIfile\fP
.PD 0
.TP
\fB\-\-rcfile\fP \fIfile\fP
.PD
Esegue comandi letti da
.I file
invece che dal file personale di inizializzazione standard
.I ~/.bashrc
se la shell è interattiva (si veda
.SM
.B INVOCAZIONE
più avanti).
.TP
.B \-\-login
Equivalente a \fB\-l\fP
.TP
.B \-\-noediting
Non usa la libreria GNU
.B readline
per leggere righe di comando quando la shell è interattiva.
.TP
.B \-\-noprofile
Non legge né il file di inizializzazione generico di sistema
.FN /etc/profile
né alcuno dei file personali di inizializzazione
.IR ~/.bash_profile ,
.IR ~/.bash_login ,
o
.IR ~/.profile .
Per default
.B bash
legge questi file quando è invocata come shell di login (si veda
.SM
.B INVOCAZIONE
più avanti).
.TP
.B \-\-norc
Non legge né esegue il file personale di inizializzazione
.I ~/.bashrc
se la shell è interattiva.
Questa opzione è attiva per default se la shell è invocata come
.BR sh .
.TP
.B \-\-posix
Cambia il comportamento di \fBbash\fP, dove le operazioni di default
differiscono dallo standard POSIX, in modo da corrispondere alla (\fImodalità posix\fP) standard.
.TP
.B \-\-ristretta
La  shell diventa ristretta (si veda
.SM
.B "SHELL RISTRETTA"
più avanti).
.TP
.B \-\-verbose
Equivalente a  \fB\-v\fP.
.TP
.B \-\-version
Mostra informazioni sulla versione di questa istanza di
.B bash
sullo standard output ed esce con stato d'uscita 0.
.PD
.SH ARGOMENTI
Se rimangono argomenti dopo che sono state elaborate le opzioni,
e né l'opzione
.B \-c
né l'opzione
.B \-s
sono state specificate, il primo argomento si assume sia
il nome di un file che contiene dei comandi di shell.  Se
.B bash
è invocata in questo modo,
.B $0
è impostato al nome del file, e i parametri posizionali
sono impostati agli argomenti che lo seguono.
.B Bash
legge ed esegue comandi da questo file, poi esce.
Lo stato d'uscita di \fBBash\fP è lo stato d'uscita dell'ultimo
comando eseguito nello script.
Se non è eseguito alcun comando lo stato d'uscita è 0.
Viene fatto un primo tentativo per aprire il file nella directory corrente, e
se non viene trovato il file la shell cerca le directory in
.SM
.B PATH
per lo script.
.SH INVOCAZIONE
Una \fIshell di login\fP è una in cui il cui primo carattere dell'argomento zero è un
.BR \- ,
o una che venga avviata con l'opzione
.BR \-\-login .
.PP
Una shell è detta \fIinterattiva\fP se è stata avviata senza argomenti
diversi dalle opzioni e senza
l'opzione
.B \-c
i cui
standard input e standard error sono
entrambi inviati a terminali (come determinato da
.IR isatty (3)),
o se viene avviata con
l'opzione
.B \-i .
.SM
.B PS1
è impostato e
.B $\-
include
.B i
se
.B bash
è interattiva, permettendo a uno script di shell o a un file di
inizializzazione di verificare questo stato.
.PP
I seguenti paragrafi descrivono come
.B bash
esegue i suoi file di inizializzazione.
Se qualcuno dei file esiste ma non può essere letto
.B bash
riporta un errore.
Le tilde sono espanse nei nomi di file come descritto più avanti sotto
.B "Espansione della tilde"
nella sezione
.SM
.B ESPANSIONE .
.PP
Quando
.B bash
è invocata come una shell di login interattiva,
o come una shell non interattiva
con l'opzione  \fB\-\-login\fP, prima legge ed
esegue comandi dal file \fI/etc/profile\fP, se quel
file esiste.
Dopo aver letto quel file, cerca \fI~/.bash_profile\fP,
\fI~/.bash_login\fP, e \fI~/.profile\fP, in quest'ordine, e legge
ed esegue comandi dal primo file che trova e che è leggibile.
L'opzione
.B \-\-noprofile
può essere usata quando si avvia la shell per inibire questo comportamento.
.PP
Quando una shell di login esce,
.B bash
legge ed esegue comandi dal file \fI~/.bash_logout\fP, se
esiste.
.PP
Quando una shell interattiva che non è una shell di login è avviata,
.B bash
legge ed esegue comandi da \fI~/.bashrc\fP, se quel file esiste.
Ciò può essere inibito utilizzando
l'opzione
.B \-\-norc .
L'opzione \fB\-\-rcfile\fP \fIfile\fP forza
.B bash
a leggere ed eseguire comandi da \fIfile\fP invece che da \fI~/.bashrc\fP.
.PP
Quando
.B bash
è avviata in modo non interattivo, per eseguire uno script di shell,
per esempio, cerca la variabile di ambiente
.SM
.B BASH_ENV
, espande il suo valore se questo esiste, e utilizza il
valore espanso come il nome di un file da leggere ed eseguire.
.B Bash
si comporta come se fossero stati eseguiti i seguenti comandi:
.sp .5
.RS
.if t \f(CWif [ \-n "$BASH_ENV" ]; then . "$BASH_ENV"; fi\fP
.if n if [ \-n "$BASH_ENV" ]; then . "$BASH_ENV"; fi
.RE
.sp .5
ma il valore della variabile
.SM
.B PATH
non è usato per cercare il nome del file.
.PP
Se
.B bash
è invocata col nome
.BR sh ,
tenta di imitare il comportamento di inizializzazione delle vecchie versioni di
.B sh
il più fedelmente possibile,
e allo stesso tempo si conforma allo standard POSIX.
Quando invocata come una shell di login interattiva, o una shell
interattiva con l'opzione \fB\-\-login\fP, per prima cosa tenta di
leggere ed eseguire i comandi da
.I /etc/profile
e
.IR ~/.profile ,
in quest'ordine.
L'opzione
.B \-\-noprofile
può essere usata per inibire questo comportamento.
Quando invocata come una shell interattiva col nome
.BR sh ,
.B bash
cerca la variabile
.SM
.BR ENV ,
espande il suo valore se questo è definito, e usa il
valore espanso come nome di un file da leggere ed eseguire.
Poiché una shell invocata come
.B sh
non tenta di leggere ed eseguire comandi da qualsiasi altro
file di inizializzazione, l'opzione
.B \-\-rcfile
non ha alcun effetto.
Una shell non interattiva invocata col nome
.B sh
non tenta di leggere nessun altro file di inizializzazione.
Quando invocata come
.BR sh ,
.B bash
lavora in modalità
.I posix
dopo che i file di inizializzazione sono stati letti.
.PP
Quando
.B bash
è avviata in modalità
.I posix
come con l'opzione
.B \-\-posix
della riga di comando, essa segue lo standard POSIX per i file di
inizializzazione.  In questa modalità la shell interattiva espande la variabile
.SM
.B ENV
e i comandi sono letti ed eseguiti dal file
il cui nome è il valore espanso.
Nessun altro file di inizializzazione viene letto.
.PP
.B Bash
cerca di determinare quando la si sta eseguendo dal demone di shell
remota, usualmente \fIrshd\fP.
Se
.B bash
determina che viene eseguito da \fIrshd\fP, legge ed esegue
comandi da \fI~/.bashrc\fP, se quel file esiste ed è leggibile.
Non fa questo se è invocata come \fBsh\fP.
L'opzione
.B \-\-norc
può essere usata per inibire questo comportamento, e l'opzione
.B \-\-rcfile
può essere usata per forzare la lettura di un altro file, ma
\fIrshd\fP solitamente non invoca la shell con queste opzioni
o non permette che siano specificate.
.PP
Se la shell è avviata con l'id effettivo dell'utente (gruppo) non uguale all'id reale
dell'utente (gruppo), e non viene fornita l'opzione \fB\-p\fP, nessun file di inizializzazione
viene letto, le funzioni di shell non vengono ereditate dall'ambiente, la variabile
.SM
.B SHELLOPTS
, se esiste nell'ambiente, viene ignorata,
e l'id effettivo dell'utente è impostata all'id reale dell'utente.
Se l'opzione \fB\-p\fP è fornita all'invocazione, il comportamento all'avvio è
il medesimo, ma l'id effettivo dell'utente non viene reimpostato.
.SH DEFINIZIONI
.PP
Le seguenti definizioni sono usate nel resto di questo
documento.
.PD 0
.TP
.B blank
Uno spazio o carattere di tabulazione (tab).
.TP
.B parola
Una sequenza di caratteri considerata come una singola unità dalla shell.
Nota anche come
.BR token .
.TP
.B nome
Una
.I parola
che consiste solo di caratteri alfanumerici e trattini di
sottolineatura, e comincia con un carattere alfabetico o un
trattino di sottolineatura.  Definita anche un
.BR identificatore .
.TP
.B metacarattere
Un carattere che, quando non quotato, separa le parole.  Uno dei seguenti:
.br
.RS
.PP
.if t \fB|  &  ;  (  )  <  >  spazio  tab\fP
.if n \fB|  & ; ( ) < > spazio tab\fP
.RE
.PP
.TP
.B operatore di controllo
Un \fItoken\fP che realizza una funzione di controllo.
È uno dei seguenti simboli:
.RS
.PP
.if t \fB\(bv\(bv  &  &&  ;  ;;  (  )  |  <newline>\fP
.if n \fB|| & && ; ;; ( ) | <newline>\fP
.RE
.PD
.SH "PAROLE RISERVATE"
Le \fIparole riservate\fP sono parole che hanno un significato speciale
per la shell.  Le seguenti parole sono riconosciute come riservate quando
non quotate e sono o la prima parola di un comando semplice (si veda
.SM
.B GRAMMATICA DELLA SHELL
più avanti) o la terza parola di un comando
.B case
o
di un comando
.B for :
.if t .RS
.PP
.B
.if n ! case  do done elif else esac fi for function if in select then until while { } time [[ ]]
.if t !    case    do    done    elif    else    esac    fi    for    function    if    in    select    then    until    while    {    }    time    [[    ]]
.if t .RE
.SH "GRAMMATICA DELLA SHELL"
.SS Comandi semplici
.PP
Un \fIcomando semplice\fP è una sequenza opzionale di assegnamenti di
variabile seguita da parole, separate da \fIblank\fP, e ridirezioni, e
terminata da un \fIoperatore di controllo\fP.  La prima parola
specifica il comando che deve essere eseguito, ed è passata come argomento zero.
Le rimanenti parole sono passate come argomenti al comando invocato.
.PP
Il valore di ritorno di un \fIcomando semplice\fP è il suo stato di
uscita, o 128+\fIn\^\fP se il comando è fatto terminare da un segnale
.IR n .
.SS Pipeline
.PP
Una \fIpipeline\fP è una sequenza di uno o più comandi separati dal
carattere
.BR | .
Il formato per una pipeline è:
.RS
.PP
[\fBtime\fP [\fB\-p\fP]] [ ! ] \fIcomando\fP [ \fB|\fP \fIcomando2\fP ... ]
.RE
.PP
Lo standard output di
.I comando
è connesso attraverso una pipe allo standard input di
.IR comando2 .
Questa connessione è effettuata prima di qualsiasi ridirezione
specificata dal comando (si veda
.SM
.B RIDIREZIONE
più avanti).
.PP
Lo stato di ritorno di una pipeline è lo stato d'uscita dell'ultimo
comando, a meno che l'opzione \fBpipefail\fP non sia abilitata.
Se \fBpipefail\fP è abilitata, lo stato di ritorno della pipeline è il
valore dell'ultimo comando (il più a destra) che esce con uno stato
diverso da zero o zero se tutti i comandi escono con successo.
Se la parola riservata
.B !
precede una pipeline, lo stato d'uscita di quella pipeline è la
negazione logica dello stato d'uscita come sopra descritto.
La shell aspetta che tutti i comandi nella pipeline
terminino prima di ritornare un valore.
.PP
Se la parola riservata
.B time
precede una pipeline, quando la pipeline termina vengono notificati
i tempi impiegati dall'utente e dal sistema
per la sua esecuzione.
L'opzione \fB\-p\fP cambia il formato di output con quello specificato
da POSIX.  La variabile
.SM
.B TIMEFORMAT
può essere impostata a una stringa di formato che specifica come le informazioni
sui tempi dovranno essere mostrate; si veda la descrizione di
.SM
.B TIMEFORMAT
sotto
.B "Variabili di shell"
più avanti.
.PP
Ogni comando in una pipeline è eseguito come un processo separato
(cioè in una subshell).
.SS Liste
.PP
Una \fIlista\fP è una sequenza di una o più pipeline separate da uno
degli operatori
.BR ; ,
.BR & ,
.BR && ,
o
.BR \(bv\(bv ,
e facoltativamente fatta terminare da uno fra
.BR ; ,
.BR & ,
o
.BR <newline> .
.PP
Di questi operatori di lista,
.B &&
e
.B \(bv\(bv
hanno uguale precedenza, seguiti da
.B ;
e
.BR &,
che hanno uguale precedenza.
.PP
Per delimitare dei comandi può essere usata in una \fIlista\fP una
sequenza di uno o più newline al posto di un punto e virgola.
.PP
Se un comando è terminato dall'operatore di controllo
.BR & ,
la shell esegue il comando in \fIbackground\fP in una subshell.  La
shell non aspetta che il comando finisca, e lo stato di ritorno è 0.
I comandi separati da un
.B ;
sono eseguiti sequenzialmente; la shell aspetta che ogni comando, in sequenza,
termini.  Lo stato di ritorno è lo stato d'uscita dell'ultimo
comando eseguito.
.PP
Gli operatori di controllo
.B &&
e
.B \(bv\(bv
denotano liste AND e liste OR, rispettivamente.
Una lista AND ha la forma
.RS
.PP
\fIcomando1\fP \fB&&\fP \fIcomando2\fP
.RE
.PP
.I comando2
è eseguito se, e solo se,
.I comando1
ritorna uno stato d'uscita di zero.
.PP
Una lista OR ha la forma
.RS
.PP
\fIcomando1\fP \fB\(bv\(bv\fP \fIcomando2\fP
.PP
.RE
.PP
.I comando2
è eseguito se e solo se
.I comando1
ritorna uno stato d'uscita diverso da zero.  Lo stato di ritorno
di liste AND e OR è lo stato d'uscita dell'ultimo comando
eseguito nella lista.
.SS Comandi composti
.PP
Un \fIcomando composto\fP è uno dei seguenti:
.TP
(\fIlista\fP)
\fIlista\fP è eseguita in un ambiente di subshell (si veda
.SM
\fBAMBIENTE DI ESECUZIONE DEI COMANDI\fP
più avanti).
Assegnamenti di variabile e comandi incorporati che influenzano
l'ambiente della shell non hanno effetto dopo che il comando
è completato.  Lo stato di ritorno è lo stato d'uscita di
\fIlista\fP.
.TP
{ \fIlista\fP; }
\fIlista\fP è semplicemente eseguita nell'ambiente di shell corrente.
\fIlista\fP deve essere fatta terminare con un newline o un punto e virgola.
Questo è conosciuto come \fIgroup command\fP.
Lo stato di ritorno è lo stato d'uscita di
\fIlista\fP.
Da notare che diversamente dai metacaratteri \fB(\fP e \fB)\fP, \fB{\fP
e \fB}\fP sono \fIparole riservate\fP e devono essere usati quando una
parola riservata è ammissibile.  Poiché esse non causano una
divisione delle parole, devono essere separate da \fIlista\fP con uno spazio.
.TP
((\fIespressione\fP))
L'\fIespressione\fP è valutata in accordo con le regole descritte
più avanti sotto
.SM
.BR "VALUTAZIONE ARITMETICA" .
Se il valore dell'espressione è diverso da zero, lo stato di ritorno è
0; altrimenti lo stato di ritorno è 1.  Questo è esattamente equivalente
a \fBlet "\fIespressione\fP"\fR.
.TP
\fB[[\fP \fIespressione\fP \fB]]\fP
Ritorna uno stato di 0 o 1 a seconda della valutazione della
espressione condizionale \fIespressione\fP.
Le espressioni sono composte dalle primitive descritte più avanti sotto
.SM
.BR "ESPRESSIONI CONDIZIONALI" .
La suddivisione in parole e l'espansione del nome di percorso non sono effettuate sulle parole
fra la \fB[[\fP e \fB]]\fP; espansione della tilde, espansione di
parametro e di variabile, espansione aritmetica,
sostituzione di comando, sostituzione di processo, e rimozione degli
apici vengono effettuate.  Gli operatori condizionali come \fB\-f\fP
devono essere senza apici per essere riconosciuti come primitive.
.if t .sp 0.5
.if n .sp 1
Quando vengono usati gli operatori \fB==\fP e \fB!=\fP, la stringa alla
destra dell'operatore è considerato un modello ed è confrontata in
accordo con le regole descritte più avanti sotto
\fBModelli di ricerca\fP.  Se l'opzione di shell
.B nocasematch
è abilitata, il confronto è effettuato senza distinzione fra
maiuscole e minuscole nei caratteri alfabetici.
Il valore di ritorno è 0 se la stringa corrisponde (\fB==\fP) o non
corrisponde (\fB!=\fP) al modello, e 1 negli altri casi.
Ogni parte del modello può essere quotato per forzarlo a essere
individuato come una stringa.
.if t .sp 0.5
.if n .sp 1
Un ulteriore operatore binario, \fB=~\fP, è disponibile con la stessa
precedenza di \fB==\fP e \fB!=\fP.
Quando viene usato, la stringa alla destra dell'operatore è considerata
un'espressione regolare estesa e confrontata come tale (come in
\fIregex\fP(3)).  Il valore di ritorno è 0 se la stringa corrisponde al
modello, e 1 negli altri casi.
Se l'espressione regolare è sintatticamente scorretta, il valore di
ritorno dell'espressione condizionale è 2.
Se l'opzione di shell
.B nocasematch
è abilitata, il confronto è effettuato senza distinguere le maiuscole
dalle minuscole nei caratteri alfabetici.
Substringhe individuate tramite subespressioni fra parentesi
all'interno dell'espressione
regolare sono salvate nella variabile array \fBBASH_REMATCH\fP.
L'elemento di \fBBASH_REMATCH\fP con indice 0 è la porzione della
stringa corrispondente all'intera espressione regolare.
L'elemento di \fBBASH_REMATCH\fP con indice \fIn\fP è la porzione
della stringa corrispondente alla subespressione fra parentesi \fIn\fPth.
.if t .sp 0.5
.if n .sp 1
Le espressioni possono essere combinate usando i seguenti operatori,
elencati in ordine inverso di precedenza:
.if t .sp 0.5
.if n .sp 1
.RS
.PD 0
.TP
.B ( \fIespressione\fP )
Ritorna il valore di \fIespressione\fP.
Questo può essere usato per modificare la normale precedenza degli operatori.
.TP
.B ! \fIespressione\fP
Vero se
.I espressione
è falsa.
.TP
\fIespressione1\fP \fB&&\fP \fIespressione2\fP
Vero se entrambe
.I espressione1
e
.I espressione2
sono vere.
.TP
.if t \fIespressione1\fP \fB\(bv\(bv\fP \fIespressione2\fP
.if n \fIespressione1\fP \fB||\fP \fIespressione2\fP
Vero se almeno una fra
.I espressione1
o
.I espressione2
è vera.
.PD
.LP
Gli operatori \fB&&\fP e
.if t \fB\(bv\(bv\fP
.if n \fB||\fP
non valutano \fIespressione2\fP se il valore di
\fIespressione1\fP è sufficiente per determinare il valore di ritorno
dell'intera espressione condizionale.
.RE
.TP
\fBfor\fP \fInome\fP [ \fBin\fP \fIparola\fP; ] \fBdo\fP \fIlista\fP ; \fBdone\fP
La lista di parole che seguono \fBin\fP è espansa, generando una lista
di elementi.
La variabile \fInome\fP è impostata, di volta in volta, a
ciascun elemento di questa lista e \fIlista\fP è eseguita ogni volta.
Se la \fBin\fP \fIparola\fP è omessa, il comando \fBfor\fP esegue
\fIlista\fP una volta per ogni parametro posizionale esistente (si veda
.SM
.B PARAMETRI
più avanti).
Lo stato di ritorno è lo stato d'uscita dell'ultimo comando eseguito.
Se l'espansione degli elementi che seguono \fBin\fP risultano in una
lista vuota, non è eseguito alcun comando, e lo stato di ritorno è 0.
.TP
\fBfor\fP (( \fIexpr1\fP ; \fIexpr2\fP ; \fIexpr3\fP )) ; \fBdo\fP \fIlista\fP ; \fBdone\fP
Prima viene valutata l'espressione aritmetica \fIexpr1\fP in
accordo con le regole descritte più avanti sotto
.SM
.BR "VALUTAZIONE ARITMETICA" .
Viene quindi valutata ripetutamente l'espressione aritmetica
\fIexpr2\fP finché non assume il valore zero.
Ogni volta che \fIexpr2\fP è diverso da zero, \fIlista\fP viene
eseguita e l'espressione aritmetica \fIexpr3\fP viene valutata.
Se qualche espressione è omessa, si suppone che abbia il valore 1.
Il valore di ritorno è lo stato d'uscita dell'ultimo comando in \fIlista\fP
che è eseguito, o falso se una qualsiasi delle espressioni non è valida.
.TP
\fBselect\fP \fInome\fP [ \fBin\fP \fIparola\fP; ] \fBdo\fP \fIlista\fP ; \fBdone\fP
La lista di parole che segue \fBin\fP è espansa, generando una lista
di elementi.  L'insieme delle parole espanse è stampato sullo standard
error, ognuna preceduta da un numero.  Se la \fBin\fP \fIparola\fP è
omessa, sono stampati i parametri posizionali (si veda
.SM
.B PARAMETRI
più avanti). È poi mostrato il prompt
.B PS3
ed è letta una riga dallo standard input.
Se la riga è contrassegnata da un numero corrispondente a una delle
parole mostrate, allora il valore di
.I nome
è impostato a quella parola.  Se la riga è vuota, le parole e il prompt
sono mostrati di nuovo.  Se viene immesso EOF [CTRL-D], il comando termina.
Qualsiasi altro valore letto fa sì che
.I nome
sia impostato al valore nullo.  La riga letta è salvata nella variabile
.BR REPLY .
La
.I lista
è eseguita dopo ciascuna selezione fino a che non sia
eseguito un comando
.B break .
Lo stato d'uscita di
.B select
è lo stato d'uscita dell'ultimo comando eseguito in
.IR lista ,
o zero se nessun comando è stato eseguito.
.TP
\fBcase\fP \fIparola\fP \fBin\fP [ [(] \fImodello\fP [ \fB|\fP \fImodello\fP ] \
... ) \fIlista\fP ;; ] ... \fBesac\fP
Un comando \fBcase\fP prima espande \fIparola\fP, e prova a confrontarla,
di volta in volta, con ognuno dei \fImodelli\fP, usando le stesse
regole di confronto dell'espansione di percorso (si veda
.B Espansione di percorso
più avanti).
La \fIparola\fP è espansa usando espansione della tilde,
espansione di parametro e di variabile, sostituzione aritmetica,
sostituzione di comando, sostituzione di processo e rimozione dei simboli di quotatura.
Ogni \fImodello\fP esaminato è espanso usando espansione della tilde,
espansione di parametro e di variabile, sostituzione aritmetica,
sostituzione di comando e sostituzione di processo.
Se l'opzione di shell
.B nocasematch
è abilitata, il confronto è effettuato senza distinzione fra
maiuscole e minuscole nei caratteri alfabetici.
Quando viene trovata una corrispondenza, viene eseguita
la \fIlista\fP a essa abbinata.  Dopo il primo confronto riuscito, non ne
viene tentato nessun altro.  Lo stato d'uscita è 0 se
nessun modello corrisponde.  Altrimenti, esso è lo stato d'uscita
dell'ultimo comando eseguito in \fIlista\fP.
.TP
\fBif\fP \fIlista\fP \fBthen\fP \fIlista\fP \
[ \fBelif\fP \fIlista\fP \fBthen\fP \fIlista\fP ] ... \
[ \fBelse\fP \fIlista\fP ] \fBfi\fP
La
.I lista
.B if
è eseguita.  Se il suo stato d'uscita è 0, è eseguita la \fIlista\fP
dopo \fBthen\fP.  Altrimenti, è eseguita a turno ciascuna \fIlista\fP
dopo \fBelif\fP, e se il suo stato d'uscita è 0, è eseguita
la corrispondente \fIlista\fP dopo \fBthen\fP e il comando termina.
Altrimenti, se presente, è eseguita, la \fIlista\fP dopo \fBelse\fP.
Lo stato d'uscita è lo stato d'uscita dell'ultimo comando eseguito, o
zero se nessuna delle condizioni considerate è risultata essere vera.
.TP
\fBwhile\fP \fIlista\fP \fBdo\fP \fIlista\fP \fBdone\fP
.PD 0
.TP
\fBuntil\fP \fIlista\fP \fBdo\fP \fIlista\fP \fBdone\fP
.PD
Il comando \fBwhile\fP esegue ripetutamente la \fIlista\fP dopo \fBdo\fP
finché l'ultimo comando in \fIlista\fP ritorna uno stato di
uscita di zero.  Il comando \fBuntil\fP è identico al comando
\fBwhile\fP, con la sola differenza che il risultato del test è negato;
la
.I lista
.B do
è eseguita finché l'ultimo comando in
.I lista
ritorna uno stato d'uscita diverso da zero.
Lo stato d'uscita dei comandi \fBwhile\fP e \fBuntil\fP
è lo stato d'uscita dell'ultimo comando eseguito nella \fIlista\fP
\fBdo\fP o zero se
non ne è stato eseguito alcuno.
.SS Definizioni della funzione di shell
.PP
Una funzione di shell è un oggetto che viene chiamato come un comando semplice ed
esegue un comando composto con una nuova serie di parametri posizionali.
Le funzioni di shell sono dichiarate in questo modo:
.TP
[ \fBfunction\fP ] \fInome\fP () \fIcomando\-composto\fP [\fIridirezione\fP]
Qui sopra si definisce una funzione chiamata \fInome\fP.
La parola riservata \fBfunction\fP è opzionale.
Se la parola riservata \fBfunction\fP è fornita, le parentesi sono opzionali.
Il \fIcorpo\fP della funzione è il comando composto
.I comando\-composto
(si veda \fBComandi composti\fP sopra).
Questo comando è usualmente una \fIlista\fP di comandi fra { e }, ma
potrebbe essere qualsiasi comando elencato in precedenza, sotto \fBComandi composti\fP.
\fIcomando\-composto\fP è eseguito ogni volta che \fInome\fP è specificato
come nome di un comando semplice.
Ogni ridirezione (si veda
.SM
.B RIDIREZIONI
più avanti) specificata quando una funzione è definita viene effettuata
quando quella funzione viene eseguita.
Lo stato d'uscita di una definizione di funzione è 0 tranne quando si verifica
un errore di sintassi o una funzione in sola lettura con lo stesso nome è già esistente.
Quando eseguita, lo stato d'uscita di una funzione è lo stato d'uscita
dell'ultimo comando eseguito nel corpo. (si veda
.SM
.B FUNZIONI
più avanti).
.SH COMMENTI
In una shell non interattiva, o in una shell interattiva in cui l'opzione
.B interactive-comments
del comando incorporato
.B shopt
è abilitata (si veda
.SM
.B "COMANDI INCORPORATI DI SHELL"
più avanti), una parola che inizia con
.B #
fa sì che la parola e tutti i rimanenti caratteri di quella riga siano
ignorati.  Una shell interattiva senza l'opzione
.B interactive-comments
abilitata non permette i commenti.  L'opzione
.B interactive_comments
è attiva per default nelle shell interattive.
.SH QUOTATURA
La \fIQuotatura\fP è usata per togliere il significato speciale, per
la shell, di certi caratteri o parole.  La quotatura può essere usata
per disabilitare il trattamento speciale per i caratteri speciali, per
impedire che le parole riservate siano riconosciute come tali, e per
prevenire l'espansione di parametro.
.PP
Ciascuno dei \fImetacaratteri\fP elencati prima sotto
.SM
.B DEFINIZIONI
ha un significato speciale per la shell e deve essere quotato se esso
deve rappresentare se stesso.
.PP
Quando vengono usati i servizi per l'espansione della cronologia dei
comandi (si veda
.SM
.B ESPANSIONE DELLA CRONOLOGIA
più avanti), il carattere di
\fIespansione della cronologia\fP, in genere \fB!\fP, dev'essere quotato
per prevenire l'espansione della cronologia.
.PP
Vi sono tre meccanismi di quotatura:
.IR "caratteri di protezione (escape)" ,
apostrofi e virgolette.
.PP
Un backslash (\fB\e\fP) non quotato è il
.IR "carattere di protezione" .
Esso attribuisce il valore letterale al successivo carattere,
con l'eccezione di <newline>.  Se vi è una coppia \fB\e\fP<newline> ,
e il backslash non è quotato, il \fB\e\fP<newline>
è trattato come una continuazione di riga (cioè, è rimosso dal flusso
di input e viene realmente ignorato).
.PP
Racchiudendo dei caratteri in apostrofi si conserva il valore letterale
di ogni carattere all'interno degli apostrofi.
Un apostrofo non può essere inserito
tra apostrofi, nemmeno preceduto da un backslash.
.PP
Racchiudere caratteri tra virgolette conserva il valore letterale
di tutti i caratteri all'interno, con le eccezioni di
.BR $ ,
.BR ` ,
.BR \e ,
e, quando l'espansione della cronologia è abilitata,
.BR ! .
I caratteri
.B $
e
.B `
conservano il loro significato speciale anche tra virgolette.  Il
backslash mantiene il suo significato speciale solo quando seguito da
uno dei seguenti caratteri:
.BR $ ,
.BR ` ,
\^\fB"\fP\^,
.BR \e
o
.BR <newline> .
Le virgolette possono essere contenute in una stringa fra virgolette
facendole precedere da un backslash.
Se abilitata, l'espansione della cronologia viene effettuata a meno che un
.B !
tra virgolette non venga protetto da un backslash.
Il backslash che precede il
.B !
non viene rimosso.
.PP
I parametri speciali
.B *
e
.B @
hanno un significato speciale quando sono
tra virgolette (si veda
.SM
.B PARAMETRI
più avanti).
.PP
Parole della forma \fB$\fP\(aq\fIstringa\fP\(aq sono trattate in modo
speciale.  La parola espande in \fIstringa\fP, coi caratteri protetti da
un backslash sostituiti come specificato dallo standard ANSI C.  Le
sequenze di protezione tramite backslash, se presenti, sono decodificate come segue:
.RS
.PD 0
.TP
.B \ea
avviso (segnale acustico)
.TP
.B \eb
backspace
.TP
.B \ee
un carattere di escape
.TP
.B \ef
salto pagina
.TP
.B \en
codice di fine riga (newline)
.TP
.B \er
carriage return
.TP
.B \et
tabulazione orizzontale
.TP
.B \ev
tabulazione verticale
.TP
.B \e\e
backslash
.TP
.B \e\(aq
apostrofo
.TP
.B \e\fInnn\fP
il carattere a otto bit il cui valore è il valore ottale \fInnn\fP
(da una a tre cifre)
.TP
.B \ex\fIHH\fP
il carattere a otto bit il cui valore è il valore esadecimale \fIHH\fP
(una o due cifre esadecimali)
.TP
.B \ec\fIx\fP
un carattere control-\fIx\fP
.PD
.RE
.LP
Il risultato espanso è racchiuso fra apostrofi come se il segno
del dollaro non fosse presente.
.PP
Una stringa fra virgolette preceduta dal segno del dollaro (\fB$\fP) causa
la traduzione della stringa conformemente alla localizzazione corrente.
Se la localizzazione corrente è \fBC\fP o \fBPOSIX\fP, il segno del
dollaro viene ignorato.
Se la stringa è tradotta e sostituita, la sostituzione è
fra virgolette.
.SH PARAMETRI
Un
.I parametro
è una entità che contiene valori.
Può essere un
.IR nome ,
un numero o uno dei caratteri speciali elencati più avanti sotto
.BR "Parametri speciali" .
Una
.I variabile
è un parametro indicato da un
.IR nome .
Una variabile ha un \fIvalore\fP e zero o più \fIattributi\fP.
Gli attributi sono assegnati utilizzando il comando incorporato
.B declare
(si veda
.B declare
più avanti in
.SM
.BR "COMANDI INCORPORATI DI SHELL" ).
.PP
Un parametro è impostato se a esso è stato assegnato un valore.
La stringa nulla è un valore valido.  Una volta che una variabile è
impostata, essa può essere rimossa solo usando il comando incorporato
.B unset
(si veda
.SM
.B COMANDI INCORPORATI DELLA SHELL
più avanti).
.PP
Una
.I variabile
può essere assegnata da una istruzione della forma
.RS
.PP
\fInome\fP=[\fIvalore\fP]
.RE
.PP
Se
.I valore
è omesso, alla variabile è assegnata la stringa nulla.  Tutti i
.I valori
sono sottoposti a espansione della tilde, espansione di parametro e
variabile, sostituzione di comando, espansione aritmetica e rimozione
dei caratteri di quotatura (si veda
.SM
.B ESPANSIONE
più avanti).  Se la variabile ha il suo attributo
.B integer
impostato, allora
.I valore
è valutato come un'espressione aritmetica anche se l'espansione del
$((...)) non è utilizzata (si veda
.B "Espansione aritmetica"
più avanti).
La suddivisione in parole non è effettuata, con l'eccezione
di \fB"$@"\fP come spiegato più avanti sotto
.BR "Parametri speciali" .
L'espansione di percorso non è effettuata.
Le istruzioni di assegnamento possono anche apparire come argomenti
per i comandi incorporati
.BR alias ,
.BR declare ,
.BR typeset ,
.BR export ,
.BR readonly
e
.B local .
.PP
Nel contesto in cui un'istruzione di assegnamento sta assegnando un valore
a una variabile di shell o a un indice di array, l'operatore += può essere usato
per accodare o aggiungere al precedente valore della variabile.
Quando += è applicato a una variabile per la quale l'attributo integer è stato
impostato, \fIvalore\fP è valutato come un'espressione aritmetica e aggiunto
al valore corrente della variabile, che è a sua volta valutata.
Quando += è applicato a una variabile array usando assegnamenti composti (si veda
.B Array
più avanti), il valore della variabile non è rimosso
(com'è quando si usa =), e nuovi valori sono aggiunti alla fine
dell'array iniziando dal massimo indice di array aumentato di uno.
Quando applicata a una variabile valutata come stringa, \fIvalore\fP è
espanso e accodato al valore della variabile.
.SS Parametri posizionali
.PP
Un
.I parametro posizionale
è un parametro il cui nome è indicato da una o più cifre, diverse dalla
singola cifra 0.  I parametri posizionali sono assegnati dagli argomenti
della shell quando questa è invocata, e possono essere riassegnati usando
il comando incorporato
.B set .
I parametri posizionali non possono essere assegnati con istruzioni di
assegnamento.  I parametri posizionali sono temporaneamente sostituiti
quando è eseguita una funzione di shell (si veda
.SM
.B FUNZIONI
più avanti).
.PP
Quando si espande un parametro posizionale composto da più di una
sola cifra, esso deve essere racchiuso tra parentesi graffe (si veda
.SM
.B ESPANSIONE
più avanti).
.SS Parametri speciali
.PP
La shell tratta molti parametri in modo speciale.  Questi parametri
possono solo essere referenziati; la loro modifica non è permessa.
.PD 0
.TP
.B *
Si espande nei parametri posizionali, a partire dal primo.  Quando
l'espansione avviene tra virgolette, si espande in una singola
parola contenente il valore di ciascun parametro separato dagli
altri dal primo carattere della variabile speciale
.SM
.BR IFS .
Cioè, ``\fB$*\fP'' è equivalente
a ``\fB$1\fP\fIc\fP\fB$2\fP\fIc\fP\fB...\fP'', dove
.I c
è il primo carattere del valore della variabile
.SM
.BR IFS .
Se
.SM
.B IFS
viene annullato, i parametri sono separati da spazi.
Se
.SM
.B IFS
è nulla, i parametri sono uniti senza alcun separatore.
.TP
.B @
Si espande nei parametri posizionali, a partire dal primo.  Quando
l'espansione avviene tra virgolette, ogni parametro si espande in una
parola separata.  Cioè, "\fB$@\fP" è equivalente a
"\fB$1\fP" "\fB$2\fP" ...
Se l'espansione fra virgolette avviene all'interno di una parola,
l'espansione del primo parametro è unita con la parte iniziale della
parola originale, e l'espansione dell'ultimo parametro è unita con
la parte finale della parola originale.
Quando non vi è alcun parametro posizionale, "\fB$@\fP" e
.B $@
si espandono come stringa nulla (cioè, sono rimossi).
.TP
.B #
Si espande nel numero di parametri posizionali espresso come numero decimale.
.TP
.B ?
Si espande nello stato della pipeline eseguita più recentemente
senza rilasciare il controllo del terminale.
.TP
.B \-
Si espande nei flag di opzione correnti come specificato in base alla
chiamata, dal comando incorporato
.BR set ,
o in quelli impostati dalla shell stessa
(come l'opzione
.B \-i
).
.TP
.B $
Si espande nell'ID di processo della shell.  In una subshell (),
si espande nell'ID di processo della shell corrente, non in quello della
subshell.
.TP
.B !
Si espande nell'ID di processo del comando in background (asincrono)
più recentemente eseguito.
.TP
.B 0
Si espande nel nome della shell o script di shell.  Questo è impostato
alla inizializzazione della shell.  Se
.B bash
è chiamata con un file di comandi,
.B $0
è impostato al nome di quel file.  Se
.B bash
è avviata con l'opzione
.BR \-c ,
allora
.B $0
è impostato al primo argomento dopo la stringa che deve essere
eseguita, se presente.  Altrimenti, è impostato
al percorso usato per chiamare
.BR bash ,
come dato dall'argomento zero.
.TP
.B _
All'avvio della shell, impostato al nome di percorso assoluto usato
per invocare la shell o lo script di shell che è eseguito
come passato nell'ambiente o nella lista di argomenti.
Successivamente, si espande nell'ultimo argomento del precedente
comando, dopo l'espansione.
È anche impostato al nome completo usato per invocare ogni comando
eseguito e messo nell'ambiente esportato verso quel comando.
Mentre si controlla la posta, questo parametro contiene il nome del file
del messaggio attualmente in esame.
.PD
.SS Variabili di shell
.PP
Le seguenti variabili sono impostate dalla shell:
.PP
.PD 0
.TP
.B BASH
Si espande al nome completo usato per chiamare questa istanza di
.BR bash .
.TP
.B BASH_ARGC
Una variabile di array i cui valori sono il numero di parametri in ogni
frame del corrente stack delle chiamate di esecuzione di bash.
Il numero di parametri
della subroutine corrente (funzione di shell o script eseguito
con \fB.\fP o \fBsource\fP) è in cima allo stack.
Quando viene eseguita una subroutine, il numero di parametri passati
è messo in cima a \fBBASH_ARGC\fP.
La shell imposta \fBBASH_ARGC\fP solo quando è in modalità estesa
di debugging (si veda la descrizione dell'opzione
.B extdebug
per il comando incorporato
.B shopt
più avanti)
.TP
.B BASH_ARGV
Una variabile di array contenente tutti i parametri nel corrente
stack delle chiamate di esecuzione di bash.  Il parametro finale
dell'ultima chiamata di subroutine è in cima allo stack; il primo parametro
della chiamata iniziale è in fondo.  Quando una subroutine viene
eseguita, i parametri forniti sono messi in cima a \fBBASH_ARGV\fP.
La shell imposta \fBBASH_ARGV\fP solo quando è in modalità estesa di
debugging (si veda la descrizione dell'opzione
.B extdebug
al comando incorporato
.B shopt
più avanti)
.TP
.B BASH_COMMAND
Il comando attualmente in esecuzione o in procinto di essere eseguito, a
meno che la shell non stia eseguendo un comando come risultato di un'intercettazione di segnale
(trap), nel qual caso è il comando in esecuzione al momento dell'intercettazione.
.TP
.B BASH_EXECUTION_STRING
L'argomento per il comando all'invocazione dell'opzione \fB\-c\fP.
.TP
.B BASH_LINENO
Una variabile array i cui elementi sono i numeri di riga nei file
di origine corrispondenti a ciascun elemento di \fBFUNCNAME\fP.
\fB${BASH_LINENO[\fP\fI$i\fP\fB]}\fP è il numero di riga nel file
di origine dove \fB${FUNCNAME[\fP\fI$ifP\fB]}\fP è stato chiamato.
Il nome del file di origine corrispondente è \fB${BASH_SOURCE[\fP\fI$i\fP\fB]}\fB.
Usare \fBLINENO\fP per ottenere il numero di riga corrente.
.TP
.B BASH_REMATCH
Una variabile array i cui elementi sono assegnati dall'operatore
binario \fB=~\fP al comando condizionale \fB[[\fP.
L'elemento con indice 0 è la porzione della stringa
che corrisponde all'intera espressione regolare.
L'elemento con indice \fIn\fP è la porzione della stringa
che corrisponde alla  \fIn\fP-sima subespressione fra parentesi.
La variabile è in sola lettura.
.TP
.B BASH_SOURCE
Una variabile array i cui elementi sono i nomi dei file da cui provengono
gli elementi nella variabile array \fBFUNCNAME\fP.
.TP
.B BASH_SUBSHELL
Incrementato di uno ogni volta che una subshell o un ambiente di
subshell è stato creato dalla shell originale.  Il valore iniziale è 0.
.TP
.B BASH_VERSINFO
Una variabile array in sola lettura i cui elementi danno informazioni
sulla versione di quest'istanza di
.BR bash .
I valori assegnati ai membri dell'array sono come segue:
.sp .5
.RS
.PD 0
.TP 24
.B BASH_VERSINFO[\fR0\fP]
Il numero di versione principale(la \fIrelease\fP).
.TP
.B BASH_VERSINFO[\fR1\fP]
Il numero di versione secondario (la \fIversione\fP).
.TP
.B BASH_VERSINFO[\fR2\fP]
Il livello di aggiornamento tramite patch.
.TP
.B BASH_VERSINFO[\fR3\fP]
La versione di compilazione.
.TP
.B BASH_VERSINFO[\fR4\fP]
Lo stato della release (ad es., \fIbeta1\fP).
.TP
.B BASH_VERSINFO[\fR5\fP]
Il valore di \fBMACHTYPE\fP.
.PD
.RE
.TP
.B BASH_VERSION
Si espande in una stringa che descrive la versione di questa istanza di
.BR bash .
.TP
.B COMP_CWORD
Un indice in \fB${COMP_WORDS}\fP della parola contenente la posizione
corrente del cursore.
Questa variabile è disponibile solo nelle funzioni di shell
invocate dalle risorse di completamento programmabile
(si veda \fBCompletamento programmabile\fP più avanti).
.TP
.B COMP_LINE
La riga di comando corrente.
Questa variabile è disponibile solo nelle funzioni di shell e nei
comandi esterni invocati dai servizi di completamento programmabile
(si veda
\fBCompletamento programmabile\fP più avanti).
.TP
.B COMP_POINT
L'indice della posizione corrente del cursore relativa
all'inizio del comando corrente.
Se la posizione corrente del cursore è alla fine del comando corrente,
il valore di questa variabile è uguale a \fB${#COMP_LINE}\fP.
Questa variabile è disponibile solo nelle funzioni di shell e
comandi esterni invocati dai servizi
di completamento programmabile (si veda
\fBCompletamento programmabile\fP più avanti).
.TP
.B COMP_WORDBREAKS
L'insieme dei caratteri che la libreria Readline tratta come
separatori di parola nell'effettuare il completamento di parola.
Se
.SM
.B COMP_WORDBREAKS
viene annullata, perde le sue proprietà speciali, anche se è
poi reimpostata.
.TP
.B COMP_WORDS
Una variabile array (si veda \fBArray\fP più avanti) che è composta
dalle singole parole nella riga di comando corrente.
Le parole sono divise anche dai metacaratteri della shell poiché
l'analizzatore della shell li considererebbe a parte.
Questa variabile è disponibile solo nelle funzioni di shell e
comandi esterni invocati dai servizi di completamento programmabile
(si veda \fBProgrammable Completion\fP più avanti).
.TP
.B DIRSTACK
Una variabile array (si veda
.B Array
più avanti) che contiene il contenuto corrente dello stack delle
directory.  Le directory appaiono nello stack nell'ordine in cui sono
mostrate dal comando incorporato
.B dirs .
L'assegnamento agli elementi di questa variabile array può essere usato
per modificare le directory già nello stack, ma i comandi incorporati
.B pushd
e
.B popd
devono essere usati per aggiungere e rimuovere directory.
L'assegnamento a questa variabile non cambia la directory corrente.
Se
.SM
.B DIRSTACK
viene annullata, perde le sue proprietà speciali, anche se è
poi reimpostata.
.TP
.B EUID
Espande all'ID-utente effettivo dell'utente corrente, inizializzata
all'avvio della shell.  Questa variabile è in sola lettura.
.TP
.B FUNCNAME
Una variabile array contenente i nomi di tutte le funzioni di shell
attualmente nello stack delle chiamate di esecuzione.
L'elemento con indice 0 è il nome della funzione di shell
attualmente in esecuzione.
L'elemento più in basso di tutti è "main".
Questa variabile esiste solo quando è in esecuzione una funzione di
shell.  Assegnamenti a
.SM
.B FUNCNAME
non hanno alcun effetto e ritornano uno stato di errore.
Se
.SM
.B FUNCNAME
viene annullata, perde le sue proprietà speciali, anche se è
poi reimpostata.
.TP
.B GROUPS
Una variabile array contenente l'elenco dei gruppi dei quali
è membro l'utente corrente.
Assegnamenti a
.SM
.B GROUPS
non hanno alcun effetto e ritornano uno stato di errore.
Se
.SM
.B GROUPS
viene annullata, perde le sue proprietà speciali, anche se è
poi reimpostata.
.TP
.B HISTCMD
Il numero di cronologia, o indice nella lista della cronologia, del
comando corrente.
Se
.SM
.B HISTCMD
viene annullata, perde le sue proprietà speciali, anche se è
poi reimpostata.
.TP
.B HOSTNAME
Automaticamente impostata al nome dell'host corrente.
.TP
.B HOSTTYPE
Automaticamente impostata a una stringa che univocamente descrive
il tipo di macchina su cui
.B bash
è in esecuzione.
Il valore di default è dipendente dal sistema.
.TP
.B LINENO
Ogni volta che questo parametro è referenziato, la shell gli assegna un
numero decimale che rappresenta il numero di sequenza della riga
corrente (partendo da 1) all'interno di uno script o funzione.  Quando
non in uno script o funzione, non è garantito che il valore restituito
sia significativo.
Se
.SM
.B LINENO
viene annullata, perde le sue proprietà speciali, anche se è
poi reimpostata.
.TP
.B MACHTYPE
Automaticamente impostata a una stringa che descrive completamente il tipo
di sistema sul quale
.B bash
è in esecuzione, nel formato standard GNU \fIcpu-company-system\fP.
Il valore di default è dipendente dal sistema.
.TP
.B OLDPWD
La precedente directory di lavoro come impostata
dal comando
.BR cd .
.TP
.B OPTARG
Il valore dell'ultimo argomento opzione elaborato dal comando incorporato
.B getopts
(si veda
.SM
.B COMANDI INCORPORATI DELLA SHELL
più avanti).
.TP
.B OPTIND
L'indice del prossimo argomento che dev'essere elaborato dal comando
incorporato
.B getopts
(si veda
.SM
.B COMANDI INCORPORATI DELLA SHELL
più avanti).
.TP
.B OSTYPE
Automaticamente impostata a una stringa che
descrive il sistema operativo su cui
.B bash
è in esecuzione.
Il valore di default è dipendente dal sistema.
.TP
.B PIPESTATUS
Una variabile array (si veda
.B Array
più avanti) contenente un elenco di valori di stato d'uscita dai
processi nelle pipeline eseguite più recentemente in primo piano [cioè senza rilasciare
il controllo del terminale] (può contenere anche un solo comando).
.TP
.B PPID
L'ID di processo del genitore della shell.  Questa variabile è in sola lettura.
.TP
.B PWD
La directory di lavoro corrente come impostata dal comando
.BR cd .
.TP
.B RANDOM
Ogni volta che questo parametro è referenziato, viene generato un
numero intero casuale
fra 0 e 32767.
La sequenza di numeri casuali
può essere inizializzata assegnando un valore a
.SM
.BR RANDOM .
Se
.SM
.B RANDOM
viene annullata, perde le sue proprietà speciali, anche se è
poi reimpostata.
.TP
.B REPLY
Impostata alla riga di input letta dal comando incorporato
.B read
quando nessun argomento è specificato.
.TP
.B SECONDS
Ogni volta che questo parametro è referenziato, viene restituito il
numero di secondi trascorsi dalla chiamata della shell.
Se un valore è assegnato a
.SM
.BR SECONDS ,
il valore restituito in base ai riferimenti successivi
è il numero di secondi trascorsi
dall'assegnamento più il valore assegnato.
Se
.SM
.B SECONDS
viene annullata, perde le sue proprietà speciali, anche se è
poi reimpostata.
.TP
.B SHELLOPTS
Una lista, separata da due punti, di opzioni di shell abilitate.  Ogni
parola nella lista è un argomento valido per l'opzione
.B \-o
al comando incorporato
.B set
(si veda
.SM
.B "COMANDI INCORPORATI DI SHELL"
più avanti).  Le opzioni che appaiono in
.SM
.B SHELLOPTS
sono quelle indicate come
.I on
da \fBset \-o\fP.
Se questa variabile è nell'ambiente quando
.B bash
viene avviata, ogni opzione di shell nella lista viene abilitata prima
di leggere un qualsiasi file di avvio.
Questa variabile è in sola lettura.
.TP
.B SHLVL
È incrementato di uno ogni volta che una istanza di
.B bash
viene avviata.
.TP
.B UID
Si espande all'ID-utente dell'utente corrente, inizializzato all'avvio
della shell.  Questa variabile è in sola lettura.
.PD
.PP
Le seguenti variabili sono usate dalla shell.  In alcuni casi,
.B bash
assegna un valore di default a una variabile; questi casi sono
elencati più avanti.
.PP
.PD 0
.TP
.B BASH_ENV
Se questo parametro è impostato quando \fBbash\fP sta eseguendo uno
script di shell, il suo valore è interpretato come un nome di file
contenente comandi per inizializzare la shell, come in
.IR ~/.bashrc .
Il valore di
.SM
.B BASH_ENV
è soggetto a espansione di parametro, sostituzione di comando ed
espansione aritmetica prima di essere interpretato come un nome di file.
.SM
.B PATH
non è usato per cercare il nome di file risultante.
.TP
.B CDPATH
Il percorso di ricerca
per il comando
.BR cd .
Questo è un elenco di directory, separate da due punti, nelle quali la
shell cerca le directory di destinazione specificate
dal comando
.BR cd .
Un valore di esempio è
.if t \f(CW".:~:/usr"\fP.
.if n ".:~:/usr".
.TP
.B COLUMNS
Usato dal comando incorporato \fBselect\fP per determinare il numero di
colonne del terminale nella stampa delle liste di selezione.
Automaticamente re-impostata al ricevimento di un segnale SIGWINCH.
.TP
.B COMPREPLY
Una variabile array dalla quale \fBbash\fP legge i possibili completamenti
generati da una funzione di shell invocata dal servizio di completamento
programmabile (si veda \fBCompletamento programmabile\fP più avanti).
.TP
.B EMACS
Se \fBbash\fP trova questa variabile d'ambiente alla partenza
della shell col valore
.if t \f(CWt\fP,
.if n "t",
presume che la shell sia in esecuzione in un buffer di shell
emacs e disabilita la modifica della riga.
.TP
.B FCEDIT
L'editor di default per il
comando incorporato
.BR fc .
.TP
.B FIGNORE
Una lista di suffissi, separati da due punti, da ignorare quando si
effettua il completamento del nome di file (si veda
.SM
.B READLINE
più avanti).
Un nome di file il cui suffisso corrisponde a una delle voci in
.SM
.B FIGNORE
è escluso dalla lista dei nomi di file individuati.
Un valore di esempio è
.if t \f(CW".o:~"\fP.
.if n ".o:~".
.TP
.B GLOBIGNORE
Una lista di modelli, separati da due punti, che definiscono l'insieme
dei nomi di file che l'espansione del nome di percorso deve ignorare.
Se un nome di file individuato da un modello di espansione del
percorso corrisponde anche a uno dei modelli in
.SM
.BR GLOBIGNORE ,
viene rimosso dalla lista dei nomi da individuare.
.TP
.B HISTCONTROL
Una lista di valori, separati da due punti, che controllano come i
comandi vengono salvati nell'elenco della cronologia.
Se la lista di valori include
.IR ignorespace ,
le righe che iniziano con un carattere di
.B spazio
non vengono salvate nell'elenco della cronologia.
Un valore di
.I ignoredups
fa sì che non venga salvata ogni riga uguale all'elemento
precedente della cronologia.  Un valore di
.I ignoreboth
è la combinazione di \fIignorespace\fP e \fIignoredups\fP.
Un valore di
.IR erasedups
fa sì che tutte le righe uguali alla riga corrente
vengano rimosse dall'elenco della cronologia prima che la riga venga
salvata.  Qualsiasi valore che non è nella lista di cui sopra è ignorato.
Se \fBHISTCONTROL\fP viene annullato o non include un valore valido,
tutte le righe lette dall'analizzatore sintattico della shell sono
salvate nell'elenco della cronologia, a meno che non sia stato specificato
.BR HISTIGNORE .
La seconda riga e le successive di un comando composto multiriga non
vengono controllate, e sono aggiunte alla cronologia indipendentemente dal valore di
.BR HISTCONTROL .
.TP
.B HISTFILE
Il nome del file nel quale è salvata la cronologia dei comandi (si veda
.SM
.B CRONOLOGIA
più avanti).  Il valore predeterminato è \fI~/.bash_history\fP.  Se
è annullato la cronologia dei comandi non è salvata al termine di
una shell interattiva.
.TP
.B HISTFILESIZE
Il numero massimo di righe contenute nel file della cronologia.  Quando
a questa variabile è assegnato un valore, il file della cronologia è
accorciato, se necessario, rimuovendo le voci più vecchie, per contenere
non più di quel numero di righe.  Il valore di default è 500.
Il file della cronologia è inoltre troncato a questa dimensione dopo
la scrittura al termine di una shell interattiva.
.TP
.B HISTIGNORE
Una lista di modelli separati da due punti usata per decidere quali
righe di comando devono essere salvate nell'elenco della cronologia.
Ogni modello comincia all'inizio della riga e deve corrispondere
alla riga completa (nessun `\fB*\fP' implicito è aggiunto).  Ogni
modello è confrontato con la riga dopo che i controlli specificati da
.B HISTCONTROL
sono stati applicati.  In aggiunta ai normali modelli di shell che
confrontano caratteri, `\fB&\fP' designa la linea precedente
della cronologia.  `\fB&\fP' può essere protetto usando un backslash;
il backslash è rimosso prima di eseguire un confronto.  La seconda riga
e le successive di un comando composto multiriga non vengono controllate,
e sono aggiunte alla cronologia indipendentemente dal valore di
.BR HISTIGNORE .
.TP
.B HISTSIZE
Il numero di comandi da memorizzare nella cronologia dei comandi (si veda
.SM
.B CRONOLOGIA
più avanti).  Il valore di default è 500.
.TP
.B HISTTIMEFORMAT
Se questa variabile è impostata e non nulla, il suo valore è usato come
stringa di formato per \fIstrftime\fP(3) per stampare l'informazione
"data e ora" associata a ogni voce della cronologia mostrata dal comando
incorporato \fBhistory\fP.  Se questa variabile è impostata, data e ora
verranno scritte nel file della cronologia in modo da essere disponibili
anche in successive sessioni della shell.
.TP
.B HOME
La home directory dell'utente corrente; l'argomento di default per il
comando incorporato \fBcd\fP.
Il valore di questa variabile è anche usata quando si effettua l'espansione della tilde.
.TP
.B HOSTFILE
Contiene il nome di un file nello stesso formato di
.FN /etc/hosts
che dovrà essere letto quando la shell ha bisogno di completare un
nome di host.
La lista dei possibili completamenti di nome di host può essere
cambiata mentre la shell è in esecuzione;
alla prossima occasione in cui si tenta il completamento
del nome di host dopo che è cambiato il valore,
.B bash
aggiunge il contenuto del nuovo file alla lista esistente.
Se
.SM
.B HOSTFILE
è impostato ma non ha alcun valore, \fBbash\fP tenta di leggere
.FN /etc/hosts
per ottenere la lista dei possibili completamenti del nome di host.
Quando
.SM
.B HOSTFILE
viene annullato, la lista dei nomi di host viene pure annullata.
.TP
.B IFS
L'
.I Internal Field Separator
(separatore di campo interno) è usato per la suddivisione
in parole dopo l'espansione e per dividere le righe in parole
quando si esegue il comando incorporato
.BR read .
Il valore di default è
``<space><tab><newline>''.
.TP
.B IGNOREEOF
Controlla l'azione della shell
al ricevimento di un carattere
.SM
.B EOF
come unico contenuto di una riga di input.  Se impostato, il valore
è il numero di caratteri
.SM
.B EOF
consecutivi da battere come primo carattere su una riga di input
prima che
.B bash
esca.  Se la variabile esiste ma non ha un valore numerico, o non ha
alcun valore, il valore di default è 10.  Se non esiste,
.SM
.B EOF
indica la fine dell'input per la shell.
.TP
.B INPUTRC
Il nome di file per il file di avvio di
.B readline
che prevale sul valore di default che è
.FN ~/.inputrc
(si veda
.SM
.B READLINE
più avanti).
.TP
.B LANG
Usata per determinare la categoria di localizzazione per qualsiasi categoria
non specificatamente specificata da una delle variabili che iniziano con \fBLC_\fP.
.TP
.B LC_ALL
Questa variabile prevale sul valore di \fBLANG\fP e su qualsiasi altra
variabile \fBLC_\fP che specifichi una categoria di localizzazione.
.TP
.B LC_COLLATE
Questa variabile determina l'ordine di collazione usato quando vengono
ordinati i risultati dell'espansione di nome di percorso, e determina
il comportamento di espressioni di intervallo, classi di equivalenza
e sequenze di ordinamento all'interno dell'espansione di nome di percorso
e della corrispondenza tra stringhe.
.TP
.B LC_CTYPE
Questa variabile determina l'interpretazione di caratteri e il
comportamento di classi di caratteri all'interno dell'espansione
di nome di percorso e della corrispondenza tra stringhe.
.TP
.B LC_MESSAGES
Questa variabile determina la localizzazione usata per tradurre
stringhe tra virgolette precedute da un \fB$\fP.
.TP
.B LC_NUMERIC
Questa variabile determina la categoria di localizzazione usata per la formattazione dei numeri.
.TP
.B LINES
Usato dal comando incorporato \fBselect\fP per determinare il numero di
linee del terminale nella stampa delle liste di selezione.
Automaticamente re-impostata al ricevimento di un segnale SIGWINCH.
.TP
.B MAIL
Se questo parametro è impostato a un nome di file e la variabile
.SM
.B MAILPATH
non è impostata,
.B bash
informa l'utente dell'arrivo di posta nel file specificato.
.TP
.B MAILCHECK
Specifica la frequenza
(in secondi) con cui
.B bash
controlla la posta.  Il valore di default è 60 secondi.  Quando è il momento di
controllare la posta, la shell lo fa prima di mostrare il prompt primario.
Se questa variabile non è impostata, o è impostata a un valore che non sia
un numero maggiore o uguale a zero, la shell disabilita il controllo della posta.
.TP
.B MAILPATH
Una lista di nomi di file separati da due punti, da usare per il
controllo della posta.  Il messaggio che deve essere stampato all'arrivo
dei messaggi in un particolare file può essere specificato separando il
nome del file dal messaggio con un `?'.  Quando viene usato nel testo
del messaggio \fB$_\fP è espanso al nome del file di posta corrente.
Per esempio:
.RS
.PP
\fBMAILPATH\fP=\(aq/var/mail/bfox?"You have mail":~/shell\-mail?"$_ has mail!"\(aq
.PP
.B Bash
fornisce un valore di default per questa variabile, ma il posizionamento
dei file di posta degli utenti utilizzato è dipendente dal sistema (per esempio, /var/mail/\fB$USER\fP).
.RE
.TP
.B OPTERR
Se impostato al valore 1,
.B bash
mostra i messaggi di errore generati dal comando incorporato
.B getopts
(si veda
.SM
.B COMANDI INCORPORATI DELLA SHELL
più avanti).
.SM
.B OPTERR
è inizializzato ad 1 ogni volta che viene invocata la shell o
viene eseguito uno script di shell.
.TP
.B PATH
Il percorso di ricerca dei comandi. È un elenco di directory
separate da due punti, nelle quali la shell cerca i comandi
(si veda
.SM
.B ESECUZIONE DEI COMANDI
più avanti).  Un nome di directory di lunghezza zero (nulla) nel
valore di \fBPATH\fP indica la directory corrente.
Un nome di directory nullo può apparire come una serie
di due punti adiacenti,
o come due punti all'inizio o alla fine.
Il percorso di default è dipendente dal sistema
ed è impostato dall'amministratore che installa
.BR bash .
Un valore frequente è
.if t \f(CW/usr/gnu/bin:/usr/local/bin:/usr/ucb:/bin:/usr/bin\fP.
.if n ``/usr/gnu/bin:/usr/local/bin:/usr/ucb:/bin:/usr/bin''.
.TP
.B POSIXLY_CORRECT
Se questa variabile è presente nell'ambiente quando viene avviata \fBbash\fP, la shell
entra in \fImodalità posix\fP prima di leggere i file di avvio, come se l'opzione di invocazione
.B \-\-posix
fosse stata specificata.  Se è impostata mentre la shell è in esecuzione,
\fBbash\fP abilita la \fImodalità posix\fP, come se il comando
.if t \f(CWset -o posix\fP
.if n \fIset -o posix\fP
fosse stato eseguito.
.TP
.B PROMPT_COMMAND
Se impostato, il valore è eseguito ogni volta come un comando
prima di scrivere il prompt primario.
.TP
.B PS1
Il valore di questo parametro è espanso (si veda
.SM
.B STRINGHE DI PROMPT
più avanti) e usato come stringa del prompt primario.
Il valore di default è``\fB\es\-\ev\e$ \fP''.
.TP
.B PS2
Il valore di questo parametro è espanso allo stesso modo di
.B PS1
ed è usato come stringa di prompt secondario.  Il valore di default è
``\fB> \fP''.
.TP
.B PS3
Il valore di questo parametro è usato come prompt per il comando
.I select
(si veda
.SM
.B GRAMMATICA DELLA SHELL
sopra).
.TP
.B PS4
Il valore di questo parametro è espanso allo stesso modo di
.B PS1
ed il valore è stampato prima di ogni comando che
.B bash
mostra durante un trace di esecuzione.  Il primo carattere di
.SM
.B PS4
è replicato tante volte, quanto necessario, per indicare livelli
multipli di indirezione.  Il valore di default è ``\fB+ \fP''.
.TP
.B SHELL
In questa variabile d'ambiente è contenuto il percorso completo della
shell.  Se non è impostata quando la shell viene avviata,
.B bash
le assegna il percorso completo della shell di login dell'utente corrente.
.TP
.B TIMEFORMAT
Il valore di questo parametro è usato come stringa di formato per
specificare come dovrà essere mostrata l'informazione su data e ora
per pipeline aventi come prefisso la parola riservata
.B time
.
Il carattere \fB%\fP introduce una sequenza di formattazione che è espansa
a un valore di data e ora o ad altre informazioni.
Le sequenze di formattazione e il loro significato sono i seguenti; le
parentesi quadre denotano parti opzionali.
.sp .5
.RS
.PD 0
.TP 10
.B %%
Una \fB%\fP letterale.
.TP
.B %[\fIp\fP][l]R
Il tempo trascorso in secondi.
.TP
.B %[\fIp\fP][l]U
Il numero di secondi di utilizzo della CPU in modalità utente.
.TP
.B %[\fIp\fP][l]S
Il numero di secondi di utilizzo della CPU in modalità sistema.
.TP
.B %P
La percentuale di utilizzo della CPU, calcolata come (%U + %S) / %R.
.PD
.RE
.IP
La parte opzionale \fIp\fP è una cifra che specifica la
\fIprecisione\fP, il numero di cifre frazionali dopo il separatore
decimale.  Un valore pari a 0 fa sì che nessun separatore decimale o
frazione venga inserito nell'output.
Possono essere specificate al massimo tre posizioni dopo il separatore
decimale; valori di \fIp\fP maggiori di 3 sono cambiati a 3.
Se \fIp\fP non è specificato è utilizzato il valore 3.
.IP
La parte opzionale \fBl\fP specifica un formato più lungo, inclusi
i minuti, nella forma \fIMM\fPm\fISS\fP.\fIFF\fPs.
Il valore di \fIp\fP determina se la frazione è inclusa o meno.
.IP
Se questa variabile non è impostata, \fBbash\fP agisce come se avesse
il valore \fB$\(aq\enreal\et%3lR\enuser\et%3lU\ensys\t%3lS\(aq\fP.
Se il valore è nullo, non viene mostrata alcuna informazione di tempo.
Una newline finale è aggiunta quando la stringa di formato è visualizzata.
.TP
.B TMOUT
Se impostato a un valore maggiore di zero, \fBTMOUT\fP è trattato
come il tempo limite (timeout) di default per il comando incorporato \fBread\fP.
Il comando  \fBselect\fP viene terminato se non riceve input dopo
\fBTMOUT\fP secondi quando l'input è chiesto a un terminale.
In una shell interattiva il valore è interpretato come il numero di
secondi di attesa per l'input dopo l'emissione del prompt
primario.  Se l'input non arriva
.B Bash
termina dopo aver aspettato per quel numero di secondi.
.TP
.B TMPDIR
Se impostato, \fBBash\fP usa il suo valore come nome della directory
nella quale \fBBash\fP crea file temporanei a uso della shell.
.TP
.B auto_resume
Questa variabile controlla il modo con cui la shell interagisce con
l'utente e con il job-control.  Se questa variabile è impostata,
dei comandi semplici composti da una sola parola senza ridirezioni
sono considerati come candidati per la ripresa di un job in esecuzione
che sia stato sospeso.  Non è possibile alcuna ambiguità; se vi è più di
un job che comincia con la stringa digitata, è scelto il job su cui si
è effettuato l'accesso più recentemente.  Il
.I nome
di un job sospeso, in questo contesto, è la riga di comando usata
per avviarlo.
Se impostato al valore
.IR exact ,
la stringa fornita deve essere esattamente uguale al nome di un job
fermo; se impostato a
.IR substring ,
la stringa fornita deve combaciare con una substringa del nome di un
job sospeso.  Il valore
.I substring
fornisce funzionalità analoghe all'identificatore del job
.B %?
(si veda
.SM
.B JOB CONTROL
più avanti).  Se impostato a qualsiasi altro valore, la stringa fornita
deve essere un prefisso del nome di un job sospeso; questo consente
funzionalità analoghe all'identificatore di job \fB%\fP\fIstring\fP
.TP
.B histchars
Sono i due o tre caratteri che controllano l'espansione della cronologia
e la suddivisione in token (si veda
.SM
.B ESPANSIONE DELLA CRONOLOGIA
più avanti).  Il primo carattere è il carattere di
\fIespansione della cronologia\fP, il carattere che segnala l'inizio
di una espansione della cronologia, normalmente `\fB!\fP'.
Il secondo carattere è il carattere di \fIsostituzione rapida\fP,
che è usato come scorciatoia per rieseguire il comando precedentemente
inserito, sostituendo una stringa con un'altra nel comando.  Il valore
di default è `\fB^\fP'.  Il terzo carattere, opzionale, è il carattere
che indica che il resto della riga è un commento, quando è trovato come
primo carattere di una parola, normalmente `\fB#\fP'.  Il carattere di
commento della cronologia fa sì che la sostituzione della cronologia
venga saltata per le rimanenti parole sulla riga.  Esso non fa
necessariamente sì che l'analizzatore della shell tratti il resto della
riga come un commento.
.PD
.SS Array
.B Bash
fornisce variabili array monodimensionali.  Ogni variabile può essere
usata come un array; il comando incorporato
.B declare
dichiara esplicitamente un array.  Non c'è un limite massimo per la
dimensione di un array, né alcuna richiesta che gli elementi siano
indicizzati o assegnati in modo contiguo.  Gli array sono indicizzati
usando numeri interi e cominciano con l'indice zero.
.PP
Un array è creato automaticamente se a una variabile qualsiasi è assegnato un valore
usando la sintassi \fInome\fP[\fIsubscript\fP]=\fIvalore\fP.  Il
.I subscript
viene trattato come un'espressione aritmetica che deve risultare
un numero maggiore o uguale a zero.  Per dichiarare esplicitamente un array, usare
.B declare \-a \fInome\fP
(si veda
.SM
.B COMANDI INCORPORATI DI SHELL
più avanti). È anche accettato
.B declare \-a \fInome\fP[\fIsubscript\fP] ;
il \fIsubscript\fP viene ignorato.  Per una variabile array possono
essere specificati degli attributi utilizzando i comandi incorporati
.B declare
e
.B readonly .
Ogni attributo si applica a tutti gli elementi di un array.
.PP
Agli elementi dell'array vengono assegnati valori usando assegnamenti composti della forma
\fInome\fP=\fB(\fPvalore\fI1\fP ... valore\fIn\fP\fB)\fP, dove ogni
\fIvalore\fP è della forma [\fIsubscript\fP]=\fIstringa\fP. È
richiesto solo \fIstringa\fP.  Se vengono fornite le parentesi
opzionali e il subscript, l'elemento viene assegnato a quell'indice;
altrimenti l'indice dell'elemento assegnato è l'ultimo indice
già utilizzato aumentato di uno.  L'indicizzazione parte da zero.
Questa sintassi è accettata anche dal comando incorporato
.B declare .
Elementi singoli di un array possono essere assegnati con la sintassi
\fInome\fP[\fIsubscript\fP]=\fIvalore\fP introdotta più sopra.
.PP
Qualsiasi elemento di un array può essere referenziato con
${\fInome\fP[\fIsubscript\fP]}.  Le parentesi sono richieste per
evitare conflitti con l'espansione di percorso.  Se
\fIsubscript\fP è \fB@\fP o \fB*\fP, la parola espande a
a tutti gli elementi di \fInome\fP.  Questi subscript differiscono solo
quando la parola appare inclusa fra virgolette.  Se la parola è quotata
con virgolette, ${\fInome\fP[*]} espande a una singola parola
col valore di ogni elemento dell'array separato dal primo
carattere della variabile speciale
.SM
.B IFS ,
e ${\fInome\fP[@]} espande ogni elemento di
\fInome\fP come una parola separata.  Quando non c'è l'elemento di array,
${\fInome\fP[@]} è espanso alla stringa nulla.
Se l'espansione quotata con virgolette si trova dentro una parola,
l'espansione del primo parametro è legato con la parte iniziale della
parola originale, e l'espansione dell'ultimo parametro è legato con
l'ultima parte della parola originale.
Questo è analogo all'espansione dei parametri speciali
\fB*\fP e \fB@\fP (si veda
.B Parametri speciali
sopra). ${#\fInome\fP[\fIsubscript\fP]} espande alla lunghezza di
${\fInome\fP[\fIsubscript\fP]}.  Se \fIsubscript\fP è \fB*\fP o
\fB@\fP, l'espansione è il numero di elementi dell'array.
Referenziare una variabile array senza specificare un subscript
equivale a referenziare il suo elemento zero.
.PP
Il comando incorporato
.B unset
è usato per annullare gli array. \fBunset\fP \fInome\fP[\fIsubscript\fP]
annulla l'elemento di array a indice \fIsubscript\fP.
Bisogna stare attenti a evitare effetti collaterali indesiderati
causati dalla generazione di un nome di file.
\fBunset\fP \fInome\fP, dove \fInome\fP è un array, o
\fBunset\fP \fInome\fP[\fIsubscript\fP], dove
\fIsubscript\fP è \fB*\fP o \fB@\fP, rimuove l'intero array.
.PP
Ciascuno dei comandi incorporati
.BR declare ,
.BR local
e
.B readonly
accetta un'opzione
.B \-a
per specificare un array.  Il comando incorporato
.B read
accetta un'opzione
.B \-a
per assegnare a un array una lista di parole lette dallo standard
input.  I comandi incorporati
.B set
e
.B declare
mostrano i valori di array in modo che da essere
riutilizzabili come assegnamenti.
.SH ESPANSIONE
L'espansione è effettuata sulla riga di comando dopo che essa è stata
divisa in parole.  Vi sono sette tipi di espansione effettuati:
.IR "espansione delle parentesi graffe" ,
.IR "espansione della tilde" ,
.IR "espansione di parametro e variabile" ,
.IR "sostituzione di comando" ,
.IR "espansione aritmetica" ,
.IR "suddivisione in parole"
ed
.IR "espansione di percorso" .
.PP
L'ordine di espansione è: espansione delle parentesi graffe,
espansione della tilde, espansione di parametro, di variabile e
aritmetica e sostituzione di comando (fatta da sinistra a destra),
suddivisione in parole
ed espansione di percorso.
.PP
Sui sistemi che la supportano, è disponibile un'espansione
aggiuntiva: la \fIsostituzione di processo\fP.
.PP
Solo l'espansione delle parentesi graffe, la suddivisione in parole e
l'espansione di percorso possono cambiare il numero di parole
dell'espansione; le altre espansioni espandono una singola parola in
una singola parola.  La sola eccezione a questo è l'espansione di
``\fB$@\fP'' e "\fB${\fP\fInome\fP\fB[@]}\fP"
come spiegato sopra (si veda
.SM
.BR PARAMETRI ).
.SS Espansione delle parentesi graffe
.PP
.I "Espansione delle parentesi graffe"
è un meccanismo con il quale possono essere generate stringhe
arbitrarie.  Questo meccanismo è simile
all'\fIespansione di percorso\fP, ma non è necessario che i file il
cui nome è generato esistano.  I modelli cui si applica l'espansione
delle parentesi graffe hanno la forma di un
.IR preambolo
opzionale, seguito da una serie di stringhe separate da virgola o una
espressione di sequenza racchiusa fra parentesi graffe, seguite da un'
.IR appendice
opzionale.  Il preambolo è preposto a ogni stringa contenuta dentro le
parentesi graffe e l'appendice è poi appesa a ogni stringa
risultante,
espandendo da sinistra a destra.
.PP
Le espansioni delle parentesi graffe possono essere nidificate.
Il risultato di ogni stringa espansa non viene ordinato; è conservato
l'ordine da sinistra a destra.  Per esempio, a\fB{\fPd,c,b\fB}\fPe si espande in `ade ace abe'.
.PP
Un'espressione di sequenza prende la forma \fB{\fP\fIx\fP\fB..\fP\fIy\fP\fB}\fP,
dove \fIx\fP e \fIy\fP sono o numeri interi o caratteri singoli.
Se si specificano numeri interi, l'espressione espande a ogni
numero fra \fIx\fP e \fIy\fP, incluso.
Se si specificano caratteri l'espressione espande a ogni carattere
lessicograficamente compreso fra \fIx\fP e \fIy\fP, incluso.  Da notare che
entrambi \fIx\fP e \fIy\fP devono essere dello stesso tipo.
.PP
L'espansione delle parentesi graffe è effettuata prima di qualsiasi
altra espansione, e qualunque carattere speciale  per uso delle altre
espansioni viene lasciato com'era nel risultato.  Essa è strettamente testuale.
.B Bash
non applica alcuna interpretazione sintattica al contesto
dell'espansione o al testo tra parentesi graffe.
.PP
Un'espansione delle parentesi graffe correttamente formata deve
contenere una parentesi graffa di apertura e una di chiusura, non quotate,
e almeno una virgola non quotata.  Qualunque espansione delle parentesi
graffe erroneamente formata è lasciata inalterata.
Una \fB{\fP o \fB,\fP può essere quotata con un backslash per
evitare che venga considerata parte di un'espressione fra parentesi
graffe.  Per evitare conflitti con l'espansione di parametro, la
stringa \fB${\fP non dà luogo all'espansione delle parentesi graffe.
.PP
Questo costrutto è tipicamente usato come abbreviazione quando il
prefisso comune delle stringhe da generare è più lungo che negli
esempi sopra:
.RS
.PP
mkdir /usr/local/src/bash/{old,new,dist,bugs}
.RE
o
.RS
chown root /usr/{ucb/{ex,edit},lib/{ex?.?*,how_ex}}
.RE
.PP
L'espansione delle parentesi graffe introduce una lieve incompatibilità
con le versioni tradizionali di
.BR sh .
.B sh
non tratta le parentesi graffe aperte e chiuse, specialmente quando esse
appaiono come parte di una parola, e le conserva in uscita.
.B Bash
rimuove le parentesi graffe dalle parole come consequenza
dell'espansione delle parentesi graffe.  Per esempio, una parola data a
.B sh
come \fIfile{1,2}\fP
appare identica nell'output.
La stessa parola è data in output come
.I file1 file2
dopo l'espansione operata da
.BR bash .

Se si desidera una stretta compatibilità con
.B sh
si avvia
.B bash
con l'opzione
.B +B
o si disabilita l'espansione delle parentesi graffe con l'opzione
.B +B
al comando
.B set
(si veda
.SM
.B COMANDI INCORPORATI DELLA SHELL
più avanti).
.SS Espansione della tilde
.PP
Se una parola comincia con un carattere tilde (`\fB~\fP') non quotato,
tutti i caratteri che precedono la prima barra [/] non quotata (o tutti i
caratteri, se non vi è alcuna barra) sono considerati un
\fIprefisso tilde\fP.  Se nessuno dei caratteri nel prefisso tilde
è quotato, i caratteri nel prefisso tilde che segue la tilde
sono trattati come un possibile \fInome di login\fP.
Se questo nome di login è la stringa nulla, la tilde è sostituita
con il valore del parametro
.SM
.BR HOME .
Se
.SM
.B HOME
viene annullato, è invece sostituita la home directory dell'utente
che sta eseguendo la shell.
Altrimenti, il prefisso tilde è sostituito con la home directory
associata al nome di login specificato.
.PP
Se il prefisso tilde è un `~+' il valore della variabile di shell
.SM
.B PWD
sostituisce il prefisso tilde.
Se il prefisso tilde è un `~\-', il valore della variabile di shell
.SM
.BR OLDPWD ,
se impostato, viene sostituito.
Se il carattere che segue la tilde nel prefisso tilde è un numero
\fIN\fP, con un prefisso opzionale  `+' o  `\-', il prefisso
tilde è sostituito dal corrispondente elemento dallo stack di
directory, come dovrebbe essere mostrato dal comando incorporato
.B dirs
invocato col prefisso tilde come argomento.
Se il carattere che segue la tilde nel prefisso tilde è un numero
non preceduto da un segno `+' o `\-', viene assunto `+'
.PP
Se il nome di login non è valido o l'espansione della tilde non ha successo,
la parola rimane invariata.
.PP
Ogni assegnamento di variabile è controllato per prefissi tilde
non quotati che seguono immediatamente un
.B :
o il primo
.BR = .
In questi casi viene effettuata l'espansione della tilde.  Di conseguenza,
si possono usare nomi di file con delle tilde negli assegnamenti a
.SM
.BR PATH ,
.SM
.BR MAILPATH ,
e
.SM
.BR CDPATH ,
e la shell assegna il valore espanso.
.SS Espansione di parametro
.PP
Il carattere `\fB$\fP' introduce l'espansione di parametro, la
sostituzione di comando, o l'espansione aritmetica.  Il nome o simbolo
del parametro che dev'essere espanso può essere racchiuso tra parentesi
graffe, che sono opzionali ma servono a proteggere la variabile che deve
essere espansa dai caratteri immediatamente seguenti, che potrebbero
essere interpretati come parte del nome [della variabile stessa].
.PP
Quando vengono usate le parentesi graffe, la parentesi graffa finale
corrispondente è la prima `\fB}\fP' non protetta da un backslash o
da stringhe quotate, e non parte di un'espansione aritmetica
inclusa, di una sostituzione di comando o di un'espansione di parametro.
.PP
.PD 0
.TP
${\fIparametro\fP}
Il valore di \fIparametro\fP è sostituito.  Le parentesi graffe sono
richieste quando
.I parametro
è un parametro posizionale con più di una cifra [ossia 10 e oltre],
o quando
.I parametro
è seguito da un carattere che non deve essere
interpretato come parte del suo nome.
.PD
.PP
Se il primo carattere di \fIparametro\fP è un punto esclamativo,
è introdotto un livello di indirezione della variabile.
\fBBash\fP usa il valore della variabile formata dal resto del
\fIparametro\fP come nome di variabile; questa variabile è poi
espansa e quel valore è usato nel resto della sostituzione, piuttosto
che il valore stesso di \fIparametro\fP.
Questa è conosciuta come \fIespansione indiretta\fP.
Le eccezioni a ciò sono le espansioni di ${!\fIprefisso\fP*} e
${\fB!\fP\fInome\fP[\fI@\fP]} descritte più avanti.
Il punto esclamativo deve seguire immediatamente la parentesi graffa
iniziale per introdurre l'indirezione.
.PP
In ognuno dei casi sotto riportati, \fIparola\fP è soggetta a espansione
della tilde, espansione di parametro, sostituzione di comando ed
espansione aritmetica.  Quando non sta effettuando l'espansione della
substringa, \fBBash\fP controlla se un parametro non è impostato o è
nullo; l'omissione dei due punti provoca il solo controllo di un parametro non impostato.
.PP
.PD 0
.TP
${\fIparametro\fP\fB:\-\fP\fIparola\fP}
\fBUsa i valori di default\fP.  Se
.I parametro
non è impostato o è nullo, è sostituita l'espansione di
.IR parola .
Altrimenti, il valore di
.IR parametro
è sostituito
.TP
${\fIparametro\fP\fB:=\fP\fIparola\fP}
\fBAssegna i valori di default\fP.
Se
.I parametro
non è impostato o è nullo, l'espansione di
.I parola
è assegnata a
.IR parametro .
Il valore di
.I parametro
è quindi sostituito.  I parametri posizionali e i parametri speciali non
possono essere assegnati in questo modo.
.TP
${\fIparametro\fP\fB:?\fP\fIparola\fP}
\fBDà una segnalazione di errore se è nullo o è stato annullato\fP.
Se
.I parametro
è nullo o è stato annullato, l'espansione di \fIparola\fP (o un messaggio
di segnalazione, se
.I parola
non è presente) viene scritta sullo standard error e la shell, se non è
interattiva, termina.  Altrimenti, è sostituito il valore
di \fIparametro\fP.
.TP
${\fIparametro\fP\fB:+\fP\fIparola\fP}
\fBUsa un valore alternativo\fP.
Se
.I parametro
è nullo o è stato annullato, non è sostituito niente, altrimenti
è sostituita l'espansione di
.I parola .
.TP
${\fIparametro\fP\fB:\fP\fIoffset\fP}
.PD 0
.TP
${\fIparametro\fP\fB:\fP\fIoffset\fP\fB:\fP\fIlunghezza\fP}
.PD
\fBEspansione di substringa.\fP
Espande i caratteri di \fIparametro\fP fino a \fIlunghezza\fP
partendo dal carattere specificato da \fIoffset\fP.
Se \fIlunghezza\fP viene omesso, espande alla substringa di
\fIparametro\fP partendo dal carattere specificato da \fIoffset\fP.
\fIlunghezza\fP e \fIoffset\fP sono espressioni aritmetiche (si veda
.SM
.B
VALUTAZIONE ARITMETICA
più avanti).
\fIlunghezza\fP deve essere un numero maggiore o uguale a zero.
Se \fIoffset\fP è un numero minore di zero, il valore
viene usato come un offset dalla fine del valore di \fIparametro\fP.
Se \fIparametro\fP è \fB@\fP, il risultato è un numero di parametri
posizionali pari a \fIlunghezza\fP a partire da \fIoffset\fP.
Se \fIparametro\fP è un nome di array indicizzato da @ o *,
il risultato è un numero di elementi dell'array pari a \fIlunghezza\fP
a partire da ${\fIparametro\fP[\fIoffset\fP]}.
Un \fIoffset\fP negativo è inteso come relativo al massimo indice
dell'array specificato aumentato di uno.
Notare che un offset negativo dev'essere separato dai due punti da almeno
uno spazio per evitare di essere confuso con l'espansione di :- .
L'indicizzazione della substringa è a base zero a meno che non vengano
usati i parametri posizionali, nel qual caso l'indicizzazione parte da 1.
.TP
${\fB!\fP\fIprefisso\fP\fB*\fP}
.PD 0
.TP
${\fB!\fP\fIprefisso\fP\fB@\fP}
.PD
Espande ai nomi delle variabili i cui nomi iniziano
con \fIprefisso\fP,
separati dal primo carattere della variabile speciale
.SM
.B IFS
.TP
${\fB!\fP\fInome\fP[\fI@\fP]}
.PD 0
.TP
${\fB!\fP\fInome\fP[\fI*\fP]}
.PD
Se \fInome\fP è una variabile di array, espande alla lista degli indici
di array (chiavi) assegnati in \fInome\fP.  Se \fInome\fP non è un
array, espande a 0 se \fInome\fP è impostato ed è nullo in caso contrario.
Quando \fI@\fP è usato e l'espansione appare fra virgolette, ogni
chiave espande a una parola separata.
.TP
${\fB#\fP\fIparametro\fP}
È sostituita la lunghezza in caratteri del valore di \fIparametro\fP.
Se
.I parametro
è
.B *
o
.BR @ ,
il valore sostituito è il numero di parametri posizionali.
Se
.I parametro
è un nome di array contrassegnato da
.B *
o
.BR @ ,
il valore sostituito è il numero di elementi nell'array.
.TP
${\fIparametro\fP\fB#\fP\fIparola\fP}
.PD 0
.TP
${\fIparametro\fP\fB##\fP\fIparola\fP}
.PD
La
.I parola
è espansa per produrre un modello proprio come nell'espansione di
percorso.  Se il modello trova una corrispondenza con l'inizio
del valore di
.IR parametro ,
allora il risultato dell'espansione è il valore espanso di
.I parametro
con il più corto dei modelli che corrispondono cancellato (nel caso
di ``\fB#\fP'' ) o il più lungo dei modelli che corrispondono cancellato
(nel caso di ``\fB##\fP'' ).
Se
.I parametro
è
.B @
o
.BR * ,
l'operazione di rimozione del modello è applicata di volta in volta a
ogni parametro posizionale, e l'espansione è la lista che ne risulta.
Se
.I parametro
è una variabile di array con indice
.B @
o
.BR * ,
l'operazione di rimozione del modello è applicata a ognuno degli
elementi dell'array, e l'espansione è la lista risultante.
.TP
${\fIparametro\fP\fB%\fP\fIparola\fP}
.PD 0
.TP
${\fIparametro\fP\fB%%\fP\fIparola\fP}
.PD
La \fIparola\fP è espansa per produrre un modello proprio come
nell'espansione di percorso.  Se il modello corrisponde a una parte
finale del valore espanso di
.IR parametro ,
il risultato dell'espansione è il valore espanso di
.I parametro
con il più corto dei modelli corrispondenti cancellato (nel caso di
``\fB%\fP'' ) o il più lungo dei modelli corrispondenti cancellato (nel
caso di ``\fB%%\fP'').  Se
.I parametro
è
.B @
o
.BR * ,
l'operazione di rimozione del modello è applicata a ognuno dei
parametri posizionali, e l'espansione è la lista risultante.
Se
.I parametro
è una variabile di array con indice
.B @
o
.BR * ,
l'operazione di rimozione del modello è applicata a ognuno degli elementi
dell'array, e l'espansione è la lista risultante.
.TP
${\fIparametro\fP\fB/\fP\fImodello\fP\fB/\fP\fIstringa\fP}
Il \fImodello\fP è espanso per produrre un modello proprio come
nell'espansione di percorso.
\fIParametro\fP è espanso e il suo valore più lungo che corrisponde
a \fImodello\fP è sostituito con \fIstringa\fP.
Se \fImodello\fP comincia con \fB/\fP, tutte le corrispondenze di
\fImodello\fP sono sostituite con \fIstringa\fP.  Normalmente viene
sostituita solo la prima corrispondenza.
Se \fImodello\fP comincia con \fB#\fP, deve corrispondere
all'inizio del valore espanso di \fIparametro\fP.
Se \fImodello\fP inizia con \fB%\fP, deve corrispondere alla
fine del valore espanso di \fIparametro\fP.
Se \fIstringa\fP è nulla, le corrispondenze di \fImodello\fP sono
cancellate e la \fB/\fP che segue \fImodello\fP può essere omessa.
Se
.I parametro
è
.B @
o
.BR * ,
l'operazione di sostituzione è applicata a ognuno dei
parametri posizionali, e l'espansione è la lista risultante.
Se
.I parametro
è una variabile di array con indice
.B @
o
.BR * ,
l'operazione di sostituzione è applicata a ognuno degli elementi
dell'array, e l'espansione è la lista risultante.
.SS Sostituzione di comando
.PP
La \fIsostituzione di comando\fP permette che l'output di un comando
rimpiazzi il nome del comando.  Vi sono due forme:
.PP
.RS
.PP
\fB$(\fP\fIcomando\fP\|\fB)\fP
.RE
o
.RS
\fB`\fP\fIcomando\fP\fB`\fP
.RE
.PP
.B Bash
effettua l'espansione eseguendo il \fIcomando\fP e rimpiazzando la
sostituzione di comando con lo standard output del comando, con ogni
newline finale cancellato.  I newline intermedi non vengono cancellati, ma
possono essere rimossi durante la suddivisione in parole.  La
sostituzione di comando \fB$(cat \fIfile\fP)\fR può essere sostituita
dall'equivalente ma più veloce \fB$(< \fIfile\fP)\fR.
.PP
Quando è usata la forma di sostituzione in vecchio stile con gli apici
rovesciati, il backslash conserva il suo significato letterale tranne quando è seguito da
.BR $ ,
.BR `
o
.BR \e .
Il primo apice rovesciato non preceduto da un backslash fa terminare la
sostituzione di comando.  Quando si usa la forma $(\^\fIcomando\fP\|),
tutti i caratteri tra le parentesi formano il comando; nessuno è
considerato speciale.
.PP
La sostituzione di comando può essere nidificata.  Per nidificare quando si usa la forma con gli apici rovesciati,
bisogna far precedere gli apici rovesciati più interni con un carattere backslash di protezione.
.PP
Se la sostituzione appare tra virgolette, la suddivisione in parole e
l'espansione di percorso non sono effettuate sui risultati.
.SS Espansione aritmetica
.PP
L'espansione aritmetica permette la valutazione di una espressione aritmetica
e la sostituzione del risultato.  Il formato per l'espansione aritmetica è:
.RS
.PP
\fB$((\fP\fIespressione\fP\fB))\fP
.RE
.PP
L'
.I espressione
è trattata come se fosse tra virgolette, ma le virgolette dentro le
parentesi non sono trattate in modo speciale.  Tutti i token
dell'espressione sono assoggettati a espansione di parametro, espansione di
stringa, sostituzione di comando e rimozione dei caratteri di quotatura.
Le espansioni aritmetiche possono essere nidificate.
.PP
Il calcolo è effettuato in accordo con le regole elencate più avanti sotto
.SM
.BR "VALUTAZIONE ARITMETICA" .
Se
.I espressione
non è valida,
.B bash
stampa un messaggio che indica l'errore e non viene effettuata alcuna sostituzione.
.SS Sostituzione di processo
.PP
La \fIsostituzione di processo\fP è supportata su sistemi che supportano
le named pipe (\fIFIFO\fP) o il metodo \fB/dev/fd\fP per denominare i file aperti.
Essa prende la forma di
\fB<(\fP\fIlista\^\fP\fB)\fP
o
\fB>(\fP\fIlista\^\fP\fB)\fP.
La \fIlista\fP di processi è eseguita con il suo input o output connesso
a un \fIFIFO\fP o ad alcuni file in \fB/dev/fd\fP.  Il nome di questo file è
passato come argomento al comando corrente come risultato
dell'espansione.  Se è usata la forma \fB>(\fP\fIlista\^\fP\fB)\fP, la scrittura
sul file fornisce input per la \fIlista\fP.  Se è usata la forma
\fB<(\fP\fIlista\^\fP\fB)\fP, il file passato come argomento dovrebbe
essere letto per ottenere l'output di \fIlista\fP.
.PP
Su sistemi che la supportano, la sostituzione di processo è
effettuata allo stesso momento dell'espansione di parametro e di variabile,
della sostituzione di comando
e dell'espansione aritmetica.
.SS Suddivisione in parole
.PP
La shell scandisce il risultato
dell'espansione di parametro,
sostituzione di comando
ed
espansione aritmetica
che non si trovano tra virgolette, per effettuare la
.IR "suddivisione in parole" .
.PP
La shell tratta ogni carattere di
.SM
.B IFS
come un delimitatore, e suddivide in parole, in corrispondenza con uno
di questi caratteri, i risultati delle altre espansioni.  Se il valore di
.SM
.B IFS
non è impostato o il suo valore
è esattamente
.BR <space><tab><newline> ,
il valore di default,
qualsiasi sequenza di caratteri
.SM
.B IFS
serve per delimitare le parole.  Se
.SM
.B IFS
ha un valore diverso da quello di default, allora sequenze di
caratteri di spaziatura
.B space
e
.B tab
sono ignorate all'inizio e alla fine della parola,
se il carattere di
spaziatura è presente nel valore di
.SM
.BR IFS
(un carattere di spaziatura
.SM
.B IFS
).
Qualunque carattere in
.SM
.B IFS
che non è un carattere di spaziatura
.SM
.BR IFS ,
insieme con qualsiasi carattere di spaziatura
.SM
.B IFS
adiacente, delimita un campo.
Una sequenza di caratteri di spaziatura
.SM
.B IFS
è anche trattata come un delimitatore.
Se il valore di
.SM
.B IFS
è nullo, non avviene alcuna suddivisione in parole.
.PP
Argomenti esplicitamente nulli(\^\f3"\^"\fP or \^\f3\(aq\^\(aq\fP\^)
sono conservati.  Argomenti non quotati implicitamente nulli,
risultanti dall'espansione di parametri con valore nullo, sono rimossi.
Se un parametro con valore nullo è espanso fra virgolette, è considerato un
argomento nullo e viene rimosso.
.PP
È da notare che se non avviene alcuna espansione non viene effettuata
alcuna suddivisione.
.SS Espansione di percorso
.PP
Dopo la suddivisione in parole,
a meno che non sia stata impostata l'opzione
.BR \-f ,
.B bash
scandisce ogni parola
alla ricerca di caratteri
.BR * ,
.BR ?
e
.BR [ .
Se uno di questi caratteri è presente, allora la parola è
considerata come un
.IR modello ,
e sostituita con una lista, in ordine alfabetico, di nomi di file
che corrispondono al modello.
Se nessun nome di file corrispondente viene trovato,
e l'opzione di shell
.B nullglob
è disabilitata, la parola è lasciata inalterata.
Se l'opzione
.B nullglob
è impostata, e nessuna corrispondenza è trovata,
la parola è rimossa.
Se l'opzione di shell
.B failglob
è impostata, e non viene trovata alcuna corrispondenza, viene
stampato un messaggio di errore e il comando non viene eseguito.
Se l'opzione di shell
.B nocaseglob
è abilitata, il confronto è effettuato senza distinzione fra
maiuscole e minuscole nei caratteri alfabetici.
Quando un modello è usato per l'espansione di percorso,
il carattere
.B ``.''
all'inizio di un nome o immediatamente dopo una barra [/]
deve essere confrontato esplicitamente, a meno che l'opzione di shell
.B globdot
non sia impostata.
Quando si confronta un percorso, il carattere barra [/] deve sempre
essere confrontato esplicitamente.
Negli altri casi, il carattere
.B ``.''
non è trattato in modo speciale.
Vedere la descrizione di
.B shopt
più avanti sotto
.SM
.B COMANDI INCORPORATI DELLA SHELL
per una descrizione
delle opzioni di shell
.BR nocaseglob ,
.BR nullglob ,
.BR failglob
e
.B dotglob .
.PP
La variabile di shell
.SM
.B GLOBIGNORE
può essere usata per restringere la serie di nomi di file che corrispondono a un
.IR modello .
Se
.SM
.B GLOBIGNORE
è impostato, ogni nome di file da confrontare che corrisponde anche a
uno dei modelli in
.SM
.B GLOBIGNORE
è rimosso dalla lista dei nomi che corrispondono al modello.  I nomi di file
.B ``.''
e
.B ``..''
sono sempre ignorati quando
.SM
.B GLOBIGNORE
è impostato e non nullo.  Comunque, impostare
.SM
.B GLOBIGNORE
a un valore non nullo ha l'effetto di abilitare l'opzione di shell
.B dotglob ,
così da cercare una corrispondenza
con tutti gli altri nomi di file che iniziano con un
.B ``.''
Per ottenere il comportamento (usato in precedenti versioni) di ignorare i nomi di file che iniziano con
.BR ``.'' ,
si deve fare un modello
.B ``.*''
in
.SM
.BR GLOBIGNORE .
L'opzione
.B dotglob
è disabilitata quando
.SM
.B GLOBIGNORE
viene annullato.
.PP
\fBModelli di ricerca / espressioni regolari\fP
.PP
Ogni carattere che appare in un modello (espressione regolare), tranne
quelli speciali descritti qui sotto, corrisponde a se stesso.  Il carattere
NULL non può far parte di un'espressione regolare.  Un backslash segnala
come speciale il carattere che segue; il backslash è ignorato durante il
confronto.  I caratteri speciali del modello devono essere racchiusi tra
apici se si vuole che siano considerati così come sono scritti.
.PP
I caratteri speciali nelle espressioni regolari hanno i seguenti significati:
.PP
.PD 0
.TP
.B *
Corrisponde a qualsiasi stringa, inclusa la stringa nulla.
.TP
.B ?
Corrisponde a qualsiasi carattere singolo.
.TP
.B [...]
Corrisponde a uno qualsiasi dei caratteri racchiusi fra parentesi quadre.
Una coppia di caratteri separati da un segno meno denota un'
\fIespressione di intervallo\fP,
che individua ogni carattere che si trova tra quei due
caratteri, essi stessi inclusi, usando la sequenza di ordinamento della
localizzazione corrente.  Se il primo carattere che segue il
.B [
è un
.B !
o un
.B ^
allora qualsiasi carattere non specificato è ritenuto corrispondente.
L'ordine di ordinamento dei caratteri nell'espressione di intervallo è
determinato dalla localizzazione corrente e dal valore della variabile
di shell \fBLC_COLLATE\fP, se impostata.
Un
.B \-
può essere specificato includendolo come primo o ultimo carattere
nella lista.
Una
.B ]
può essere specificata includendola come primo carattere
nella lista.
.br
.if t .sp 0.5
.if n .sp 1
All'interno di
.B [
e
.BR ] ,
possono essere specificate \fIclassi di caratteri\fP usando la sintassi
\fB[:\fP\fIclasse\fP\fB:]\fP, dove \fIclasse\fP è una delle seguenti
classi definite nello standard POSIX:
.PP
.RS
.B
.if n alnum alpha ascii blank cntrl digit graph lower print punct space upper word xdigit
.if t alnum   alpha   ascii   blank   cntrl   digit   graph   lower   print   punct   space   upper   word   xdigit
.br
Una classe di caratteri trova una corrispondenza con qualsiasi carattere appartenente a quella classe.
La classe di caratteri \fBword\fP individua lettere, cifre e il carattere _ .
.br
.if t .sp 0.5
.if n .sp 1
All'interno di
.B [
e
.BR ]
può essere specificata una \fIclasse di equivalenza\fP con la sintassi
\fB[=\fP\fIc\fP\fB=]\fP, che individua tutti i caratteri con lo
stesso grado di ordinamento
(come definito dalla localizzazione corrente) del carattere \fIc\fP.
.br
.if t .sp 0.5
.if n .sp 1
All'interno di
.B [
e
.BR ]
la sintassi \fB[.\fP\fIsymbol\fP\fB.]\fP individua il simbolo di
ordinamento \fIsymbol\fP.
.RE
.PD
.PP
Se l'opzione di shell \fBextglob\fP è abilitata col comando incorporato
\fBshopt\fP, vengono riconosciuti diversi operatori estesi che descrivono
modelli.  Nella descrizione seguente, una \fIpattern-list\fP è una
lista di uno o più modelli separati da una \fB|\fP.
Possono essere formati modelli composti usando uno o più dei seguenti
submodelli:
.sp 1
.PD 0
.RS
.TP
\fB?(\fP\^\fIpattern-list\^\fP\fB)\fP
Individua zero o una occorrenza dei modelli specificati
.TP
\fB*(\fP\^\fIpattern-list\^\fP\fB)\fP
Individua zero o più occorrenze dei modelli specificati
.TP
\fB+(\fP\^\fIpattern-list\^\fP\fB)\fP
Individua una o più occorrenze dei modelli specificati
.TP
\fB@(\fP\^\fIpattern-list\^\fP\fB)\fP
Individua uno dei modelli specificati
.TP
\fB!(\fP\^\fIpattern-list\^\fP\fB)\fP
Individua qualsiasi cosa eccetto uno dei modelli specificati
.RE
.PD
.SS Rimozione dei caratteri di quotatura
.PP
Dopo le precedenti espansioni, tutte le occorrenze non quotate dei
caratteri
.BR \e ,
.BR \(aq
e \^\f3"\fP\^ non originate da una delle espansioni di cui sopra
sono rimosse.
.SH RIDIREZIONE
Prima che un comando sia eseguito, i suoi input e output
possono essere
.I ridiretti
usando una speciale notazione interpretata dalla shell.
La ridirezione può anche essere usata per aprire e chiudere file per
l'ambiente di esecuzione della shell corrente.  I seguenti operatori di
ridirezione possono precedere o apparire in qualsiasi posizione all'interno di un
.I comando semplice
o possono venire dopo un
.IR comando .
Le ridirezioni sono elaborate nell'ordine in cui compaiono,
da sinistra a destra.
.PP
Nelle seguenti descrizioni, se il numero di descrittore di file è
omesso, e il primo carattere dell'operatore di ridirezione è
.BR < ,
la ridirezione si riferisce allo standard input (descrittore di file
0).  Se il primo carattere dell'operatore di ridirezione è
.BR > ,
la ridirezione si riferisce allo standard output (descrittore di file 1).
.PP
La parola che segue l'operatore di ridirezione nelle seguenti
descrizioni, se non diversamente specificato, è sottoposta a espansione
delle parentesi graffe, espansione della tilde, espansione di parametro,
sostituzione di comando, espansione aritmetica, rimozione dei caratteri
di quotatura, espansione dei percorsi e suddivisione in parole.
Se si espande a più di una parola
.B bash
dà una segnalazione di errore.
.PP
È da notare che l'ordine delle ridirezioni è significativo.
Per esempio, il comando
.RS
.PP
ls \fB>\fP dirlist 2\fB>&\fP1
.RE
.PP
dirige sia lo standard output che lo standard error sul file
.IR dirlist ,
mentre il comando
.RS
.PP
ls 2\fB>&\fP1 \fB>\fP dirlist
.RE
.PP
dirige solo lo standard output sul file
.IR dirlist ,
poiché lo standard error è stato duplicato come standard output
prima che lo standard output fosse ridiretto su
.IR dirlist .
.PP
\fBBash\fP manipola parecchi nomi di file specialmente quando sono
usati in ridirezioni, come descritto nella tavola seguente:
.RS
.PP
.PD 0
.TP
.B /dev/fd/\fIfd\fP
Se \fIfd\fP è un intero valido, il descrittore di file \fIfd\fP è duplicato.
.TP
.B /dev/stdin
Il descrittore di file 0 è duplicato.
.TP
.B /dev/stdout
Il descrittore di file 1 è duplicato.
.TP
.B /dev/stderr
Il descrittore di file 2 è duplicato.
.TP
.B /dev/tcp/\fIhost\fP/\fIporta\fP
Se \fIhost\fP è un nome di host valido o un indirizzo Internet, e
\fIporta\fP è un numero intero di porta o il nome di un servizio,
\fBbash\fP tenta di aprire una connessione TCP al socket corrispondente.
.TP
.B /dev/udp/\fIhost\fP/\fIporta\fP
Se \fIhost\fP è un nome di host valido o un indirizzo Internet, e
\fIporta\fP è un numero intero di porta o il nome di un servizio,
\fBbash\fP tenta di aprire una connessione UDP al socket corrispondente.
.PD
.RE
.PP
L'insuccesso nell'aprire o creare un file determina l'insuccesso della ridirezione.
.PP
Ridirezioni con descrittori di file maggiori di 9 dovrebbero essere
usate con attenzione, poiché possono entrare in conflitto coi
descrittori di file usati internamente dalla shell.
.SS Ridirezione dell'input
.PP
La ridirezione dell'input fa sì che il file il cui nome risulta
dall'espansione di
.I parola
venga aperto in lettura sul descrittore di file
.IR n ,
o come standard input (descrittore di file 0) se
.I n
non è specificato.
.PP
Il formato generico per ridirigere l'input è:
.RS
.PP
[\fIn\fP]\fB<\fP\fIparola\fP
.RE
.SS Ridirezione dell'output
.PP
La ridirezione dell'output fa sì che il file il cui nome risulta
dall'espansione di
.I parola
venga aperto in scrittura sul descrittore di file
.IR n ,
o come standard output (descrittore di file 1) se
.I n
non è specificato.  Se il file non esiste viene creato;
se esiste viene sovrascritto, come se fosse di dimensione zero.
.PP
Il formato generico per ridirigere l'output è:
.RS
.PP
[\fIn\fP]\fB>\fP\fIparola\fP
.RE
.PP
Se l'operatore di ridirezione è
.BR > ,
e l'opzione
.B noclobber
del comando incorporato
.B set
è stata abilitata, la ridirezione non ha successo se il file
il cui nome risulta dall'espansione di \fIparola\fP esiste ed è
un file regolare.
Se l'operatore di ridirezione è
.BR >| ,
o l'operatore di ridirezione è
.B >
e l'opzione
.B noclobber
del comando incorporato
.B set
non è abilitata, la ridirezione è tentata anche se
il file denominato da \fIparola\fP esiste.
.SS Accodare l'output ridiretto
.PP
La ridirezione dell'output in questo modalità
fa sì che il file il cui nome risulta
dall'espansione di
.I parola
venga aperto per accodare sul descrittore di file
.IR n ,
o sullo standard output (descrittore di file 1) se
.I n
non è specificato.  Se il file non esiste viene creato.
.PP
Il formato generico per accodare l'output è:
.RS
.PP
[\fIn\fP]\fB>>\fP\fIparola\fP
.RE
.PP
.SS Ridirezione di standard output e standard error
.PP
.B Bash
permette, con questo costrutto,
che l'output sia lo standard output
(descrittore di file 1) che quello dello standard error
(descrittore di file 2)
siano ridiretti
sul file il cui nome risulta dall'espansione di
.IR parola .
.PP
Vi sono due formati per ridirigere lo standard output
e lo standard error:
.RS
.PP
\fB&>\fP\fIparola\fP
.RE
e
.RS
\fB>&\fP\fIparola\fP
.RE
.PP
Delle due forme, la prima è quella preferita.
Questo è semanticamente equivalente a
.RS
.PP
\fB>\fP\fIparola\fP 2\fB>&\fP1
.RE
.SS Here Document
.PP
Questo tipo di ridirezione istruisce la shell a leggere l'input
dall'input corrente, finché non venga incontrata una riga contenente solo
.I parola
(senza alcun carattere blank dopo la parola stessa).
Tutte le righe lette fino a quel punto sono quindi usate come
standard input
per un comando.
.PP
Il formato degli here-document è il seguente:
.RS
.PP
.nf
\fB<<\fP[\fB\-\fP]\fIparola\fP
        \fIhere-document\fP
\fIdelimitatore\fP
.fi
.RE
.PP
Nessuna espansione di parametro, sostituzione di comando,
espansione aritmetica o espansione di percorso è effettuata su
.IR parola .
Se un carattere qualsiasi in
.I parola
è quotato, il
.I delimitatore
è il risultato della rimozione dei caratteri di quotatura da
.IR parola ,
e le righe nel here-document non vengono espanse.
Se \fIparola\fP non è quotata,
tutte le righe del here-document sono soggette a espansione di
parametro, sostituzione di comando ed espansione aritmetica.
In quest'ultimo caso, la coppia
.B \e<newline>
è ignorata, e
.B \e
deve essere usata per quotare i caratteri
.BR \e ,
.BR $ ,
e
.BR ` .
.PP
Se l'operatore di ridirezione è
.BR <<\- ,
tutti i caratteri tab a inizio riga sono eliminati dalle righe in input
e dalla riga che contiene
.IR delimitatore .
Questo permette che un here-document dentro uno script di shell
possa essere indentato
in maniera naturale.
.SS "Here String"
Una variante degli here document, il formato è:
.RS
.PP
.nf
\fB<<<\fP\fIparola\fP
.fi
.RE
.PP
La \fIparola\fP è espansa ed è passata al comando come suo
standard input.
.SS "Duplicazione dei descrittori di file"
.PP
L'operatore di ridirezione
.RS
.PP
[\fIn\fP]\fB<&\fP\fIparola\fP
.RE
.PP
è usato per duplicare descrittori di file di input.
Se
.I parola
si espande in una o più cifre, il descrittore di file indicato da
.I n
è fatto diventare una copia di quel descrittore di file.
Se le cifre in
.I parola
non specificano un descrittore di file aperto per l'input, si verifica un errore di ridirezione.
Se
.I parola
risulta essere, dopo l'espansione,
.BR \- ,
il descrittore di file
.I n
viene chiuso.  Se
.I n
non è specificato, è usato lo standard input (descrittore di file 0).
.PP
L'operatore
.RS
.PP
[\fIn\fP]\fB>&\fP\fIparola\fP
.RE
.PP
è usato in modo analogo per duplicare i descrittori di file di output.  Se
.I n
non è specificato, è usato lo standard output (descrittore di file 1).
Se le cifre in
.I parola
non specificano un descrittore di file aperto in output, si verifica un errore di ridirezione.
Come caso speciale, se \fIn\fP è omesso, e \fIparola\fP non si espande a
una o più cifre, lo standard output e lo standard error sono ridiretti
come descritto in precedenza.
.SS "Muovere i descrittori di file"
.PP
L'operatore di ridirezione
.RS
.PP
[\fIn\fP]\fB<&\fP\fIcifra\fP\fB\-\fP
.RE
.PP
muove il descrittore di file \fIcifra\fP al descrittore di file
.IR n ,
o allo standard input (descrittore di file 0) se \fIn\fP non è specificato.
\fIcifra\fP è chiuso dopo essere stato duplicato in \fIn\fP.
.PP
Analogamente l'operatore di ridirezione
.RS
.PP
[\fIn\fP]\fB>&\fP\fIcifra\fP\fB\-\fP
.RE
.PP
muove il descrittore di file \fIcifra\fP al descrittore di file
.IR n ,
o allo standard output (descrittore di file 1) se \fIn\fP non è specificato.
.SS "Apertura di descrittori di file per lettura e scrittura"
.PP
L'operatore di ridirezione
.RS
.PP
[\fIn\fP]\fB<>\fP\fIparola\fP
.RE
.PP
fa sì che il file il cui nome è l'espansione di
.I parola
venga aperto sia in lettura che in scrittura sul descrittore di file
.IR n ,
o sul descrittore di file 0 se
.I n
non è specificato.  Se il file non esiste, viene creato.
.SH ALIAS
Gli \fIalias\fP consentono di sostituire una stringa con una
parola se usata come prima parola di un comando semplice.
La shell mantiene una lista di alias che possono essere impostati e
rimossi con i comandi incorporati
.B alias
e
.B unalias
(si veda
.SM
.B COMANDI INCORPORATI DELLA SHELL
più avanti).  La prima parola di ogni comando, se non quotata,
viene controllata per vedere se a essa è associato un alias.
Se è questo il caso, la parola è sostituita dal valore dell'alias.
I caratteri \fB/\fP, \fB$\fP, \fB`\fP e \fB=\fP, e
ognuno dei \fImetacaratteri\fP della shell o i caratteri di quotatura
elencati sopra non possono apparire in un nome di alias.
Il testo da sostituire può contenere qualunque
input valido per la shell, inclusi i metacaratteri della shell.
La prima parola del testo così sostituito è controllata
per vedere se contiene alias, ma una parola che coincide con l'alias
che si sta espandendo non viene espansa una seconda volta.
Questo significa che si può far interpretare
.B ls
come
.BR "ls \-F" ,
per esempio, e
.B bash
non tenta di espandere ulteriormente il testo così sostituito.
Se l'ultimo carattere del valore di un alias è un
.IR blank ,
allora la successiva parola di comando
che segue l'alias è pure controllata per l'espansione di alias.
.PP
Gli alias sono creati ed elencati con il comando
.B alias
e rimossi
con il comando
.BR unalias .
.PP
Non vi è alcun meccanismo per usare argomenti nel testo da sostituire.
Se servono degli argomenti, si dovrà usare una funzione di
shell (si veda.
.B FUNZIONI
più avanti).
.PP
Gli alias non sono espansi quando la shell non è interattiva,
a meno che l'opzione di shell
.B expand_aliases
non sia impostata mediante
.B shopt
(si veda la descrizione di
.B shopt
sotto
.SM
\fBCOMANDI INCORPORATI DI SHELL\fP
più avanti).
.PP
Le regole che riguardano la definizione e l'uso degli alias
possono facilmente generare confusione.
.B Bash
legge sempre almeno una riga completa
di input prima di eseguire qualsiasi
comando di quella riga.  Gli alias sono espansi quando un
comando è letto, non quando è eseguito.  Perciò, una definizione
di alias che appaia sulla una riga che contiene già un altro comando
non ha effetto fino a che non è stata letta la successiva riga di input.
I comandi che seguono la definizione di un alias
su una data riga non sono influenzati da un nuovo alias.
Questo comportamento è un problema anche quando sono eseguite delle
funzioni.  Gli alias sono espansi quando viene letta una definizione
di funzione, non quando la funzione è eseguita, poiché una definizione
di funzione è essa stessa un comando composto.  Come conseguenza, gli
alias definiti in una funzione sono disponibili solo dopo che quella
funzione è eseguita.  Per maggior sicurezza, conviene porre sempre le
definizioni di alias su una riga separata e non usare
.B alias
in comandi composti.
.PP
Quasi a tutti gli effetti, le finalità per cui sono usati gli alias
possono essere raggiunte usando invece funzioni di shell.
.SH FUNZIONI
Una funzione di shell, definita come descritto prima sotto
.SM
.BR "GRAMMATICA DELLA SHELL" ,
immagazzina una serie di comandi per una futura esecuzione.
Quando il nome di una funzione di shell è usato come un nome di comando
semplice, la lista di comandi associati con quel nome di funzione
viene eseguita.
Le funzioni sono eseguite nel contesto della shell corrente;
nessun nuovo processo è creato per interpretarle
(a differenza di quanto avviene eseguendo uno script di shell).
Quando una funzione è eseguita, gli argomenti passati alla funzione
costituiscono i parametri posizionali della funzione stessa.
Il parametro speciale
.B #
viene aggiornato per riflettere il cambiamento.  Il parametro
speciale 0 rimane inalterato.
Il primo elemento della variabile
.SM
.B FUNCNAME
è impostato al nome della funzione durante l'esecuzione
della funzione.
Tutti gli altri aspetti dell'ambiente di esecuzione della shell
sono identici tra una funzione e il suo chiamante
ad eccezione della gestione dei segnali
.SM
.B DEBUG
e
.B RETURN
(si veda la descrizione del comando incorporato
.B trap
sotto
.SM
.B COMANDI INCORPORATI DI SHELL
più avanti), i quali non sono ereditati a meno che alla funzione sia stato
dato l'attributo \fBtrace\fP (si veda la descrizione del comando incorporato
.SM
.B declare
più avanti) o l'opzione di shell
\fB\-o functrace\fP sia stata abilitata per mezzo del comando incorporato
\fBset\fP (nel qual caso tutte le funzioni
ereditano la gestione dei segnali \fBDEBUG\fP e \fBRETURN\fP).
.PP
Variabili locali alla funzione possono essere dichiarate con il comando incorporato
.BR local .
Di solito, le variabili e i loro valori sono condivisi tra la
funzione e il suo chiamante.
.PP
Se il comando incorporato
.B return
è eseguito in una funzione, la funzione termina e l'esecuzione
riprende con il comando che viene subito dopo
la chiamata di funzione.
Qualsiasi comando associato con la gestione del segnale \fBRETURN\fP
viene eseguito prima di riprendere l'esecuzione.
Quando una funzione termina i valori dei
parametri posizionali e il parametro speciale
.B #
sono ripristinati ai valori che avevano prima
dell'esecuzione della funzione.
.PP
I nomi delle funzioni e le definizioni possono essere elencati con l'opzione
.B \-f
dei comandi incorporati
.B declare
o
.BR typeset .
L'opzione
.B \-F
di
.B declare
o
.B typeset
elenca solo i nomi di funzione
(e opzionalmente il file d'origine e il numero di riga, se l'opzione
di shell \fBextdebug\fP è abilitata).
Le funzioni possono essere esportate, in modo che le subshell
automaticamente le trovino già definite con l'opzione
.B \-f
del comando incorporato
.BR export .
Una definizione di funzione
può essere cancellata usando l'opzione \fB\-f\fP
del comando incorporato
.B unset .
Da notare che funzioni
e variabili di shell aventi lo stesso nome possono risultare
in più elementi con lo stesso nome nell'ambiente passato
alle shell figlie.
Bisogna fare attenzione ai casi in cui questo può causare un problema.
.PP
Le funzioni possono essere ricorsive.  Nessun limite è posto sul numero
di chiamate ricorsive.
.SH "VALUTAZIONE ARITMETICA"
La shell permette di calcolare espressioni aritmetiche, sotto certe
circostanze (si veda i comandi incorporati \fBlet\fP e \fBdeclare\fP
e \fBEspansione aritmetica\fP).
Il calcolo viene fatta usando interi a larghezza fissa, senza
controllo di supero della capacità, sebbene la divisione per 0
sia intercettata e segnalata come errore.  Gli operatori e la loro
precedenza, associatività e valori, sono gli stessi del linguaggio C.
La seguente lista di operatori è raggruppata per operatori di uguale
livello di precedenza.
I livelli sono elencati in ordine di precedenza decrescente.
.PP
.PD 0
.TP
.B \fIid\fP++ \fIid\fP\-\-
post-incremento e post-decremento di una variabile
.TP
.B ++\fIid\fP \-\-\fIid\fP
pre-incremento e pre-decremento di una variabile
.TP
.B \- +
meno e più unari
.TP
.B ! ~
negazione logica e "bit a bit"
.TP
.B **
elevamento a potenza
.TP
.B * / %
moltiplicazione, divisione, modulo
.TP
.B + \-
addizione, sottrazione
.TP
.B << >>
scorrimento "bit a bit" a sinistra e a destra
.TP
.B <= >= < >
confronto
.TP
.B == !=
uguaglianza e differenza
.TP
.B &
AND "bit a bit"
.TP
.B ^
OR esclusivo "bit a bit"
.TP
.B |
OR "bit a bit"
.TP
.B &&
AND logico
.TP
.B ||
OR logico
.TP
.B \fIexpr\fP?\fIexpr\fP:\fIexpr\fP
operatore condizionale
.TP
.B = *= /= %= += \-= <<= >>= &= ^= |=
assegnamento
.TP
.B \fIexpr1\fP , \fIexpr2\fP
virgola
.PD
.PP
Le variabili di shell possono essere usate come operandi; l'espansione di
parametro è effettuata prima della valutazione dell'espressione.
All'interno di un'espressione, le variabili di shell possono essere
referenziate anche per nome senza bisogno di usare la sintassi di
espansione di parametro.  Una variabile di shell nulla o rimossa ha valore
0 se referenziata per nome senza l'uso della sintassi di espansione
di parametro.  Il valore di una variabile è valutato come un'espressione
aritmetica quando è referenziata, o quando a una variabile a cui è
stato dato l'attributo \fIinteger\fP con \fBdeclare -i\fP è stato
assegnato un valore.  Un valore nullo viene considerato come 0.
Una variabile di shell non ha bisogno essere stata dichiarata intera
per poter essere usata in un'espressione.
.PP
Le costanti che iniziano per 0 sono interpretate come numeri ottali.
Uno 0x o 0X iniziale si usa per indicare numeri esadecimali.
Altrimenti, i numeri prendono la forma [\fIbase#\fP]n, dove \fIbase\fP è
un numero decimale tra 2 e 64 che definisce la base aritmetica,
e \fIn\fP è un numero espresso in quella base.
Se \fIbase#\fP è omessa, allora è usata la base 10.
Le cifre maggiori di 9 sono rappresentate dalle lettere minuscole,
dalle lettere maiuscole, e da @ e _, in quest'ordine.
Se la \fIbase\fP è minore o uguale a 36, le lettere minuscole e maiuscole
possono essere usate indifferentemente per rappresentare numeri
compresi tra 10 e 35.
.PP
Gli operatori sono valutati in ordine di precedenza.  Le subespressioni
tra parentesi sono valutate prima e possono prevalere sulle regole di
precedenza di cui sopra.
.SH "ESPRESSIONI CONDIZIONALI"
Le espressioni condizionali sono usate dal comando composto \fB[[\fP e
dai comandi incorporati \fBtest\fP e \fB[\fP per verificare
attributi di file ed effettuare comparazioni aritmetiche e fra stringhe.
Le espressioni sono formate dalle seguenti primitive unarie o binarie.
Se qualsiasi argomento di \fIfile\fP di una delle primitive è della
forma \fI/dev/fd/n\fP, il descrittore di file \fIn\fP viene controllato.
Se l'argomento di \fIfile\fP di una delle primitive è uno tra
\fI/dev/stdin\fP, \fI/dev/stdout\fP o \fI/dev/stderr\fP, il descrittore
di file 0, 1 o 2, rispettivamente, viene controllato.
.PP
Se non diversamente specificato, le primitive che operano su file
utilizzano eventuali collegamenti simbolici e operano sul file puntato
dal collegamento simbolico, invece che sul collegamento simbolico stesso.
.sp 1
.PD 0
.TP
.B \-a \fIfile\fP
Vero se \fIfile\fP esiste.
.TP
.B \-b \fIfile\fP
Vero se \fIfile\fP esiste ed è un file speciale a blocchi.
.TP
.B \-c \fIfile\fP
Vero se \fIfile\fP esiste ed è un file speciale a caratteri.
.TP
.B \-d \fIfile\fP
Vero se \fIfile\fP esiste ed è una directory.
.TP
.B \-e \fIfile\fP
Vero se \fIfile\fP esiste.
.TP
.B \-f \fIfile\fP
Vero se \fIfile\fP esiste ed è un file normale [non una directory o altro].
.TP
.B \-g \fIfile\fP
Vero se \fIfile\fP esiste ed è impostato il suo bit set-group-id.
.TP
.B \-h \fIfile\fP
Vero se \fIfile\fP esiste ed è un collegamento simbolico [symbolic link].
.TP
.B \-k \fIfile\fP
Vero se \fIfile\fP ha il suo ``sticky'' bit impostato.
.TP
.B \-p \fIfile\fP
Vero se \fIfile\fP esiste ed è una named pipe (FIFO).
.TP
.B \-r \fIfile\fP
Vero se \fIfile\fP esiste ed è leggibile.
.TP
.B \-s \fIfile\fP
Vero se \fIfile\fP esiste ed è di dimensione maggiore di zero byte.
.TP
.B \-t \fIfd\fP
Vero se il descrittore di file
.I fd
è aperto e si tratta di un terminale.
.TP
.B \-u \fIfile\fP
Vero se \fIfile\fP esiste ed è impostato il suo bit set-user-id.
.TP
.B \-w \fIfile\fP
Vero se \fIfile\fP esiste ed è scrivibile.
.TP
.B \-x \fIfile\fP
Vero se \fIfile\fP esiste ed è eseguibile.
.TP
.B \-O \fIfile\fP
Vero se \fIfile\fP esiste ed è posseduto dall'id effettivo dell'utente.
.TP
.B \-G \fIfile\fP
Vero se \fIfile\fP esiste ed è posseduto dal gruppo effettivo dell'utente.
.TP
.B \-L \fIfile\fP
Vero se \fIfile\fP esiste ed è un collegamento simbolico.
.TP
.B \-S \fIfile\fP
Vero se \fIfile\fP esiste ed è un socket.
.TP
.B \-N \fIfile\fP
Vero se \fIfile\fP esiste ed è stato modificato dopo l'ultima volta in cui è stato letto.
.TP
\fIfile1\fP \-\fBnt\fP \fIfile2\fP
Vero se \fIfile1\fP è più recente (come data di modifica) di \fIfile2\fP
o se \fIfile1\fP esiste e \fPfile2\fP no.
.TP
\fIfile1\fP \-\fBot\fP \fIfile2\fP
Vero se \fIfile1\fP è più vecchio di file2, o se \fIfile2\fP esiste e
\fIfile1\fP no.
.TP
\fIfile1\fP \fB\-ef\fP \fIfile\fP
Vero se \fIfile1\fP e \fIfile2\fP si riferiscono allo stesso dispositivo
e hanno lo stesso numero di inode.
.TP
.B \-o \fIoptname\fP
Vero se l'opzione di shell
.I optname
è abilitata.
Si veda l'elenco delle opzioni sotto la descrizione dell'opzione
.B \-o
al comando incorporato
.B set
più avanti.
.TP
.B \-z \fIstringa\fP
Vero se la lunghezza di \fIstringa\fP è 0.
.TP
\fIstringa\fP
.PD 0
.TP
.B \-n \fIstringa\fP
.PD
Vero se la lunghezza di
.I stringa
è diversa da zero.
.TP
\fIstringa1\fP \fB==\fP \fIstringa2\fP
Vero se le stringhe sono uguali. \fB=\fP può essere usato invece che
\fB==\fP per aderire rigorosamente allo standard POSIX.
.TP
\fIstringa1\fP \fB!=\fP \fIstringa2\fP
Vero se le stringhe non sono uguali.
.TP
\fIstringa1\fP \fB<\fP \fIstringa2\fP
Vero se \fIstringa1\fP precede come ordine \fIstringa2\fP
lessicograficamente nella localizzazione corrente.
.TP
\fIstringa1\fP \fB>\fP \fIstringa2\fP
Vero se \fIstringa1\fP segue come ordine \fIstringa2\fP
lessicograficamente nella localizzazione corrente.
.TP
.I \fIarg1\fP \fBOP\fP \fIarg2\fP
.SM
.B OP
è uno tra
.BR \-eq ,
.BR \-ne ,
.BR \-lt ,
.BR \-le ,
.BR \-gt ,
o
.BR \-ge .
Questi operatori aritmetici binari risultano veri se \fIarg1\fP è,
rispettivamente, uguale, non uguale, minore, minore o uguale, maggiore,
o maggiore o uguale ad \fIarg2\fP.
.I Arg1
e
.I arg2
possono essere numeri interi positivi o negativi.
.PD
.SH "ESPANSIONE DI COMANDO SEMPLICE"
Quando viene eseguito un comando semplice la shell effettua le seguenti
espansioni, assegnamenti e ridirezioni, da sinistra a destra.
.IP 1.
Le parole che l'analizzatore ha individuato essere assegnamenti di
variabile (quelle che precedono il nome di comando) oppure ridirezioni
vengono messe da parte per un'elaborazione successiva.
.IP 2.
Le parole che non sono assegnamenti di variabile o ridirezioni sono
espanse.  Se è presente qualche parola dopo l'espansione, la prima parola
è considerata essere il nome del comando e le rimanenti parole come
argomenti dello stesso.
.IP 3.
Le ridirezioni sono effettuate come descritte prima sotto
.SM
.BR RIDIREZIONE .
.IP 4.
Il testo dopo \fB=\fP in ogni assegnamento di variabile è sottoposto a
espansione della tilde, sostituzione di comando, espansione aritmetica
e rimozione dei caratteri di quotatura prima di venir assegnato alla variabile.
.PP
Se non risulta nessun nome di comando, gli assegnamenti di variabile influenzano l'ambiente di shell corrente.  Altrimenti, le variabili sono aggiunte
all'ambiente del comando eseguito senza influenzare l'ambiente di shell corrente.
Se uno qualsiasi degli assegnamenti tenta di assegnare un valore a una variabile
in sola lettura, si verifica un errore e il comando è terminato con uno stato diverso da zero.
.PP
Se non risulta nessun nome di comando le ridirezioni sono effettuate ma
senza influenzare l'ambiente di shell corrente.  Se si verifica un errore
di ridirezione il comando è terminato con uno stato diverso da zero.
.PP
Se è rimasto un nome di comando dopo l'espansione, l'esecuzione
procede come descritto sotto.  Altrimenti, il comando esce.
Se una delle espansioni conteneva una sostituzione di comando lo stato di
uscita del comando è lo stato d'uscita dell'ultima sostituzione di comando
eseguita.  Se non ci sono state sostituzioni di comando il comando esce
con uno stato d'uscita di zero.
.SH "ESECUZIONE DI UN COMANDO"
Dopo che un comando è stato suddiviso in parole, se esso risulta essere
un comando semplice e di una lista opzionale di argomenti, sono
eseguite le seguenti azioni.
.PP
Se il nome del comando non contiene barra [/], la shell tenta
di localizzarla.  Se esiste una funzione di shell con quel nome, viene
invocata quella funzione, come descritto prima in
.SM
.BR FUNZIONI .
Se il nome non corrisponde a una funzione, la shell lo cerca nella
lista dei comandi incorporati della shell.  Se ne viene trovato uno
corrispondente, viene invocato quel comando incorporato.
.PP
Se il nome non è né una funzione di shell né un comando incorporato,
e non contiene alcuna barra [/],
.B bash
cerca tra gli elementi della variabile
.SM
.B PATH
una directory che contenga un file eseguibile con quel nome.
.B Bash
usa una tabella hash [indicizzata] per ricordare i percorsi completi dei file
eseguibili (si veda
.B hash
sotto
.SM
.B "COMANDI INCORPORATI DELLA SHELL"
più avanti).
Una ricerca completa nelle directory in
.SM
.B PATH
è effettuata solo se il comando non viene trovato nella tabella hash.
Se la ricerca non ha successo, la shell stampa un messaggio di errore e
ritorna uno stato d'uscita di 127.
.PP
Se la ricerca ha successo, o se il nome del comando contiene uno o più
barre [/], la shell esegue il programma indicato in un ambiente
di esecuzione separato.
L'argomento 0 è impostato al nome specificato, e i rimanenti argomenti
del comando sono impostati agli argomenti specificati, se presenti.
.PP
Se quest'esecuzione non ha successo perché il file non è in formato eseguibile
e il file non è una directory, si suppone che sia uno
\fIscript di shell\fP, cioè un file
che contiene comandi di shell, ed è generata una subshell per
eseguirlo.  Questa subshell reinizializza se stessa, così che l'effetto è
come se fosse stata invocata una nuova shell per gestire
lo script, con la differenza che la lista dei nomi completi
di comando ricordati dalla shell genitrice (si veda
.B hash
più avanti sotto
.SM
\fBCOMANDI INCORPORATI DELLA SHELL\fP)
sono disponibili anche alla shell figlia.
.PP
Se il programma è un file che inizia con
.BR #! ,
il resto della prima riga del file stesso specifica un interprete da invocare.  La shell esegue l'interprete specificato
su sistemi operativi che non gestiscono
questo formato eseguibile essi stessi.  Gli argomenti per
l'interprete consistono di un singolo argomento opzionale che segue il
nome dell'interprete sulla prima riga del programma, seguito dal nome
del programma, seguito dagli argomenti
forniti al comando, se ve ne sono.
.SH AMBIENTE DI ESECUZIONE DEL COMANDO
La shell ha un \fIambiente di esecuzione\fP, costituito
da:
.sp 1
.IP \(bu
file aperti ereditati dalla shell all'invocazione, come modificati dalle
ridirezioni fornite al comando incorporato \fBexec\fP
.IP \(bu
la corrente directory di lavoro come impostata da \fBcd\fP, \fBpushd\fP
o \fBpopd\fP, o ereditata dalla shell all'invocazione
.IP \(bu
la maschera del modo di creazione dei file come impostata da
\fBumask\fP o ereditata dalla shell genitrice
.IP \(bu
i segnali da intercettare impostati da \fBtrap\fP
.IP \(bu
parametri di shell che sono stati impostati da un assegnamento di variabile
o con \fBset\fP, o ereditati dalla shell genitrice nell'ambiente
.IP \(bu
funzioni di shell definite durante l'esecuzione o ereditate dalla
shell genitrice nell'ambiente
.IP \(bu
opzioni abilitate all'invocazione (sia per default che con
argomenti da riga di comando) o da \fBset\fP
.IP \(bu
opzioni abilitate da \fBshopt\fP
.IP \(bu
alias di shell definiti da \fBalias\fP
.IP \(bu
vari ID di processo, inclusi quelli dei job in background,
il valore di \fB$$\fP e il valore di \fB$PPID\fP
.PP
Quando un comando semplice, diverso da una funzione incorporata o da una
funzione di shell, dev'essere eseguito, viene invocato
in un ambiente di esecuzione separato che comprende tutto quello che
viene illustrato qui di seguito.  Se non altrimenti notato,
i valori sono ereditati dalla shell.
.sp 1
.IP \(bu
i file aperti della shell, più qualsiasi modificazione e aggiunta
specificata dalle ridirezioni al comando
.IP \(bu
la directory di lavoro corrente
.IP \(bu
la maschera del modo di creazione dei file
.IP \(bu
variabili di shell e funzioni dichiarate esportabili,
insieme alle variabili esportate per il comando, passate nell'ambiente
.IP \(bu
i segnali da intercettare come da comando trap dalla shell sono riportati ai valori ereditati
dalla shell genitrice, e i segnali ignorati dalla shell vengono ignorati
.PP
Un comando invocato in quest'ambiente separato non può influenzare
l'ambiente di esecuzione della shell [genitrice].
.PP
Sostituzione di comando, comandi raggruppati fra parentesi e comandi
asincroni sono invocati in un ambiente di subshell
che è un duplicato dell'ambiente di shell, con l'eccezione che
i segnali intercettati dalla shell sono riportati ai valori
che la shell eredita dalla shell genitrice all'invocazione.  I comandi
incorporati che sono invocati come parte di una pipeline sono anch'essi
eseguiti in un ambiente di subshell.  Modifiche fatte all'ambiente di
subshell non possono influenzare l'ambiente di esecuzione della shell [genitrice].
.PP
Se un comando è invocato da un \fB&\fP e il job-control non è attivo,
lo standard input di default per il comando è il file vuoto
\fI/dev/null\fP.  Altrimenti il comando invocato eredita i descrittori
di file della shell chiamante come modificati dalle ridirezioni.
.SH AMBIENTE
Quando viene invocato un programma gli viene dato un array di
stringhe chiamato [insieme delle variabili di]
.IR ambiente .
Questa è una lista di coppie
\fInome\fP\-\fIvalore\fP, della forma
.IR "nome\fR=\fPvalore" .
.PP
La shell consente di manipolare l'ambiente in molti modi.
All'invocazione, la shell esamina il suo ambiente e crea un
parametro per ogni nome trovato,
marcandolo automaticamente per essere
.I esportato
ai processi figli.  I comandi eseguiti ereditano l'ambiente.
I comandi
.B export
e
.B declare \-x
permettono di aggiungere o togliere dall'ambiente parametri e
funzioni.  Se il valore di un parametro d'ambiente viene
modificato, il nuovo valore diventa parte dell'ambiente,
sostituendo il valore precedente.  L'ambiente ereditato
da qualsiasi comando eseguito è costituito dall'ambiente
iniziale della shell, i cui valori possono essere
modificati nella shell, diminuiti di ogni coppia rimossa dal comando
.BR unset ,
e aumentati da ogni aggiunta attraverso i comandi
.B export
e
.B declare \-x .
.PP
L'ambiente per qualsiasi
.I comando semplice
o funzione può essere ampliato temporaneamente premettendo degli
assegnamenti di parametro al comando stesso, come descritto prima in
.SM
.BR PARAMETRI .
Queste istruzioni di assegnamento influenzano solo l'ambiente utilizzato
da quel comando.
.PP
Se è impostata l'opzione
.B \-k
(si veda il comando incorporato
.B set
più avanti),
.I tutti
gli assegnamenti di parametro sono resi disponibili nell'ambiente
del comando, non solo quelli che precedono il nome del comando.
.PP
Quando
.B bash
invoca un comando esterno, la variabile
.B _
viene impostata al nome completo del percorso del comando, e passato
a quel comando nel suo ambiente.
.SH "STATO D'USCITA"
Ai fini della shell, un comando che termina con uno stato d'uscita
zero ha avuto successo.  Uno stato d'uscita pari a zero indica successo.
Uno stato d'uscita diverso da zero indica errore.
Quando un comando termina su un segnale fatale \fIN\fP, \fBbash\fP
usa il valore di 128+\fIN\fP come stato d'uscita.
.PP
Se un comando non viene trovato, il processo figlio creato per
eseguirlo ritorna uno stato pari a 127.  Se un comando viene trovato
ma non è eseguibile lo stato di ritorno è 126.
.PP
Se un comando non ha successo a causa di un errore durante l'espansione
o la ridirezione, lo stato d'uscita è maggiore di zero.
.PP
I comandi incorporati della shell restituiscono uno stato di 0
(\fIvero\fP) in caso di successo, e diverso da zero (\fIfalso\fP)
in caso di errore durante l'esecuzione.  Tutti i comandi incorporati
restituiscono uno stato d'uscita di 2 per indicare l'uso scorretto.
.PP
\fBBash\fP stessa ritorna lo stato d'uscita dell'ultimo comando
eseguito, a meno che non avvenga un errore di sintassi, nel qual caso
essa esce con un valore diverso da zero.  Si veda anche il
comando incorporato \fBexit\fP più avanti.
.SH SEGNALI
Quando \fBbash\fP è interattiva, in assenza di ogni segnale da intercettare col comando trap, ignora
.SM
.B SIGTERM
(così che \fBkill 0\fP non uccide una shell interattiva),
e
.SM
.B SIGINT
viene intercettato e gestito (così che il comando incorporato
\fBwait\fP è interrompibile).  In tutti i casi, \fBbash\fP ignora
.SM
.BR SIGQUIT .
Se si usa il job-control,
.B bash
ignora
.SM
.BR SIGTTIN ,
.SM
.BR SIGTTOU ,
e
.SM
.BR SIGTSTP .
.PP
I comandi non incorporati invocati da \fBbash\fP hanno i gestori
di segnali impostati sui valori ereditati dalla shell dalla sua
genitrice.  Quando non si usa il job-control, i comandi asincroni
ignorano
.SM
.B SIGINT
e
.SM
.BR SIGQUIT .
in aggiunta a questi gestori ereditati.
I comandi eseguiti come risultato di una sostituzione di comando
ignorano i segnali di job-control generati da tastiera
.SM
.BR SIGTTIN ,
.SM
.BR SIGTTOU ,
e
.SM
.BR SIGTSTP .
.PP
La shell esce per default al ricevimento di un
.SM
.BR SIGHUP .
Prima di uscire, una shell interattiva ri-invia un segnale
.SM
.B SIGHUP
a tutti i job [richiesti tramite job-control], in esecuzione
o sospesi.  Ai job sospesi viene inviato un segnale
.SM
.B SIGCONT
per essere sicuri che ricevano il segnale
.SM
.BR SIGHUP .
Per prevenire l'invio del segnale da parte della shell
a un particolare job, quest'ultimo dovrebbe essere rimosso dalla
tabella dei job col comando incorporato
.B disown
(si veda
.SM
.B "COMANDI INCORPORATI DELLA SHELL"
più avanti) o contrassegnato
per non ricevere
.SM
.B SIGHUP
usando
.BR "disown \-h" .
.PP
Se l'opzione di shell
.B huponexit
è stata impostata con
.BR shopt ,
.B bash
invia un segnale
.SM
.B SIGHUP
a tutti i job quando una shell di login interattiva esce.
.PP
Se \fBbash\fP è in attesa che un comando finisca e riceve un
segnale per il quale è stato impostata un'intercettazione di segnale, il
comando relativo alla gestione del segnale viene eseguito solo al termine del comando.
Quando \fBbash\fP è in attesa della fine di un comando asincrono
attraverso il comando incorporato \fBwait\fP, la ricezione di un segnale
per il quale un'intercettazione di segnale è stata impostata fa sì che
il comando incorporato \fBwait\fP termini immediatamente con uno stato
d'uscita maggiore di 128, e immediatamente dopo viene innescata la gestione del segnale intercettato.
.SH "JOB-CONTROL"
Il termine
.I job-control
si riferisce alla capacità di fermare (\fIsospendere\fP) selettivamente
l'esecuzione di processi e continuare (\fIriprendere\fP)
la loro esecuzione in seguito.  Tipicamente, un utente utilizza
questa possibilità attraverso un'interfaccia interattiva costituita
congiuntamente dal driver del terminale di sistema e da
.BR bash .
.PP
La shell associa un
.I job
a ogni pipeline.  Essa mantiene una tabella dei job correntemente in
esecuzione, che può essere visualizzata con il comando
.BR jobs .
Quando
.B bash
avvia un job in modo asincrono (in
.IR background ),
stampa una riga tipo:
.RS
.PP
[1] 25647
.RE
.PP
che indica che questo job è il job numero 1 e che l'ID di processo
dell'ultimo processo nella pipeline associata a questo job è 25647.
Tutti i processi in una singola pipeline fanno parte dello stesso job.
.B Bash
usa l'astrazione
.I job
come base per il job-control.
.PP
Per facilitare l'implementazione dell'interfaccia utente per il
job-control, il sistema mantiene la nozione di \fIID del gruppo di processi del terminale corrente\fP.
I membri di questo gruppo di processo (processi il cui ID del gruppo di processo è uguale all'ID del gruppo di processo del terminale corrente)
ricevono segnali generati da tastiera, come
.SM
.BR SIGINT .
Si dice che questi processi sono in
.I primo piano
(foreground - oppure sincroni).
I processi in
.I background
(sullo sfondo - oppure asincroni) sono quelli il cui ID del gruppo di processo differisce
da quello del terminale; tali processi sono immuni dai segnali
generati da tastiera.  Solo ai processi in foreground è permesso di
leggere o scrivere sul terminale.  Ai processi in background che
tentano di leggere (scrivere) sul terminale è inviato un segnale
.SM
.B SIGTTIN (SIGTTOU)
dal driver del terminale,
che, se non intercettato, sospende il processo.
.PP
Se il sistema operativo sul quale
.B bash
è in esecuzione supporta
il job-control
.B bash
è in grado di utilizzarlo.
Battere il carattere di
.I sospensione
(tipicamente
.BR ^Z ,
Control-Z) mentre un processo è in esecuzione, provoca la sospensione di
quel processo e restituisce il controllo a
.B bash .
Battere il carattere di
.I "sospensione ritardata"
(tipicamente
.BR ^Y ,
Control-Y) provoca la sospensione del processo quando questo tenta di
leggere input dal terminale, e la
restituzione del controllo a
.BR bash .
Si può poi cambiare lo stato di questo job, usando il comando
.B bg
per continuarlo in background, il comando
.B fg
per riportarlo in foreground,
o il comando
.B kill
per farlo terminare.  Un \fB^Z\fP ha effetto immediatamente, e ha l'effetto
collaterale di causare la perdita
dell'output in sospeso e del "type ahead" [caratteri immessi a terminale ma non ancora passati al programma].
.PP
Vi sono diversi modi per riferirsi a un job nella shell.
Il carattere
.B %
designa un nome di job.  Un job con numero
.I n
può essere indicato come
.BR %n .
Un job può anche essere indicato usando un prefisso del nome usato per
avviarlo, o usando una substringa che appare nella sua riga di comando.
Per esempio,
.B %ce
si riferisce a un job
.B ce
sospeso.  Se un prefisso corrisponde a più di un job,
.B bash
restituisce un messaggio di errore.  L'uso di
.BR %?ce ,
d'altra parte, indica qualsiasi job che contiene la stringa
.B ce
nella sua riga di comando.  Se la substringa corrisponde a più di un job,
.B bash
restituisce un messaggio di errore.  I simboli
.B %%
e
.B %+
si riferiscono alla nozione della shell del
.IR "job corrente" ,
ossia l'ultimo job sospeso mentre era in foreground o avviato
in background.
Il
.I "job precedente"
può essere referenziato usando
.BR %\- .
Nell'output che riguarda i job (per esempio, l'output del comando
.BR jobs),
il job corrente è sempre segnalato con un
.BR + ,
ed il job precedente con un
.BR \- .
Un singolo % (senza alcuna specificazione associata) è pure un modo
per designare il job corrente.
.PP
La semplice menzione di un job può essere usata per riportarlo in
foreground:
.B %1
è un sinonimo per
\fB``fg %1''\fP,
che porta il job 1 dal background al foreground.
Nello stesso modo,
.B ``%1 &''
riprende l'esecuzione del job 1 in background, ossia equivale a
\fB``bg %1''\fP.
.PP
La shell viene notificata immediatamente ogni volta che un job cambia stato.
Normalmente,
.B bash
aspetta finché non deve stampare un prompt prima di informare dei
cambiamenti nello stato di un job, in modo da non interrompere
alcun altro output.  Se l'opzione
.B \-b
del comando
incorporato
.B set
è impostata,
.B bash
riporta tali cambiamenti immediatamente.
Delle eventuali istruzioni di intercettazione del segnale
.B SIGCHLD
viene eseguita per ogni processo figlio che esce.
.PP
Se si tenta di uscire da
.B bash
mentre vi sono dei job sospesi, la shell stampa un messaggio di
avvertimento.  Si può quindi usare il comando
.B jobs
per controllare il loro stato.
Se si fa un secondo tentativo per uscire senza immettere
alcun altro comando, non si riceve più il messaggio di avvertimento e i
job sospesi vengono terminati.
.SH STRINGHE DI PROMPT
Quando eseguita interattivamente,
.B bash
mostra il prompt primario
.SM
.B PS1
quando è pronta per leggere un comando, e il prompt secondario
.SM
.B PS2
quando è in attesa di altro input per completare un comando.
.B Bash
permette di personalizzare queste stringhe di prompt inserendo un certo
numero di caratteri speciali preceduti da backslash che sono decodificati come segue:
.RS
.PD 0
.TP
.B \ea
un carattere ASCII di allarme (07) [campanello o bip]
.TP
.B \ed
la data nel formato "Giorno-della-settimana Mese Giorno" (ad es., "Tue May 26")
.TP
.B \eD{\fIformato\fP}
il \fIformato\fP viene passato a \fIstrftime\fP(3) e il risultato è
inserito nella stringa di prompt; un \fIformato\fP vuoto
genera una rappresentazione di data/ora specifica della localizzazione.  Le parentesi graffe sono obbligatorie
.TP
.B \ee
un carattere ASCII di escape (033)
.TP
.B \eh
il nome dell'host fino al primo `.'
.TP
.B \eH
il nome dell'host
.TP
.B \ej
il numero di job attualmente gestiti dalla shell
.TP
.B \el
il basename [nome all'interno della directory] del terminale in cui è eseguita la shell
.TP
.B \en
newline [su una nuova linea, ossia il prompt può essere su più linee]
.TP
.B \er
carriage return [a inizio linea, ma non su una nuova linea]
.TP
.B \es
il nome della shell, il basename [nome all'interno della directory] di
.B $0
(la parte che segue l'ultima barra [/])
.TP
.B \et
l'ora corrente nel formato HH:MM:SS 24 ore
.TP
.B \eT
l'ora corrente nel formato HH:MM:SS 12 ore
.TP
.B \e@
l'ora corrente nel formato am/pm 12 ore
.TP
.B \eA
l'ora corrente nel formato HH:MM 24 ore
.TP
.B \eu
il nome-utente dell'utente corrente
.TP
.B \ev
la versione di \fBbash\fP (ad es., 2.00)
.TP
.B \eV
la release di \fBbash\fP, versione + livello di patch (ad es., 2.00.0)
.TP
.B \ew
la directory di lavoro corrente con \fBHOME\fP abbreviato con una tilde
.TP
.B \eW
il basename della directory di lavoro corrente, con \fBHOME\fP
abbreviato con una tilde
.TP
.B \e!
il numero nella cronologia del comando attuale
.TP
.B \e#
il numero di comando del comando attuale
.TP
.B \e$
se l'UID effettivo è 0, un
.BR # ,
altrimenti un
.B $
.TP
.B \ennn
il carattere [ASCII] che corrisponde al numero ottale \fBnnn\fP
.TP
.B \e\e
un backslash
.TP
.B \e[
marca l'inizio di una sequenza di caratteri non stampabili, che può essere
usata per includere nel prompt una sequenza di controllo del terminale
.TP
.B \e]
marca la fine di una sequenza di caratteri non stampabili
.PD
.RE
.PP
Il numero del comando e il numero nella cronologia sono generalmente
differenti: il numero della cronologia di un comando è la sua
posizione nella lista della cronologia, la quale può includere comandi
preesistenti nel file di cronologia (si veda
.SM
.B CRONOLOGIA
più avanti), mentre il numero del comando è la posizione nella sequenza
dei comandi eseguiti durante la corrente sessione di shell.  Dopo che la
stringa è decodificata, essa è espansa attraverso l'espansione di
parametro, la sostituzione di comando, l'espansione aritmetica e la
rimozione dei caratteri di quotatura, secondo quanto specificato dal valore dell'opzione di shell
.B promptvars
(si veda più avanti la descrizione del comando
.B shopt
sotto
.SM
.B "COMANDI INCORPORATI DELLA SHELL"
).
.SH "READLINE"
Questa è la libreria che gestisce la lettura dell'input quando si usa
una shell interattiva, a meno che non si specifichi l'opzione
.BR \-\-noediting
all'invocazione della shell.
Per default, i comandi per l'editor della riga comandi sono simili
a quelli di emacs.  È anche disponibile un'interfaccia per editor
di riga in stile vi.  Per chiudere l'interfaccia per l'editor di riga dopo l'esecuzione della shell utilizzare l'opzione
-B +o emacs
o
.B +o vi
del comando incorporato
.B set
(si veda
.SM
.B COMANDI INCORPORATI DELLA SHELL
più avanti).
.SS "Notazione readline"
.PP
In questa sezione, si usa la notazione in stile emacs per indicare i
tasti da battere.  I tasti di controllo sono indicati da
C\-\fItasto\fR, per esempio, C\-n significa Control\-N.
In modo simile, i
.I meta
tasti sono indicati da M\-\fItasto\fR, cioè M\-x significa Meta\-X.
(Sulle tastiere senza un tasto
.I meta ,
M\-\fIx\fP significa ESC \fIx\fP, cioè, si preme il tasto Escape e poi
il tasto
.I x .
Questo rende ESC il \fImeta prefisso\fP.
La combinazione M\-C\-\fIx\fP significa ESC\-Control\-\fIx\fP,
ossia si preme il tasto Escape poi si tiene il tasto
Control mentre si preme il tasto
.I x
).
.PP
Ai comandi readline possono essere specificati
.IR argomenti
numerici che normalmente sono dei contatori di ripetizione.
A volte, tuttavia, è il segno dell'argomento a essere significativo.
Passando un argomento negativo a un comando che agisce in avanti
(ad es., \fBkill\-line\fP), il comando agisce nella direzione
opposta.
I comandi il cui comportamento con gli argomenti è diverso da questo
sono indicati più avanti.
.PP
Quando un comando è descritto come \fIeliminazione\fP di testo, il
testo cancellato viene salvato per un possibile riutilizzo futuro
(\fIyanking\fP).  Il testo eliminato viene salvato in un
\fIkill-ring\fP.  Eliminazioni consecutive provocano l'accumulazione
del testo in una unità, che può essere recuperata tutta in una volta.
Comandi che non eliminano testo separano parti di testo nel kill-ring.
.SS "Inizializzazione di Readline"
.PP
Readline è personalizzata inserendo comandi in un file
di inizializzazione (il file \fIinputrc\fP ).
Il nome di questo file è preso dal valore della variabile
.SM
.B INPUTRC .
Se questa variabile non è definita il valore di default è
.IR ~/.inputrc .
Quando un programma che usa la libreria readline viene avviato, viene
letto il file di inizializzazione, e vengono impostate le associazioni
di tasti e assegnate le variabili.
Ci sono solo alcuni costrutti base
consentiti nel file d'inizializzazione di readline.
Le righe vuote sono ignorate.
Le righe che iniziano con un \fB#\fP sono commenti.
Le righe che iniziano con un \fB$\fP indicano costrutti condizionali.
Le altre righe indicano associazioni di tasti e impostazioni di variabili.
.PP
Le associazioni di tasti di default possono essere cambiate
con un file
.I inputrc .
Altri programmi che usano questa libreria possono aggiungere
i loro propri comandi e associazioni.
.PP
Per esempio, porre
.RS
.PP
M\-Control\-u: universal\-argument
.RE
o
.RS
C\-Meta\-u: universal\-argument
.RE
nel file
.I inputrc
farebbe eseguire a M\-C\-u il comando della readline
.I universal\-argument .
.PP
Sono riconosciuti i seguenti nomi simbolici di carattere:
.IR RUBOUT ,
.IR DEL ,
.IR ESC ,
.IR LFD ,
.IR NEWLINE ,
.IR RET ,
.IR RETURN ,
.IR SPC ,
.IR SPACE
e
.IR TAB .
.PP
In aggiunta al nome del comando, readline consente che a un tasto
corrisponda una stringa che è inserita quando quel tasto è premuto
(una \fImacro\fP).
.SS "Associazioni di tasti readline"
.PP
La sintassi per il controllo delle associazioni dei tasti nel file
.I inputrc
è semplice.  Tutto quel che è richiesto è il nome del comando
o il testo di una macro e una sequenza di tasti alla quale dovrà
essere associato.  Il nome può essere specificato in uno di due modi:
come nome simbolico di un tasto, eventualmente con i prefissi
\fIMeta\-\fP o \fIControl\-\fP, o come una sequenza di tasti.
.PP
Quando si usa la forma \fBnome\-tasto\fP:\^\fInome\-funzione\fP o \fImacro\fP,
.I nome\-tasto
è il nome di un tasto in inglese.  Per esempio:
.sp
.RS
Control-u: universal\-argument
.br
Meta-Rubout: backward-kill-word
.br
Control-o: "> output"
.RE
.LP
Negli esempi precedenti,
.I C\-u
viene collegato alla funzione
.BR universal\-argument ,
.I M\-DEL
viene collegato alla funzione
.BR backward\-kill\-word ,
e
.I C\-o
viene collegato all'esecuzione della macro indicata sul lato destro
(cioè, inserire il testo
.if t \f(CW> output\fP
.if n ``> output''
nella riga).
.PP
Nella seconda forma, \fB"sequenza\-tasti"\fP:\fInome\-funzione\fP o \fImacro\fP,
.B sequenza\-tasti
differisce da
.B nome\-tasto
visto sopra, per il fatto che la stringa che denota un'intera sequenza di
tasti può essere specificata ponendo la sequenza fra
virgolette.  Alcuni tasti di protezione (escape) nello stile GNU Emacs
possono essere usati, come nei seguenti esempi, ma i nomi simbolici
dei caratteri non si possono utilizzare.
.sp
.RS
"\eC\-u": universal\-argument
.br
"\eC\-x\eC\-r": re\-read\-init\-file
.br
"\ee[11~": "Function Key 1"
.RE
.PP
In questo esempio,
.I C\-u
viene ancora collegato alla funzione
.BR universal\-argument .
.I "C\-x C\-r"
viene collegato alla funzione
.BR re\-read\-init\-file ,
e
.I "ESC [ 1 1 ~"
viene collegato all'inserimento del testo
.if t \f(CWFunction Key 1\fP.
.if n ``Function Key 1''.
.PP
L'insieme completo delle sequenze di protezione (escape) in stile GNU Emacs è
.RS
.PD 0
.TP
.B \eC\-
prefisso control
.TP
.B \eM\-
prefisso meta
.TP
.B \ee
un carattere di escape
.TP
.B \e\e
backslash
.TP
.B \e"
il carattere "
.TP
.B \e\(aq
il carattere \(aq
.RE
.PD
.PP
In aggiunta alle sequenze di protezione che iniziano col tasto escape in stile GNU Emacs, è disponibile
un secondo insieme di sequenze di protezione che iniziano con il backslash:
.RS
.PD 0
.TP
.B \ea
avviso (segnale acustico)
.TP
.B \eb
backspace
.TP
.B \ed
cancella [delete - tasto Del o Canc]
.TP
.B \ef
form feed [salto pagina]
.TP
.B \en
newline [nuova linea]
.TP
.B \er
carriage return [a inizio linea]
.TP
.B \et
tabulazione orizzontale
.TP
.B \ev
tabulazione verticale
.TP
.B \e\fInnn\fP
il carattere a otto bit il cui valore è rappresentato dal valore ottale
\fInnn\fP (da una a tre cifre ottali)
.TP
.B \ex\fIHH\fP
il carattere a otto bit il cui valore è rappresentato dal valore
esadecimale \fIHH\fP (una o due cifre esadecimali)
.RE
.PD
.PP
Quando si inserisce il testo di una macro, apostrofi o virgolette
devono essere usati per indicare una definizione di macro.
Un testo non quotato si suppone essere [che sia] un nome di funzione.
Nel corpo della macro, i segni di protezione backslash descritti prima
vengono espansi.  Il backslash quota qualsiasi altro carattere nel testo
della macro, inclusi " e \(aq.
.PP
.B Bash
permette di mostrare o modificare le associazioni correnti dei tasti
di readline con il comando incorporato
.B bind .
Il modo di editing può essere cambiato durante l'uso interattivo
usando l'opzione
.B \-o
del comando incorporato
.B set
(si veda
.SM
.B COMANDI INCORPORATI DELLA SHELL
più avanti).
.SS "Variabili readline"
.PP
Readline ha delle variabili che possono essere usate per personalizzare
ulteriormente il suo comportamento.  Una variabile può essere impostata nel file
.I inputrc
con un'istruzione della forma
.RS
.PP
\fBset\fP \fInome\-di\-variabile\fP \fIvalore\fP
.RE
.PP
Tranne dove diversamente indicato, le variabili di readline possono avere i valori
.B On
o
.BR Off
(senza distinzione fra maiuscole e minuscole).  I nomi di variabile non
riconosciuti vengono ignorati.  Quando viene letto un valore di variabile,
i valori vuoti o nulli, "on" (senza distinzione fra maiuscole e minuscole)
o "1" sono equivalenti a \fBOn\fP.  Tutti gli altri valori sono
equivalenti a \fBOff\fP.
Le variabili e i loro valori di default sono:
.PP
.PD 0
.TP
.B bell\-style (audible)
Controlla cosa succede se readline vuole usare il segnalatore
acustico del terminale.  Se impostato a \fBnone\fP, readline non emette
alcun segnale.  Se impostato a \fBvisible\fP, readline usa un
segnalatore visivo se disponibile.  Se impostato a
\fBaudible\fP, readline tenta di attivare il segnalatore acustico del terminale.
.TP
.B bind\-tty\-special\-chars (On)
Se impostato a \fBOn\fP, readline tenta di associare i caratteri di
controllo trattati in modo speciale dal driver del terminale nel kernel
agli equivalenti degli stessi come descritti da readline.
.TP
.B comment\-begin (``#'')
La stringa che è inserita quando è eseguito il comando
.B insert\-comment .
Questo comando è associato a
.B M\-#
in modalità comandi Emacs e a
.B #
in modalità comandi di vi.
.TP
.B completion\-ignore\-case (Off)
Se impostato a \fBOn\fP, readline effettua l'individuazione dei nomi di
file e il completamento seza distinguere le lettera maiuscole dalle lettere minuscole.
.TP
.B completion\-query\-items (100)
Questo determina a che punto interpellare l'utente per visualizzare
i possibili completamenti generati dal comando
\fBpossible\-completions\fP.
Può essere impostato a un numero intero maggiore o uguale
a zero.  Se il numero di possibili completamenti è maggiore o uguale al
valore di questa variabile, all'utente viene chiesto se desidera o meno
vederli; altrimenti essi sono semplicemente
elencati sul terminale.
.TP
.B convert\-meta (On)
Se impostato a \fBOn\fP, readline converte i caratteri con l'ottavo bit
uguale a 1 a una sequenza di caratteri ASCII eliminando l'ottavo bit e
aggiungendo come prefisso un carattere di protezione (in pratica, usando
l'escape come \fIprefisso meta\fP).
.TP
.B disable\-completion (Off)
Se impostato a \fBOn\fP, readline inibisce il completamento della
parola.  I caratteri di completamento saranno inseriti nella riga
come se fossero stati mappati come \fBself-insert\fP.
.TP
.B editing\-mode (emacs)
Controlla se readline parte con un insieme di associazioni di tasti
simile a \fIemacs\fP o \fIvi\fP.
.B editing\-mode
può essere impostato a
.B emacs
o a
.BR vi .
.TP
.B enable\-keypad (Off)
Quando impostato a \fBOn\fP, readline tenta di abilitare il tastierino
numerico se viene utilizzato.  Alcuni sistemi richiedono questo per
abilitare i tasti-freccia.
.TP
.B expand\-tilde (Off)
Se impostato a \fBon\fP, l'espansione della tilde è effettuata quando
readline tenta il completamento della parola.
.TP
.B history\-preserve\-point (Off)
Se impostato a \fBon\fP, il codice che implementa la cronologia
tenta di piazzare il cursore nel punto in cui si trovava
su ogni riga della cronologia visualizzata con
\fBprevious-history\fP o \fBnext-history\fP.
.TP
.B horizontal\-scroll\-mode (Off)
Quando impostato a \fBOn\fP, richiede a readline di usare una sola riga
per la visualizzazione, effettuando lo scroll dell'input in orizzontale
su una sola riga dello schermo quando essa risulti più lunga della
larghezza dello schermo, invece che andando a capo su una nuova riga.
.TP
.B input\-meta (Off)
Se impostato a \fBOn\fP, readline abilita l'input a otto bit (cioè,
non toglie il bit più alto dai caratteri che legge),
indipendentemente da quello che il terminale dichiara di supportare.  Il nome
.B meta\-flag
è un sinonimo per questa variabile.
.TP
.B isearch\-terminators (``C\-[C\-J'')
Una stringa di caratteri che fa terminare una ricerca incrementale
senza eseguire successivamente il carattere come se fosse un comando.
Se a questa variabile non è stato dato un valore, i caratteri
\fIESC\fP and \fIC\-J\fP fanno terminare una ricerca incrementale.
.TP
.B keymap (emacs)
Imposta la mappa corrente dei tasti di readline.  Il set dei nomi validi
per le mappe dei tasti è \fIemacs, emacs\-standard, emacs\-meta,
emacs\-ctlx, vi, vi\-command\fP e
.IR vi\-insert .
\fIvi\fP è equivalente a \fIvi\-command\fP; \fIemacs\fP è equivalente a
\fIemacs\-standard\fP.  Il valore di default è
.IR emacs ;
il valore di
.B editing\-mode
determina anche la mappa dei tasti di default.
.TP
.B mark\-directories (On)
Se impostata a \fBOn\fP, ai nomi delle directory completate è aggiunta una barra [/] alla fine.
.TP
.B mark\-modified\-lines (Off)
Se impostato a \fBOn\fP, le righe della cronologia che sono state
modificate sono mostrate precedute da un asterisco (\fB*\fP).
.TP
.B mark\-symlinked\-directories (Off)
Se impostato a \fBOn\fP, i nomi completati che sono collegamenti
simbolici a directory hanno una barra [/] alla fine (se richiesto tramite
\fBmark\-directories\fP).
.TP
.B match\-hidden\-files (On)
Questa variabile, se impostata a \fBOn\fP, fa sì che readline mostri anche
i file i cui nomi iniziano con un `.' (file nascosti) quando effettua
il completamento del nome di file, a meno che il `.' iniziale non sia
fornito dall'utente come parte del nome di file da completare.
.TP
.B output\-meta (Off)
Se impostato a \fBOn\fP, readline mostra i caratteri con l'ottavo bit
impostato direttamente, piuttosto che con una sequenza di protezione
avente come prefisso meta.
.TP
.B page\-completions (On)
Se impostato a \fBOn\fP, readline usa un paginatore interno simile a \fImore\fP
per mostrare i possibili completamenti una schermata alla volta.
.TP
.B print\-completions\-horizontally (Off)
Se impostato a \fBOn\fP, readline mostra i completamenti ordinati
in ordine alfabetico orizzontalmente, piuttosto che dall'alto in basso.
.TP
.B show\-all\-if\-ambiguous (Off)
Questo cambia il comportamento di default delle funzioni di
completamento.  Se impostato a
.BR on ,
le parole che hanno più di un possibile completamento provocano la
visualizzazione immediata delle coincidenze invece che l'attivazione del segnalatore acustico.
.TP
.B show\-all\-if\-unmodified (Off)
Questo cambia il comportamento di default delle funzioni di
completamento in maniera simile a \fBshow\-all\-if\-ambiguous\fP.
Se impostato a
.BR on ,
le parole che hanno più di un possibile completamento senza alcun
possibile completamento parziale (ovvero i possibili completamenti non
hanno alcun prefisso in comune) sono elencate immediatamente invece
che provocare l'attivazione del segnalatore acustico.
.TP
.B visible\-stats (Off)
Se impostato a \fBOn\fP, un carattere che denota un tipo di file come
riportato da \fIstat\fP(2) è accodato al nome di file
durante l'elencazione dei possibili completamenti.
.PD
.SS "Costrutto condizionale di readline"
.PP
Readline implementa un servizio simile, nello spirito, a quello
della compilazione condizionale nel preprocessore C, e che
permette di effettuare associazioni di tasti e impostazioni di
variabili in base al risultato di test.  Vi sono tre direttive di controllo usate.
.IP \fB$if\fP
Il costrutto
.B $if
permette che le associazioni siano fatte in base al modo di editing,
al terminale in uso o all'applicazione che fa uso di readline.
Il testo da verificare arriva fino alla fine della riga;
nessun carattere che lo delimiti è richiesto.
.RS
.IP \fBmode\fP
La forma \fBmode=\fP della direttiva \fB$if\fP è usata per verificare
se readline è in modo emacs o vi.
Questo può essere usato in congiunzione con il comando
\fBset keymap\fP, per esempio, per impostare le associazioni delle
mappe dei tasti di \fIemacs\-standard\fP e \fIemacs\-ctlx\fP solo se
readline è avviata in modo emacs.
.IP \fBterm\fP
La forma \fBterm=\fP può essere usata per includere associazioni di
tasti specifiche per un terminale, magari per associare le
sequenze di tasti emesse dai tasti funzione dei terminali.  La parola a destra dell'
.B =
viene confrontata con il nome completo del terminale e la parte del
nome del terminale che precede il primo \fB\-\fP.  Questo permette a
.I sun
di essere trovare corrispondenza sia con
.I sun
che con
.IR sun\-cmd ,
ad esempio.
.IP \fBapplication\fP
Il costrutto \fBapplication\fP è usato per includere impostazioni
specifiche per un'applicazione.  Ogni programma che usa la libreria
readline imposta il \fInome applicazione\fP, e un file di
inizializzazione può poi fare un test per un particolare valore.  Questo
può essere usato per associare sequenze di tasti a funzioni utili per uno
specifico programma.  Per esempio, il comando seguente aggiunge una
sequenza di tasti che quota la parola corrente o la parola precedente in Bash:
.sp 1
.RS
.nf
\fB$if\fP Bash
# Quota la parola corrente o precedente
"\eC\-xq": "\eeb\e"\eef\e""
\fB$endif\fP
.fi
.RE
.RE
.IP \fB$endif\fP
Questo comando, come si è visto nell'esempio precedente, fa terminare un
comando \fB$if\fP.
.IP \fB$else\fP
I comandi in questa parte della direttiva \fB$if\fP sono eseguiti se
il test non risulta verificato.
.IP \fB$include\fP
Questa direttiva prende un unico nome di file come argomento e legge
comandi e associazioni da quel file.  Per esempio, la seguente direttiva
legge \fI/etc/inputrc\fP:
.sp 1
.RS
.nf
\fB$include\fP \^ \fI/etc/inputrc\fP
.fi
.RE
.SS Ricerca
.PP
Readline è dotato di comandi per cercare nella cronologia dei comandi
(si veda
.SM
.B CRONOLOGIA
più avanti) righe contenenti una stringa specifica.
Ci sono due modalità di ricerca:
.I incrementale
e
.IR non-incrementale .
.PP
La ricerca incrementale inizia prima che l'utente abbia finito di
immettere la stringa di ricerca.
Mentre ogni carattere della stringa di ricerca viene battuto,
readline mostra la prima linea dalla cronologia che corrisponde alla
stringa battuta finora.  Una ricerca incrementale richiede solamente il
numero minimo di caratteri necessari per trovare l'elemento della cronologia desiderato.
I caratteri presenti nel valore della variabile \fBisearch-terminators\fP
sono usati per delimitare una ricerca incrementale.
Se a quella variabile non è stata assegnato un valore i caratteri di
Escape e Control-J fanno arrestare una ricerca incrementale.
Control-G interrompe una ricerca incrementale e ripristina la riga
originale.
Quando è terminata la ricerca, l'elemento della cronologia contenente
la stringa di ricerca diventa la riga corrente.
.PP
Per trovare altri elementi nell'elenco della cronologia, battere
Control-S o Control-R secondo il caso.  Viene eseguita così una
ricerca all'indietro o in avanti nella cronologia del successivo
elemento che corrisponde alla stringa di ricerca che è stata immessa.
Ogni altra sequenza di tasti associata a un comando readline pone termine
alla ricerca ed esegue il comando presente nella linea.  Per esempio, un \fInewline\fP provoca l'interruzione della ricerca e accetta la riga,
eseguendo così il comando proveniente dall'elenco della cronologia.
.PP
Readline ricorda l'ultima stringa di ricerca incrementale.  Se due Control-R
vengono battuti senza che siano intervenuti caratteri che definiscono
una nuova stringa di ricerca, viene utilizzata la stringa di ricerca memorizzata al momento.
.PP
Le ricerche non incrementali leggono l'intera stringa di ricerca prima
di avviare la ricerca per individuare righe nella cronologia.  La
stringa di ricerca può essere battuta dall'utente o essere parte del
contenuto della riga corrente.
.SS "Nomi di comando readline"
.PP
La seguente è una lista di nomi dei comandi e delle sequenze di tasti
di default a cui essi sono collegati.  Nomi di comando senza una
sequenza di tasti collegata a essi sono scollegati
per default.  Nelle descrizioni seguenti, \fIpunto\fP si riferisce alla
posizione corrente del cursore e \fImarca\fP alla posizione del
cursore salvata col comando \fBset\-mark\fP.
Il testo fra il punto e la marca è indicato come \fIregione\fP.
.SS Comandi di movimento
.PP
.PD 0
.TP
.B beginning\-of\-line (C\-a)
Si sposta all'inizio della riga corrente.
.TP
.B end\-of\-line (C\-e)
Si sposta alla fine della riga.
.TP
.B forward\-char (C\-f)
Si sposta avanti di un carattere.
.TP
.B backward\-char (C\-b)
Si sposta indietro di un carattere.
.TP
.B forward\-word (M\-f)
Si sposta in avanti fino alla fine della parola successiva.
Le parole sono composte di caratteri alfanumerici (lettere e cifre).
.TP
.B backward\-word (M\-b)
Si sposta indietro all'inizio della parola corrente o precedente.
Le parole sono composte di caratteri alfanumerici (lettere e cifre).
.TP
.B clear\-screen (C\-l)
Pulisce lo schermo lasciando la riga corrente in cima allo schermo.
Con un argomento, rinfresca la riga corrente senza ripulire lo
schermo.
.TP
.B redraw\-current\-line
Rinfresca la riga corrente.
.PD
.SS Comandi per manipolare la cronologia
.PP
.PD 0
.TP
.B accept\-line (Newline, Return)
Accetta la riga senza curarsi di dove sia il cursore.  Se questa riga non
è vuota, è aggiunta alla lista della cronologia in accordo con lo stato della variabile
.SM
.BR HISTCONTROL .
Se la riga è una riga di cronologia modificata, allora ripristina
la riga di cronologia al suo stato originale.
.TP
.B previous\-history (C\-p)
Prende il precedente comando dalla lista della cronologia, spostandosi
indietro nella lista.
.TP
.B next\-history (C\-n)
Prende il successivo comando dalla lista della cronologia, spostandosi
avanti nella lista.
.TP
.B beginning\-of\-history (M\-<)
Si sposta alla prima riga nella cronologia.
.TP
.B end\-of\-history (M\->)
Si sposta alla fine della cronologia dell'input, cioè, alla riga che
si sta inserendo.
.TP
.B reverse\-search\-history (C\-r)
Cerca all'indietro partendo dalla riga corrente spostandosi in `su'
attraverso la cronologia come necessario.  Questa è una ricerca incrementale.
.TP
.B forward\-search\-history (C\-s)
Cerca in avanti partendo dalla riga corrente e spostandosi in `giù'
attraverso la cronologia come necessario.  Questa è una ricerca incrementale.
.TP
.B non\-incremental\-reverse\-search\-history (M\-p)
Cerca all'indietro attraverso la cronologia, partendo dalla riga corrente,
una stringa fornita dall'utente, usando una ricerca non incrementale.
.TP
.B non\-incremental\-forward\-search\-history (M\-n)
Cerca in avanti attraverso la cronologia una stringa fornita
dall'utente, usando una ricerca non incrementale.
.TP
.B history\-search\-forward
Cerca in avanti attraverso la cronologia una stringa di caratteri tra
l'inizio della riga corrente e il punto del cursore.  Questa è una
ricerca non incrementale.
.TP
.B history\-search\-backward
Cerca all'indietro attraverso la cronologia una stringa di caratteri
tra l'inizio della riga corrente e il punto del cursore.  Questa è una
ricerca non incrementale.
.TP
.B yank\-nth\-arg (M\-C\-y)
Inserisce il primo argomento del comando precedente (generalmente
la seconda parola sulla riga precedente) alla posizione del cursore.
Con un argomento
.IR n ,
inserisce la \fIn\fP\-sima parola del comando precedente (le parole nel
comando precedente iniziano con la parola 0).  Un argomento negativo
inserisce la \fIn\fP\-sima parola dalla fine del comando precedente.
Una volta che l'argomento \fIn\fP è calcolato, l'argomento è estratto
come se l'espansione della cronologia "!\fIn\fP" sia stata specificata.
.TP
.B
yank\-last\-arg (M\-.\^, M\-_\^)
Inserisce l'ultimo argomento del comando precedente (l'ultima parola
della precedente riga di cronologia).  Con un argomento,
si comporta esattamente come \fByank\-nth\-arg\fP.
Chiamate consecutive a \fByank\-last\-arg\fP percorrono l'elenco
della cronologia all'indietro, inserendo ogni volta l'ultimo argomento di ogni riga.
I servizi dell'espansione della cronologia sono usati per estrarre
l'ultimo argomento, come se fosse stata specificata l'espansione della cronologia "!$".
.TP
.B shell\-expand\-line (M\-C\-e)
Espande la riga nello stesso modo in cui lo fa la shell.
Questo effettua l'espansione degli alias e della cronologia così come
tutte le espansioni di parola della shell.  Si veda
.SM
.B ESPANSIONE DELLA CRONOLOGIA
più avanti per una descrizione dell'espansione della cronologia.
.TP
.B history\-expand\-line (M\-^)
Effettua l'espansione della cronologia sulla riga corrente.
Si veda
.SM
.B ESPANSIONE DELLA CRONOLOGIA
più avanti per una descrizione dell'espansione della cronologia.
.TP
.B magic\-space
Effettua l'espansione della cronologia sulla riga corrente e
inserisce uno spazio.  Si veda
.SM
.B ESPANSIONE DELLA CRONOLOGIA
più avanti per una descrizione dell'espansione della cronologia.
.TP
.B alias\-expand\-line
Effettua l'espansione degli alias sulla riga corrente.
Si veda
.SM
.B ALIAS
sopra per una descrizione dell'espansione degli alias.
.TP
.B history\-and\-alias\-expand\-line
Effettua l'espansione della cronologia e degli alias sulla riga corrente.
.TP
.B insert\-last\-argument (M\-.\^, M\-_\^)
Un sinonimo di \fByank\-last\-arg\fP.
.TP
.B operate\-and\-get\-next (C\-o)
Accetta la riga corrente per l'esecuzione e prende dalla cronologia
la riga successiva a quella corrente, per l'editing.
Qualsiasi argomento viene ignorato.
.TP
.B edit\-and\-execute\-command (C\-xC\-e)
Invoca un editor sulla riga di comando corrente ed esegue il risultato
come comandi di shell.
\fBBash\fP tenta di invocare
.SM
.BR $FCEDIT ,
.SM
.BR $EDITOR
e \fIemacs\fP come editor, in quest'ordine.
.PD
.SS Comandi per cambiare il testo
.PP
.PD 0
.TP
.B delete\-char (C\-d)
Cancella il carattere nel punto del cursore.  Se il punto è all'inizio
della riga, non vi è alcun carattere nella riga, e l'ultimo carattere
battuto non era  associato a \fBdelete\-char\fP,
allora ritorna
.SM
.BR EOF .
.TP
.B backward\-delete\-char (Rubout)
Cancella il carattere dopo il cursore.  Quando è dato un argomento
numerico, salva il testo cancellato sul kill-ring.
.TP
.B forward\-backward\-delete\-char
Cancella il carattere sotto il cursore, a meno che il cursore non sia
alla fine della riga, nel qual caso il carattere dietro al cursore
viene cancellato.
.TP
.B quoted\-insert (C\-q, C\-v)
Aggiunge il successivo carattere battuto sulla riga in modo letterale.
Questo è il modo per inserire caratteri come \fBC\-q\fP, per esempio.
.TP
.B tab\-insert (C\-v TAB)
Inserisce un carattere tab.
.TP
.B self\-insert (a,\ b,\ A,\ 1,\ !,\ ...)
Inserisce il carattere battuto.
.TP
.B transpose\-chars (C\-t)
Trascina il carattere prima del punto del cursore in avanti sopra il
carattere nel punto, spostando anche il punto in avanti.
Se il punto è alla fine della riga, traspone
i due caratteri prima del
punto.  Argomenti negativi non hanno effetto.
.TP
.B transpose\-words (M\-t)
Trascina la parola prima del punto del cursore dopo la parola oltre il
punto, spostando inoltre il punto sopra quella parola.
Se il punto è alla fine della riga, allora traspone
le ultime due parole sulla riga.
.TP
.B upcase\-word (M\-u)
Rende maiuscola la parola corrente (o seguente).  Con un argomento
negativo, opera sulla parola precedente, ma non sposta il punto del cursore.
.TP
.B downcase\-word (M\-l)
Rende minuscola la parola corrente (o seguente).  Con un argomento
negativo, opera sulla parola precedente, ma non sposta il punto del cursore.
.TP
.B capitalize\-word (M\-c)
Rende maiuscola la prima lettera della parola corrente (o seguente).
Con un argomento negativo, opera sulla parola precedente, ma non sposta il punto del cursore.
.TP
.B overwrite\-mode
Alterna fra modalità inserimento e modalità di sovrascrittura.  Con un argomento numerico esplicito
positivo passa alla modalità sovrascrittura.  Con un argomento numerico
esplicito non positivo passa alla modalità inserimento.  Questo comando
riguarda solo la modalità \fBemacs\fP; la modalità \fBvi\fP sovrascrive
in modo diverso.  Ogni chiamata a \fIreadline()\fP viene avviata in modalità inserimento.
In modalità sovrascrittura i caratteri associati a \fBself\-insert\fP
sostituiscono il testo nel punto del cursore piuttosto che sospingere il testo verso destra.
I caratteri associati a \fBbackward\-delete\-char\fP sostituiscono il
carattere prima del punto con uno spazio.  Questo comando è non associato per default.
.PD
.SS Eliminazione e recupero
.PP
.PD 0
.TP
.B kill\-line (C\-k)
Elimina il testo dal punto del cursore fino alla fine della riga.
.TP
.B backward\-kill\-line (C\-x C\-Rubout)
Elimina all'indietro fino all'inizio della riga.
.TP
.B unix\-line\-discard (C\-u)
Elimina all'indietro dal punto del cursore fino all'inizio della riga.
Il testo eliminato  viene salvato nel kill-ring
.\" Non vi è alcuna reale differenza tra questo e backward-kill-line
.TP
.B kill\-whole\-line
Elimina tutti i caratteri sulla riga corrente, non importa dove sia il punto del cursore.
.TP
.B kill\-word  (M\-d)
Elimina dal punto del cursore fino alla fine della parola corrente,
o se tra parole, fino alla fine della successiva parola.
I delimitatori di parola sono gli stessi usati da \fBforward\-word\fP.
.TP
.B backward\-kill\-word (M\-Rubout)
Elimina la parola dietro il punto del cursore.  I delimitatori di parole
sono gli stessi usati da \fBforward\-word\fP.
.TP
.B unix\-word\-rubout (C\-w)
Elimina la parola dietro il punto del cursore, usando gli spazi bianchi
come delimitatori di parola.  Il testo eliminato è salvato nel kill-ring.
.TP
.B unix\-filename\-rubout
Elimina la parola prima del punto del cursore, usando uno spazio bianco
e il carattere barra [/] come delimitatori di parola.  Il testo eliminato è
salvato nel kill-ring.
.TP
.B delete\-horizontal\-space
Cancella tutti gli spazi e i tab attorno al punto del cursore.
.TP
.B kill\-region
Elimina il testo nella regione corrente.
.TP
.B copy\-region\-as\-kill
Copia il testo nella regione sul kill buffer.
.TP
.B copy\-backward\-word
Copia la parola prima del punto del cursore sul kill buffer.
I delimitatori di parola sono gli stessi di \fBbackward\-word\fP.
.TP
.B copy\-forward\-word
Copia la parola dopo il punto del cursore sul kill buffer.
I delimitatori di parola sono gli stessi di \fBforward\-word\fP.
.TP
.B yank (C\-y)
Copia il contenuto in cima al kill-ring e lo pone nel buffer nel punto del cursore.
.TP
.B yank\-pop (M\-y)
Ruota il kill-ring, e copia la nuova cima.  Funziona solo dopo
.B yank
o
.BR yank\-pop .
.PD
.SS Argomenti numerici
.PP
.PD 0
.TP
.B digit\-argument (M\-0, M\-1, ..., M\-\-)
Aggiunge questa cifra all'argomento che sta già accumulando,
o inizia un nuovo argomento.  M\-\- avvia un argomento negativo.
.TP
.B universal\-argument
Questo è un altro modo per specificare un argomento.
Se il comando è seguito da una o più cifre, opzionalmente con un segno
meno iniziale, queste cifre definiscono l'argomento.
Se il comando è seguito da cifre, eseguendo
.B universal\-argument
di nuovo termina l'argomento numerico, ma a parte questo viene ignorato.
Come caso speciale, se questo comando è seguito immediatamente da un
carattere che che non è né una cifra né un segno meno, il contatore
degli argomenti per il comando successivo è moltiplicato per quattro.
Il contatore è inizialmente uno, così eseguendo questa funzione la
prima volta il contatore diventa quattro, la seconda volta il contatore
diventa sedici, e così via.
.PD
.SS Completamento
.PP
.PD 0
.TP
.B complete (TAB)
Tenta di effettuare il completamento del testo che precede il punto del cursore.
.B Bash
tenta il completamento trattando il testo, rispettivamente, come una
variabile (se il testo inizia con \fB$\fP), nome di utente (se il testo
comincia con \fB~\fP), nome di host (se il testo comincia con \fB@\fP)
o comando (inclusi alias e funzioni).  Se nessuna di questi produce
una risultato, viene tentato il completamento del nome di file.
.TP
.B possible\-completions (M\-?)
Elenca i possibili completamenti del testo che precede il punto del cursore.
.TP
.B insert\-completions  (M\-*)
Inserisce tutti i completamenti del testo che precede il punto del
cursore che sarebbero stati generati da
\fBpossible\-completions\fP.
.TP
.B menu\-complete
Simile a \fBcomplete\fP, ma sostituisce la parola da completare
con una corrispondenza singola dalla lista dei possibili completamenti.
Un'esecuzione ripetuta di \fBmenu\-complete\fP scorre la
lista dei possibili completamenti, inserendo una corrispondenza alla volta.
Alla fine della lista dei completamenti viene emesso un segnale
acustico (dipendente dall'impostazione di \fBbell\-style\fP)
e il testo originale è ripristinato.
Con un argomento \fIn\fP si sposta di \fIn\fP posizioni in avanti nella
lista dei completamenti individuati; può essere usato un argomento
negativo per spostarsi all'indietro nella la lista.
Questo comando è da associare normalmente al tasto \fBTAB\fP, però
non è associato per default.
.TP
.B delete\-char\-or\-list
Cancella il carattere sotto il cursore se non si trova all'inizio o
alla fine della riga (simile a \fBdelete\-char\fP).
Se è alla fine della riga, si comporta in modo identico a
\fBpossible\-completions\fP.
Questo comando non è associato per default.
.TP
.B complete\-filename (M\-/)
Tenta il completamento del nome del file sul testo che precede il punto del cursore.
.TP
.B possible\-filename\-completions (C\-x /)
Elenca i possibili completamenti del testo che precede il punto del
cursore, trattandolo come un nome di file.
.TP
.B complete\-username (M\-~)
Tenta il completamento del testo che precede il punto del cursore,
trattandolo come un nome di utente.
.TP
.B possible\-username\-completions (C\-x ~)
Elenca i possibili completamenti del testo che precede il punto del
cursore, trattandolo come un nome di utente.
.TP
.B complete\-variable (M\-$)
Tenta il completamento del testo che precede il punto del cursore,
trattandolo come una variabile di shell.
.TP
.B possible\-variable\-completions (C\-x $)
Elenca i possibili completamenti del testo che precede il punto del
cursore, trattandolo come una variabile di shell.
.TP
.B complete\-hostname (M\-@)
Tenta il completamento del testo che precede il punto del cursore,
trattandolo come un nome di host.
.TP
.B possible\-hostname\-completions (C\-x @)
Elenca i possibili completamenti del testo che precede il punto del
cursore, trattandolo come un nome di host.
.TP
.B complete\-command (M\-!)
Tenta il completamento del testo che precede punto del cursore,
trattandolo come nome di comando.  Il completamento di comando tenta di
far combaciare il testo confrontandolo con alias, parole riservate,
funzioni di shell, comandi incorporati di shell e, da ultimo, nomi di
file eseguibili, in quest'ordine.
.TP
.B possible\-command\-completions (C\-x !)
Elenca i possibili completamenti del testo che precede il punto del
cursore, trattandolo come un nome di comando.
.TP
.B dynamic\-complete\-history (M\-TAB)
Tenta il completamento del testo che precede il punto del cursore,
confrontando il testo con le righe della lista della cronologia
cercando le possibili corrispondenze di completamento.
.TP
.B complete\-into\-braces (M\-{)
Effettua il completamento del nome di file e insericse la lista dei
possibili completamenti racchiusi tra parentesi graffe,
rendendo la lista disponibile per la shell (si veda
.B Espansione delle parentesi graffe
sopra).
.PD
.SS Macro di tastiera
.PP
.PD 0
.TP
.B start\-kbd\-macro (C\-x (\^)
Inizia a salvare i caratteri battuti nella corrente macro di tastiera.
.TP
.B end\-kbd\-macro (C\-x )\^)
Smette di salvare i caratteri battuti nella corrente macro di tastiera
e memorizza la definizione.
.TP
.B call\-last\-kbd\-macro (C\-x e)
Riesegue l'ultima macro di tastiera definita, facendo sì che i caratteri
nella macro appaiano come se fossero stati battuti sulla tastiera.
.PD
.SS Varie
.PP
.PD 0
.TP
.B re\-read\-init\-file (C\-x C\-r)
Legge il contenuto del file \fIinputrc\fP, e incorpora
ogni associazione o assegnamento di variabile che trova.
.TP
.B abort (C\-g)
Annulla il corrente comando di editing ed emette il segnale acustico
del terminale (dipendente dall'impostazione di
.BR bell\-style ).
.TP
.B do\-uppercase\-version (M\-a, M\-b, M\-\fIx\fP, ...)
Se il carattere \fIx\fP battuto assieme al tasto Meta è minuscolo,
esegue il comando collegato al corrispondente carattere maiuscolo.
.TP
.B prefix\-meta (ESC)
Definisce come tasto Meta il successivo carattere battuto.
.SM
.B ESC
.B f
è equivalente a
.BR Meta\-f .
.TP
.B undo (C\-_, C\-x C\-u)
Undo incrementale, memorizzato separatamente per ogni riga.
.TP
.B revert\-line (M\-r)
Annulla tutti i cambiamenti fatti su questa riga.  Questo è come eseguire il comando
.B undo
un numero di volte sufficiente a riportare la riga al suo stato iniziale.
.TP
.B tilde\-expand (M\-&)
Effettua l'espansione della tilde sulla parola corrente.
.TP
.B set\-mark (C\-@, M\-<space>)
Imposta la marca in corrispondenza del punto del cursore.  Se viene
fornito un argomento numerico la marca viene impostato a quella posizione.
.TP
.B exchange\-point\-and\-mark (C\-x C\-x)
Scambia il punto del cursore con la marca.  La posizione corrente del cursore
è impostata alla posizione salvata, e la vecchia posizione del cursore è salvata come marca.
.TP
.B character\-search (C\-])
Viene letto un carattere e il punto del cursore è spostato all'occorrenza
successiva di quel carattere.  Un contatore negativo cerca occorrenze precedenti.
.TP
.B character\-search\-backward (M\-C\-])
Viene letto un carattere e il punto del cursore è spostato all'occorrenza
precedente di quel carattere.  Un contatore negativo cerca occorrenze successive.
.TP
.B insert\-comment (M\-#)
Senza un argomento numerico il valore della variabile readline
.B comment\-begin
è inserito all'inizio della riga corrente.
Se è fornito un argomento numerico questo comando agisce come un
interruttore: se i caratteri all'inizio della riga
non corrispondono al valore di \fBcomment\-begin\fP, il valore viene
inserito, altrimenti i caratteri in \fBcomment-begin\fP vengono
cancellati dall'inizio della riga.
In entrambi i casi la riga viene accettata come se fosse stato battuto un
codice di fine riga (newline).  Il valore di default di
\fBcomment\-begin\fP fa sì che questo comando trasformi la riga
corrente in un commento di shell.
Se un argomento numerico provoca la rimozione del carattere di
commento, la riga verrà eseguita dalla shell.
.TP
.B glob\-complete\-word (M\-g)
La parola prima del punto del cursore è trattata come un modello per l'espansione del percorso,
con un asterisco aggiunto alla fine implicitamente.  Questo modello
viene usato per generare una lista di nomi di file corrispondenti a possibili completamenti.
.TP
.B glob\-expand\-word (C\-x *)
La parola prima del punto del cursore è trattata come un modello per l'espansione
del percorso, e la lista dei nomi di file individuati viene
inserita, sostituendo la parola.  Se viene fornito un argomento numerico
viene aggiunto alla fine un asterisco prima dell'espansione del percorso.
.TP
.B glob\-list\-expansions (C\-x g)
Viene mostrata la lista delle espansioni che sarebbero state generate da
.B glob\-expand\-word
e la riga è ridisegnata.
Se viene fornito un argomento numerico, un asterisco è aggiunto prima
dell'espansione del percorso.
.TP
.B dump\-functions
Stampa tutte le funzioni e le loro associazioni di tasti sul file di
output di readline.  Se è fornito un argomento numerico, l'output è
formattato in modo tale da poter essere inserito in un file
\fIinputrc\fP.
.TP
.B dump\-variables
Stampa tutte le variabili readline impostabili e i loro valori sul file di
output di readline.  Se viene fornito un argomento numerico
l'output è formattato in modo tale da poter essere inserito in un
file \fIinputrc\fP.
.TP
.B dump\-macros
Stampa tutte le sequenze di tasti readline associate a macro e le
stringhe da loro prodotte.  Se viene fornito un argomento numerico
l'uscita è formattata in modo tale da poter essere inserito in un
file \fIinputrc\fP.
.TP
.B display\-shell\-version (C\-x C\-v)
Mostra l'informazione sulla versione della corrente istanza di
.BR bash .
.PD
.SS Completamento programmabile
.PP
Quando viene tentato il completamento della parola per un argomento
di un comando per il quale una specifica di completamento  (una
\fIcompspec\fP) è stata definita col comando incorporato \fBcomplete\fP (si veda
.SM
.B "COMANDI INCORPORATI DELLA SHELL"
più avanti), vengono invocati i servizi di completamento programmabile.
.PP
Per prima cosa viene identificato il nome del comando.
Se un comspec è stato definito per quel comando, il comspec è
usato per generare la lista dei possibili completamenti per la parola.
Se il nome del comando è un percorso completo di file, viene
ricercato per primo un comspec per il percorso completo.
Se non viene trovato nessun comspec per il percorso completo viene
fatto un tentativo per trovare un comspec per la porzione che segue la barra [/] finale.
.PP
Un volta trovato un comspec, questo è usato per generare la lista
delle parole corrispondenti.
Se non viene trovato un comspec, viene effettuato il completamento di
\fBbash\fP di default come descritto in precedenza, sotto \fBCompletamento\fP.
.PP
Per prima cosa, sono usate le azioni specificate dal comspec.
Sono restituite solo le corrispondenze che iniziano con la
parola che dev'essere completata.
Quando viene usata l'opzione
.B \-f
o
.B \-d
per il completamento del nome di file o della directory, la variabile
di shell
.SM
.B FIGNORE
è usata per filtrare le corrispondenze.
.PP
In seguito, viene generato qualsiasi completamento specificato da un
modello di espansione del nome di file all'opzione \fB\-G\fP.
Le parole generate dal modello non devono necessariamente corrispondere
alla parola che dev'essere completata.
La variabile di shell
.SM
.B GLOBIGNORE
non è usata per filtrare le corrispondenze, ma viene usata
la variabile
.B FIGNORE .
.PP
In seguito, viene considerata la stringa specificata come argomento
all'opzione \fB\-W\fP.
La stringa è prima suddivisa usando i caratteri nella
variabile speciale
.SM
.B IFS
come delimitatori.
È rispettata la quotatura della shell.
Ogni parola viene poi espansa usando
espansione delle parentesi graffe, espansione della tilde, espansione
di parametro e di variabile, sostituzione di comando ed
espansione aritmetica, come descritto in precedenza, sotto
.SM
.BR ESPANSIONE .
I risultati sono suddivisi usando le regole sopra descritte sotto
\fBSuddivisione in parole\fP.
I risultati dell'espansione sono confrontati con la parte iniziale della
parola che dev'essere completata, e quelli che corrispondono diventano i possibili completamenti.
.PP
Dopo che queste corrispondenze sono state generate, viene invocata
qualsiasi funzione di shell o comando specificato con le opzioni
\fB\-F\fP e \fB\-C\fP.  Quando il comando o funzione viene invocata, alle variabili
.SM
.B COMP_LINE
e
.SM
.B COMP_POINT
sono assegnati valori come descritto in precedenza, sotto
\fBVariabili di shell\fP.
Quando una funzione di shell sta per essere invocata, le variabili
.SM
.B COMP_WORDS
e
.SM
.B COMP_CWORD
sono pure impostate.
Quando viene invocata una funzione o comando, il primo argomento è il
nome del comando i cui argomenti sono stati completati, il secondo
argomento è la parola da completare e il terzo argomento è la parola
che precede  la parola da completare sulla riga di comando corrente.
Non viene effettuata nessuna azione di filtro sui completamenti
generati confrontandoli con la parola da completare;
la funzione o comando ha libertà completa nel generare le corrispondenze.
.PP
Qualsiasi funzione specificata con \fB\-F\fP viene invocata per prima.
La funzione può usare uno qualsiasi dei servizi di shell, incluso il
comando incorporato \fBcompgen\fP descritto più avanti, per generare
le corrispondenze.
la funzione deve mettere i possibili completamenti della variabile di array
.SM
.B COMPREPLY .
.PP
In seguito, qualsiasi comando specificato con l'opzione \fB\-C\fP
viene invocato in un ambiente equivalente alla sostituzione di comando.
Questo dovrebbe stampare una lista di completamenti, uno per riga,
sullo standard output.
Un backslash può essere usato per proteggere un newline, se necessario.
.PP
Una volta generati tutti i possibili completamenti, ogni filtro
specificato con l'opzione \fB\-X\fP viene applicato alla lista.
Il filtro è un modello come quello usato per l'espansione di percorso;
una \fB&\fP nel modello è sostituita col testo della parola da
completare.  Una \fB&\fP letterale si può indicare con un backslash di
protezione; il backslash viene rimosso prima della ricerca di una
corrispondenza.  Ogni completamento che corrisponde al modello viene
rimosso dalla lista.  Un \fB!\fP iniziale nega il modello; in questo
caso ogni completamento non corrispondente al modello viene rimosso.
.PP
Infine, qualsiasi prefisso e suffisso specificato dalle opzioni \fB\-
P\fP e \fB\-S\fP è aggiunto a ogni membro della lista di completamento
e il risultato è restituito al codice di completamento readline come
lista di completamenti possibili.
.PP
Se le azioni precedentemente applicate non generano corrispondenze, e a
\fBcomplete\fP era stata fornita l'opzione \fB\-o dirnames\fP quando
era stato definito comspec, viene tentato il completamento come nome di directory.
.PP
Se a \fBcomplete\fP era stata fornita l'opzione \fB\-o plusdirs\fP
quando era stato definito comspec, viene tentato il completamento come
nomi di directory e qualunque corrispondenza è aggiunta ai risultati delle altre azioni.
.PP
Per default, se viene trovato un comspec, qualsiasi cosa generi
viene restituito al codice di completamento come insieme completo di
completamenti possibili.  I completamenti di \fBbash\fP di default non
vengono tentati, e la readline di default del completamento del nome
di file è disabilitata.  Se l'opzione \fB\-o bashdefault\fP era stata
fornita a \fBcomplete\fP al momento della definizione di comspec, i
completamenti di default di \fBbash\fP vengono tentati se il comspec
non genera corrispondenze.  Se l'opzione \fB\-o default\fP era stata
fornita a \fBcomplete\fP al momento della definizione di comspec, i
completamenti di default di readline vengono effettuati se il comspec
(e, se tentato, il completamento di default di \fBbash\fP) non genera corrispondenze.
.PP
Quando un comspec indica che è desiderato il completamento come nome di
directory, le funzioni di completamento programmabile forzano readline
ad aggiungere una barra [/] ai nomi completati che sono collegamenti
simbolici a directory, dipendente dal valore della variabile di readline
\fBmark\-directories\fP, indipendentemente dall'impostazione della variabile di readline \fBmark-symlinked\-directories\fP.
.SH CRONOLOGIA
Quando l'opzione
.B \- history
del comando incorporato
.B set
è abilitata, la shell fornisce l'accesso alla
\fIcronologia dei comandi\fP,
la lista dei comandi precedentemente battuti.
Il valore della variabile \fBHISTSIZE\fP è usata come
numero di comandi da salvare nell'elenco della cronologia.
Il testo degli ultimi
.SM
.B HISTSIZE
comandi (per default 500) viene salvato.  La shell
immagazzina ogni comando nella lista della cronologia prima
dell'espansione di parametro e di variabile (si veda
.SM
.B ESPANSIONE
sopra) ma dopo che è stata effettuata l'espansione della cronologia,
dipendente dai valori delle variabili di shell
.SM
.B HISTIGNORE
e
.SM
.BR HISTCONTROL .
.PP
All'avvio, la cronologia è inizializzata dal file indicato dalla
variabile
.SM
.B HISTFILE
(per default \fI~/.bash_history\fP).
Il file indicato dal valore di
.SM
.B HISTFILE
viene troncato, se necessario, per contenere non più del
numero di righe specificate dal valore di
.SM
.B HISTFILESIZE .
Quando una shell interattiva esce, le ultime
.SM
.B $HISTSIZE
righe vengono copiate dalla lista della cronologia su
.SM
.BR $HISTFILE .
Se l'opzione di shell
.B histappend
è abilitata
(si veda la descrizione di
.B shopt
sotto
.SM
.B "COMANDI INCORPORATI DELLA SHELL"
più avanti), le righe vengono accodate al file della cronologia,
in caso contrario il file della cronologia viene sovrascritto.
Se
.SM
.B HISTFILE
non è impostato o il file della cronologia è non scrivibile, la
cronologia non viene salvata.  Dopo il salvataggio della cronologia il
file della cronologia è troncato per contenere non più di
.SM
.B HISTFILESIZE
righe.  Se
.SM
.B HISTFILESIZE
non è impostato, nessun troncamento viene effettuato.
.PP
Il comando incorporato
.B fc
(si veda
.SM
.B COMANDI INCORPORATI DELLA SHELL
più avanti) può essere usato per elencare o editare e rieseguire una
parte della lista della cronologia.
Il comando incorporato
.B history
può essere usato per mostrare o modificare la lista della cronologia e
manipolare il file di cronologia.
Quando si usa l'editing della riga di comando, sono disponibili
comandi di ricerca in ciascun modo di editing che fornisce accesso
alla lista della cronologia.
.PP
La shell permette il controllo su quali comandi salvare nella lista della
cronologia.  Le variabili
.SM
.B HISTCONTROL
e
.SM
.B HISTIGNORE
possono essere definite in modo tale che la shell salvi solo un
sottoinsieme dei comandi immessi.
L'opzione di shell
.B cmdhist
, se abilitata, fa sì che la shell tenti di salvare ogni riga di un
comando multiriga nello stesso elemento della cronologia,
aggiungendo dei punti e virgola dove necessario per preservare le correttezza sintattica.
L'opzione di shell
.B lithist
chiede alla shell di salvare i comandi con i codici di fine riga
(newline) inclusi invece che separare i comandi con dei punti e virgola.  Si veda la descrizione del comando incorporato
.B shopt
più avanti, sotto
.SM
.B "COMANDI INCORPORATI DELLA SHELL"
per informazioni su come definire e annullare le opzioni di shell.
.SH "ESPANSIONE DELLA CRONOLOGIA"
.PP
La shell ha la capacità di espandere la cronologia in maniera
simile all'espansione della cronologia in
.BR csh.
Questa sezione descrive le possibilità di sintassi
disponibili.  Questa possibilità è abilitata per default per
le shell interattive, e può essere disabilitata usando l'opzione
.B \+H
del comando incorporato
.B set
(si veda
.SM
.B COMANDI INCORPORATI DELLA SHELL
più avanti).  Le shell non interattive non effettuano l'espansione della
cronologia per default.
.PP
Le espansioni della cronologia inseriscono parole dall'elenco della
cronologia nel flusso di input, agevolando la ripetizione di comandi,
l'inserimento di argomenti di comandi precedenti nella riga di input
corrente, o la correzione rapida di errori in comandi già immessi.
.PP
L'espansione della cronologia è effettuata immediatamente dopo che una
riga completa è stata letta, prima che la shell la divida in parole.
Essa ha luogo in due parti.
La prima è per determinare quale riga dall'elenco della cronologia
usare durante la sostituzione.
La seconda è per selezionare parti di quella riga da includere nella
riga corrente.
La riga selezionata dalla cronologia è l'\fIevento\fP, e la
parte di quella riga su cui si agisce sono le \fIparole\fP.  Diversi
\fImodificatori\fP sono disponibili per manipolare le parole
selezionate.  La riga è spezzata in parole allo stesso modo che quando è
letta in input, così che più parole separate da \fImetacaratteri\fP\
circondate da caratteri di quotatura sono considerate come una sola parola.
Le espansioni della cronologia iniziano con la comparsa di un
carattere di espansione della cronologia, che è \^\fB!\fP\^
per default.  Solo il backslash (\^\fB\e\fP\^) e gli apostrofi possono
quotare il carattere di espansione della cronologia.
.PP
Diversi caratteri inibiscono l'espansione della cronologia quando trovati
immediatamente dopo il carattere di espansione della cronologia, anche
se non quotato: spazio, carattere di tabulazione, newline,
carriage return e \fB=\fP.  Se l'opzione di shell \fBestglob\fP è
abilitata, anche \fB(\fP inibisce l'espansione.
.PP
Diverse opzioni di shell impostabili col comando incorporato
.B shopt
possono essere usate per influenzare il comportamento dell'espansione
della cronologia.  Se l'opzione di shell
.B histverify
è abilitata (si veda la descrizione del comando incorporato
.B shopt
), e si sta usando
.B readline
, le sostituzioni della cronologia non vengono passate immediatamente
all'analizzatore della shell.
Invece, la riga espansa è ricaricata nel buffer di editing di
.B readline
per ulteriori modifiche.
Se si sta usando
.B readline
ed è abilitata l'opzione di shell
.B histreedit
, una sostituzione di cronologia non completata con successo viene ricaricata
nel buffer di editing di
.B readline
per essere corretta.
L'opzione
.B \-p
al comando incorporato
.B history
può essere usata per vedere cosa farebbe un'espansione della cronologia
prima di usarla davvero.
L'opzione
.B \-s
del comando incorporato
.B history
può essere usata per aggiungere comandi alla fine della lista della
cronologia senza eseguirli veramente, in modo che siano disponibili
per essere richiamati in un secondo tempo.
.pp
La shell permette il controllo dei vari caratteri usati dal meccanismo
di espansione della cronologia (si veda la precedente descrizione di
.B histchars
sotto
.BR "Variabili di shell" ).
.SS Designatore di evento
.PP
Un designatore di evento è un riferimento a un elemento di riga di
comando nella lista della cronologia.
.PP
.PD 0
.TP
.B !
Inizia una sostituzione di cronologia, tranne quando seguita da un
.BR blank ,
newline, carriage return, =
o ( (quando l'opzione di shell \fBextglob\fP è abilitata usando
il comando incorporato \fBshopt\fP).
.TP
.B !\fIn\fR
Designa la riga di comando
.IR n .
.TP
.B !\-\fIn\fR
Designa la riga di comando corrente meno
.IR n .
.TP
.B !!
Designa il comando precedente.  Questo è un sinonimo per `!\-1'.
.TP
.B !\fIstringa\fR
Designa il comando più recente che inizia con
.IR stringa .
.TP
.B !?\fIstringa\fR\fB[?]\fR
Designa il comando più recente che contiene
.IR stringa .
Il \fB?\fP finale può essere omesso se
.I stringa
è seguita immediatamente da un codice di fine riga (newline).
.TP
.B \d\s+2^\s-2\u\fIstring1\fP\d\s+2^\s-2\u\fIstring2\fP\d\s+2^\s-2\u
Sostituzione rapida.  Ripete l'ultimo comando, rimpiazzando
.I stringa1
con
.IR stringa2 .
Equivalente a
``!!:s/\fIstringa1\fP/\fIstringa2\fP/''
(si veda \fBModificatori\fP più avanti).
.TP
.B !#
L'intera riga di comando battuta fino a questo punto.
.PD
.SS Designatori di parola
.PP
I designatori di parola sono usati per selezionare parole dall'evento.
Un
.B :
separa la specificazione di evento dal designatore di parola.
Esso può essere omesso se il designatore di parola inizia con un
.BR ^ ,
.BR $ ,
.BR * ,
.BR \-
o
.BR % .
Le parole sono numerate dall'inizio della riga,
la prima parola essendo denotata da uno 0 (zero).
Le parole sono inserite nella riga corrente separate da spazi singoli.
.PP
.PD 0
.TP
.B 0 (zero)
La parola numero zero.  Per la shell, questa è
la parola che costituisce il nome del comando.
.TP
.I n
La \fIn\fR\-esima parola.
.TP
.B ^
Il primo argomento.  Cioè, la parola 1.
.TP
.B $
L'ultimo argomento.
.TP
.B %
La parola che combacia con `?\fIstringa\fR?' nella più recente ricerca.
.TP
.I x\fB\-\fPy
Un intervallo di parole; `\-\fIy\fR' abbrevia `0\-\fIy\fR'.
.TP
.B *
Tutte le parole tranne la numero zero.  Questo è un sinonimo per
`\fI1\-$\fP'.  Non è un errore usare
.B *
se vi è solo una parola nell'evento; in quel caso il
risultato è una stringa vuota.
.TP
.B x*
Abbrevia \fIx\-$\fP.
.TP
.B x\-
Abbrevia \fIx\-$\fP come \fBx*\fP, ma omette l'ultima parola.
.PD
.PP
Se un designatore di parola è fornito senza una specificazione di
evento, il comando precedente viene usato come evento.
.SS Modificatori
.PP
Dopo l'opzionale designatore di parola, può comparire una sequenza
di uno o più fra i seguenti modificatori, ognuno preceduto da un `:'.
.PP
.PD 0
.PP
.TP
.B h
Rimuove un componente finale in un nome di file, lasciando solo la testa.
.TP
.B r
Rimuove un suffisso finale della forma \fI.xxx\fP, lasciando il nome
base (basename).
.TP
.B e
Rimuove tutto tranne il suffisso finale.
.TP
.B t
Rimuove tutti i componenti di testa in un percorso, lasciando la coda.
.TP
.B p
Stampa il nuovo comando ma non lo esegue.
.TP
.B q
Quota le parole sostituite, prevenendo ulteriori sostituzioni.
.TP
.B x
Quota le parole sostituite, come con
.BR q ,
ma spezza in parole sui
.B blank
e newline.
.TP
.B s/\fIvecchio\fP/\fInuovo\fP/
Sostituisce
.I nuovo
alla prima occorrenza di
.I vecchio
nella riga di evento.  Qualsiasi delimitatore può essere usato al posto
di /.  Il delimitatore finale è opzionale se esso è l'ultimo carattere
della riga di evento.  Il delimitatore può essere quotato in
.I vecchio
e
.I nuovo
con un singolo backslash.  Se compare & in
.IR nuovo ,
esso è sostituito da
.IR vecchio .
Un singolo backslash quota il carattere &.  Se
.I vecchio
è nullo, viene impostato all'ultimo
.I vecchio
sostituito o, se nessuna sostituzione di cronologia è avvenuta,
l'ultima
.I stringa
in una
ricerca di
.B !?\fIstringa\fR\fB[?]\fR
.TP
.B &
Ripete la precedente sostituzione.
.TP
.B g
Fa sì che i cambiamenti siano applicati sull'intera riga di evento.
Questo si usa in congiunzione con `\fB:s\fP'
(p.es., `\fB:gs/\fIvecchio\fP/\fInuovo\fP/\fR') o `\fB:&\fP'.  Se usato
con `\fB:s\fP', qualsiasi delimitatore può essere usato al posto
di /, e il delimitatore finale è opzionale
se è l'ultimo carattere della riga di evento.
Un \fBa\fP può essere usato come sinonimo di \fBg\fP.
.TP
.B G
Applica il modificatore che segue `\fBs\fP' una volta a ogni parola nella riga di evento.
.PD
.SH "COMANDI INCORPORATI DELLA SHELL"
.\" inizio dei comandi incorporati di bash
.zZ
.PP
Se non diversamente indicato, ogni comando incorporato documentato in
questa sezione, il quale accetti opzioni precedute da
.B \- ,
accetta
.B \-\-
per indicare la fine delle opzioni.
Per esempio, i comandi incorporati \fB:\fP, \fBtrue\fP, \fBfalse\fP
e \fBtest\fP non accettano opzioni.
.sp .5
.PD 0
.TP
\fB:\fP [\fIargomenti\fP]
.PD
Nessun effetto; il comando non fa niente, tranne l'espansione degli
.I argomenti
e l'effettuazione di ogni ridirezione specificata.
È ritornato un codice di uscita zero.
.TP
.PD 0
\fB .\| \fP \fInomefile\fP [\fIargomenti\fP]
.TP
\fBsource\fP \fInomefile\fP [\fIargomenti\fP]
.PD
Legge ed esegue comandi dal
.I nomefile
nell'ambiente di shell corrente
e ritorna lo stato d'uscita
dell'ultimo comando eseguito contenuto in
.IR nomefile .
Se
.I nomefile
non contiene una barra [/], i percorsi in
.SM
.B PATH
sono usati per trovare la directory contenente
.IR nomefile .
Il file cercato in
.SM
.B PATH
non ha bisogno di essere marcato come eseguibile.
Quando \fBbash\fP non è in \fImodalità posix\fP, viene ricercata la
directory corrente se nessun file viene trovato in
.SM
.BR PATH .
Se l'opzione
.B sourcepath
del comando incorporato
.B shopt
è disattivata, il
.SM
.B PATH
non viene usato per ricercare.
Se sono forniti degli \fIargomenti\fP, essi diventano i
parametri posizionali quando \fInomefile\fP è eseguito.
Altrimenti i parametri posizionali sono inalterati.
Lo stato di ritorno è lo stato dell'ultimo comando terminato
dentro lo script (0 se nessun comando è eseguito), e falso se
.I nomefile
non viene trovato o non può essere letto.
.TP
\fBalias\fP [\fB\-p\fP] [\fInome\fP[=\fIvalore\fP] ...]
\fBAlias\fP senza argomenti o con l'opzione
.B \-p
stampa la lista degli alias nella forma
\fBalias\fP \fInome\fP=\fIvalore\fP sullo standard output.
Quando sono forniti argomenti, viene definito un alias per ogni
\fInome\fP per cui è dato il \fIvalore\fP.
Uno spazio finale a \fIvalore\fP fa sì che la parola seguente
sia controllata per la sostituzione di alias
quando l'alias è espanso.  Per ogni \fInome\fP nella lista di argomenti
per cui nessun \fIvalore\fP è fornito, è stampato il nome e il valore
dell'alias. \fBAlias\fP ritorna 0 [vero] a meno che non venga dato un
\fInome\fP per il quale nessun alias è stato definito.
.TP
\fBbg\fP [\fIjobspec\fP ...]
Riprende ogni job sospeso \fIjobspec\fP in background, come se
fosse stato avviato con
.BR & .
Se \fIjobspec\fP non è presente, è usata quello che la shell considera
essere il \fIjob corrente\fP.
.B bg
.I jobspec
ritorna 0 tranne quando viene eseguito con il job-control
disabilitato o, se eseguito con il job-control abilitato, se \fIjobspec\fP
non è stato trovato o è stato avviato senza usare job-control.
.TP
\fBbind\fP [\fB\-m\fP \fIkeymap\fP] [\fB\-lpsvPSV\fP]
.PD 0
.TP
\fBbind\fP [\fB\-m\fP \fIkeymap\fP] [\fB\-q\fP \fIfunzione\fP] [\fB\-u\fP \fIfunzione\fP] [\fB\-r\fP \fIkeyseq\fP]
.TP
\fBbind\fP [\fB\-m\fP \fIkeymap\fP] \fB\-f\fP \fInomefile\fP
.TP
\fBbind\fP [\fB\-m\fP \fIkeymap\fP] \fB\-x\fP \fIkeyseq\fP:\fIcomando di shell\fP
.TP
\fBbind\fP [\fB\-m\fP \fIkeymap\fP] \fIkeyseq\fP:\fInome\-funzione\fP
.TP
\fBbind\fP \fIcomando readline\fP
.PD
Mostra le correnti associazioni di tasti e funzioni di
.BR readline ,
associa una sequenza di tasti a una funzione o macro di
.BR readline
o imposta una variabile
.B readline .
Ogni argomento che non sia un'opzione è un comando
come apparirebbe in
.IR .inputrc ,
ma ciascuna associazione deve essere passata come argomento separato;
per esempio, '"\eC\-x\eC\-r": re\-read\-init\-file\'.
Le opzioni, se fornite, hanno i seguenti significati:
.RS
.PD 0
.TP
.B \-m \fIkeymap\fP
Usa
.I keymap
come mappatura della tastiera da modificare nelle
successive associazioni.  I nomi accettabili per
.I keymap
sono
\fIemacs, emacs\-standard, emacs\-meta, emacs\-ctlx, vi,
vi\-move, vi\-command\fP e
.IR vi\-insert .
\fIvi\fP è equivalente a \fIvi\-command\fP;
\fIemacs\fP è equivalente a \fIemacs\-standard\fP.
.TP
.B \-l
Elenca i nomi di tutte le funzioni di \fBreadline\fP.
.TP
.B \-p
Mostra i nomi delle funzioni di \fBreadline\fP e delle loro
associazioni in modo tale che possano essere riletti.
.TP
.B \-P
Elenca i nomi delle funzioni di \fBreadline\fP correnti e le loro associazioni.
.TP
.B \-v
Mostra i nomi delle variabili di \fBreadline\fP e i loro valori
in modo tale che possano essere riletti.
.TP
.B \-V
Elenca i nomi delle variabili di \fBreadline\fP correnti e i loro valori.
.TP
.B \-s
Mostra sequenze di tasti di \fBreadline\fP associati a macro e le
stringhe risultanti in modo tale che possano essere rilette.
.TP
.B \-S
Mostra sequenze di tasti di \fBreadline\fP associate a macro e le
stringhe risultanti.
.TP
.B \-f \fInomefile\fP
Legge le associazioni dei tasti dal file \fInomefile\fP.
.TP
.B \-q \fIfunzione\fP
Chiede quali tasti invocano la \fIfunzione\fP indicata.
.TP
.B \-u \fIfunzione\fP
Dissocia tutti i tasti associati alla \fIfunzione\fP indicata.
.TP
.B \-r \fIkeyseq\fP
Rimuove qualsiasi associazione corrente per \fIkeyseq\fP.
.TP
.B \-x \fIkeyseq\fP:\fIcomando di shell\fP
Provoca l'esecuzione di \fIcomando di shell\fP ogni volta che
viene immesso \fIkeyseq\fP.
.PD
.PP
Il valore di ritorno è 0 tranne quando si specifica un'opzione non
riconosciuta o è avvenuto un errore.
.RE
.TP
\fBbreak\fP [\fIn\fP]
Esce dall'interno di un ciclo
.BR for ,
.BR while ,
.BR until
o
.B select .
Se \fIn\fP è specificato, interrompe \fIn\fP livelli.
.I n
deve essere \(>= 1.  Se
.I n
è più grande del numero di cicli racchiusi, tutti i cicli racchiusi
vengono terminati.  Il valore di ritorno è 0 tranne quando la shell non
sta eseguendo un ciclo quando
.B break
viene eseguito.
.TP
\fBbuiltin\fP \fIcomando\-incorporato\fP [\fIargomenti\fP]
Esegue il comando incorporato specificato, passandogli gli
.IR argomenti ,
e ritorna il suo stato d'uscita.
Questo è utile quando si desidera definire una funzione il cui nome è
lo stesso di un comando incorporato della shell, ottenendo la
funzionalità del comando incorporato attraverso la funzione.
Il comando incorporato \fBcd\fP è comunemente ridefinito in questo modo.
Lo stato di ritorno è falso se
.I comando\-incorporato
non è un comando incorporato della shell.
.TP
\fBcd\fP [\fB\-L|-P\fP] [\fIdir\fP]
Cambia la directory corrente con \fIdir\fP.  La variabile
.SM
.B HOME
è il
.IR dir
di default.
La variabile
.SM
.B CDPATH
definisce i percorsi di ricerca per le directory che contengano
.IR dir .
Nomi di directory alternative in
.SM
.B CDPATH
sono separate da due punti (:).  Un nome di directory nullo in
.SM
.B CDPATH
indica la directory corrente, cioè, ``\fB.\fP''.  Se
.I dir
inizia con una barra [/],
allora
.SM
.B CDPATH
non è usato.  L'opzione
.B \-P
dice di usare la struttura di directory fisica invece di seguire i
collegamenti simbolici (si veda anche l'opzione
.B \-P
del comando incorporato
.B set ;
l'opzione
.B \-L
forza a seguire i collegamenti simbolici.  Un argomento
.B \-
è equivalente a
.SM
.BR $OLDPWD .
Se viene usato il nome di una directory non vuota da \fBCDPATH\fP o se
\fB\-\fP è il primo argomento, e il cambiamento di directory ha
successo, il percorso completo della nuova directory di lavoro viene
scritto sullo standard output.
Il valore di ritorno è 0 [vero] se la directory è stata cambiata con
successo; falso altrimenti.
.TP
\fBcaller\fP [\fIexpr\fP]
Restituisce il contesto di qualsiasi chiamata di subroutine attiva (una
funzione di shell o uno script eseguito coi comandi incorporati \fB.\fP
o \fBsource\fP.  Senza \fIexpr\fP, il \fBcaller\fP mostra il numero di
riga e il nome di file di origine della chiamata di subroutine corrente.
Se è fornito un intero non negativo come \fIexpr\fP, \fBcaller\fP mostra
il numero di riga, il nome di subroutine e il file di origine
corrispondente a quella posizione nello stack delle chiamate di esecuzione.  Questa
informazione aggiuntiva può essere usata, per esempio, per stampare uno
stack trace.  Il frame corrente è il frame 0.
Il valore di ritorno è 0 tranne quando la shell sta eseguendo una
chiamata di subroutine o quando \fIexpr\fP non corrisponde a una
posizione valida nello stack delle chiamate.
.TP
\fBcommand\fP [\fB\-pVv\fP] \fIcomando\fP [\fIarg\fP ...]
Esegue
.I comando
con gli
.I arg
sopprimendo la normale ricerca tra le funzione di shell.  Sono eseguiti
solo i comandi incorporati o comandi trovati in
.SM
.BR PATH .
Se è specificata l'opzione
.BR \-p ,
la ricerca di
.I comando
viene effettuata usando un valore di default per
.BR PATH
usando il quale è garantito che siano trovate tutte le utilità standard.
Se è fornita l'opzione
.B \-V
o
.BR \-v ,
viene stampata una descrizione di
.IR comando .
L'opzione
.B \-v
provoca la visualizzazione di una singola parola che indica il comando o
il nome di file usato per invocare
.IR comando ;
l'opzione
.B \-V
produce una descrizione più completa.
Se è fornita l'opzione
.B \-V
o
.B \-v ,
lo stato d'uscita è 0 se
.I comando
è stato trovato, e 1 altrimenti.  Se nessuna delle due opzioni è fornita e
avviene un errore o
.I comando
non può essere trovato, lo stato d'uscita è 127.  Altrimenti, lo stato d'uscita del comando incorporato
.B command
è lo stato d'uscita di
.IR comando .
.TP
 \fBcompgen\fP [\fIopzione\fP] [\fIparola\fP]
Genera possibili corrispondenze di completamento per \fIparola\fP in
accordo con le \fIopzioni\fP, che possono essere qualsiasi opzione
accettata dal comando incorporato
.B complete
ad eccezione di \fB\-p\fP e \fB\-r\fP, e scrive le corrispondenze sullo
standard output.  Quando si usano le opzioni \fB\-F\fP o \fB\-C\fP, le
diverse variabili di shell impostate dai servizi di completamento
programmabile, anche se disponibili, non conterranno valori utili.
.sp 1
Le corrispondenze saranno generate come se il codice
di completamento programmabile le avesse generate direttamente da una
specifica di completamento con gli stessi flag.
Se viene specificata \fIparola\fP, vengono mostrati solo i
completamenti disponibili per \fIparola\fP.
.sp 1
Il valore di ritorno è 0 [vero], tranne quando viene fornita un'opzione
non valida, o non viene generata alcuna corrispondenza.
.TP
\fBcomplete\fP [\fB\-abcdefgjksuv\fP] [\fB\-o\fP \fIcomp-option\fP] [\fB\-A\fP \fIazione\fP] [\fB\-G\fP \fIglobpat\fP] [\fB\-W\fP \fIwordlist\fP] [\fB\-P\fP \fIprefisso\fP] [\fB\-S\fP \fIsuffisso\fP]
.br
[\fB\-X\fP \fIfilterpat\fP] [\fB\-F\fP \fIfunzione\fP] [\fB\-C\fP \fIcomando\fP] \fInome\fP [\fInome ...\fP]
.PD 0
.TP
\fBcomplete\fP \fB\-pr\fP [\fInome\fP ...]
.PD
Specifica come devono essere completati gli argomenti per ogni
\fInome\fP.  Se viene fornita l'opzione \fB\-p\fP o se non viene fornita
alcuna opzione, le specifiche di completamento esistenti sono stampate
in modo tale da essere riutilizzabili come input.
L'opzione \fB\-r\fP rimuove una specifica di completamento per ogni
\fInome\fP o, se non è fornito alcun \fInome\fP, tutte le specifiche
di completamento.
.sp 1
Il processo per applicare queste specifiche di completamento quando
si tenta il completamento della parola è descritto in precedenza, sotto  \fBCompletamento programmabile\fP.
.sp 1
Altre opzioni, se specificate, hanno i seguenti significati.
Gli argomenti alle opzioni  \fB\-G\fP, \fB\-W\fP, e \fB\-X\fP (e, se
necessario alle opzioni  \fB\-P\fP e \fB\-S\fP) dovrebbero essere
quotati per proteggerli dall'espansione prima che venga invocato il
comando incorporato
.B complete .
.RS
.PD 0
.TP 8
\fB\-o\fP \fIcomp-option\fP
L'opzione \fIcomp-option\fP controlla diversi aspetti del comportamento
di comspec oltre la semplice generazione di completamenti.
\fIcomp-option\fP può essere uno di questi:
.RS
.TP 8
.B bashdefault
Effettua il resto dei completamenti di default di \fBbash\fP se
comspec non genera corrispondenze.
.TP 8
.B default
Usa il completamento del nome di file di default di readline se
comspec non genera corrispondenze.
.TP 8
.B dirnames
Effettua il completamento del nome di directory se comspec non genera corrispondenze.
.TP 8
.B filenames
Dice a readline che il comspec genera nomi di file, consentendo così di effettuare
qualsiasi elaborazione di uno specifico nome di file (come aggiungere
una barra [/] ai nomi di directory o sopprimere gli spazi finali).  Fatto per essere usato con le funzioni di shell.
.TP 8
.B nospace
Dice a readline di non aggiungere uno spazio (che viene aggiunto per default) alle parole
completate alla fine della riga.
.TP 8
.B plusdirs
Dopo che le corrispondenze definite da comspec sono state generate,
viene tentato il completamento dei nomi di directory e il risultato
viene aggiunto ai risultati delle altre azioni.
.RE
.TP 8
\fB\-A\fP \fIazione\fP
L'\fIazione\ può essere una delle seguenti per generare una lista di
possibili completamenti:
.RS
.TP 8
.B alias
Nome di alias.  Può anche essere specificata come \fB\-a\fP.
.TP 8
.B arrayvar
Nomi di variabili di array.
.TP 8
.B binding
Nomi di associazioni di tasti \fBReadline\fP.
.TP 8
.B builtin
Nomi di comandi incorporati della shell.  Può anche essere specificata come \fB\-b\fP.
.TP 8
.B command
Nomi di comandi.  Può anche essere specificata come \fB\-c\fP.
.TP 8
.B directory
Nomi di directory.  Può anche essere specificata come \fB\-d\fP.
.TP 8
.B disabled
Nomi di comandi incorporati della shell disabilitati.
.TP 8
.B enabled
Nomi di comandi incorporati della shell abilitati.
.TP 8
.B export
Nomi di variabili di shell esportate.  Può anche essere specificata come \fB\-e\fP.
.TP 8
.B file
Nomi di file.  Può anche essere specificata come \fB\-f\fP.
.TP 8
.B function
Nomi di funzioni di shell.
.TP 8
.B group
Nomi di gruppo.  Può anche essere specificata come \fB\-g\fP.
.TP 8
.B helptopic
Argomenti di aiuto come accettati dal comando incorporato \fBhelp\fP.
.TP 8
.B hostname
Nomi di host, come presi dal file specificato dalla
variabile di shell
.SM
.B HOSTFILE .
.TP 8
.B job
Nomi di job, se il job-control è attivo.  Può anche essere specificata come \fB\-j\fP.
.TP 8
.B keyword
Parole riservate della shell.  Può anche essere specificata come \fB\-k\fP.
.TP 8
.B running
Nomi di job in esecuzione, se il job-control è attivo.
.TP 8
.B service
Nome di servizi.  Può anche essere specificata come \fB\-s\fP.
.TP 8
.B setopt
Argomenti validi per l'opzione \fB\-o\fP del comando incorporato \fBset\fP.
.TP 8
.B shopt
Nomi di opzioni di shell come accettati dal comando incorporato \fBshopt\fP.
.TP 8
.B signal
Nomi di segnali
.TP 8
.B stopped
Nomi di job sospesi, se il job-control è attivo.
.TP 8
.B user
Nomi di utente.  Può anche essere specificata come \fB\-u\fP.
.TP 8
.B variable
Nomi di variabili di shell.  Può anche essere specificata come \fB\-v\fP.
.RE
.TP 8
\fB\-G\fP \fIglobpat\fP
Il modello di espansione dei nomi di file \fIglobpat\fP viene espanso
per generare i possibili completamenti.
.TP 8
\fB\-W\fP \fIwordlist\fP
La \fIwordlist\fP è suddivisa usando i caratteri nella variabile speciale
.SM
.B IFS
come delimitatori, e viene espansa ogni parola risultante.
I possibili completamenti sono gli elementi della lista risultante che
sono appropriati per la parola da completare.
.TP 8
\fB\-C\fP \fIcomando\fP
\fIcomando\fP viene eseguito in un ambiente di subshell, e il suo
output viene usato come lista di possibili completamenti.
.TP 8
\fB\-F\fP \fIfunzione\fP
La funzione di shell \fIfunzione\fP viene eseguita
nell'ambiente di shell corrente.
Quando finisce, i possibili completamenti sono
a disposizione nei valori della
variabile di array
.SM
.B COMPREPLY .
.TP 8
\fB\-X\fP \fIfilterpat\fP
\fIfilterpat\fP è un modello come quelli usati per l'espansione del
nome di file.  È applicato all'elenco dei possibili completamenti
generati dalle opzioni e dagli argomenti precedenti, e ogni
completamento che corrisponde a \fIfilterpat\fP viene rimosso
dall'elenco.  Un \fB!\fP iniziale in \fIfilterpat\fP nega il modello; in
questo caso ogni completamento che non concorda con \fIfilterpat\fP viene rimosso.
.TP 8
\fB\-P\fP \fIprefisso\fP
\fIprefisso\fP è aggiunto all'inizio di ogni possibile completamento
dopo che sono state applicate tutte le altre opzioni.
.TP 8
\fB\-S\fP \fIsuffisso\fP
\fIsuffisso\fP è aggiunto alla fine di ogni possibile completamento
dopo che sono state applicate tutte le altre opzioni.
.PD
.PP
Il valore di ritorno è 0 [vero] tranne quando viene fornita un'opzione
non valida, viene fornita un'opzione all'infuori di \fB\-p\fP o \fB\-
r\fP senza un argomento \fInome\fP, vien fatto un tentativo di
rimuovere una specifica di completamento per un \fInome\fP per il quale
non vi sono specifiche, o se si verifica un errore aggiungendo una specifica di completamento.
.RE
.TP
\fBcontinue\fP [\fIn\fP]
Riprende la successiva iterazione del ciclo
.BR for ,
.BR while ,
.BR until
o
.B select
dentro cui si trova.
Se
.I n
è specificato, riprende all'\fIn\fP\-esima nidificazione del ciclo.
.I n
deve essere \(>= 1.  Se
.I n
è più grande del numero di cicli nidificati, riprende dall'ultimo ciclo
esistente (il ciclo a più alto livello).  Il valore di ritorno è 0
tranne quando la shell non si trova all'interno di un ciclo quando
.B continue
è eseguito.
.TP
\fBdeclare\fP [\fB\-afFirtx\fP] [\fB\-p\fP] [\fInome\fP[=\fIvalore\fP] ...]
.PD 0
.TP
\fBtypeset\fP [\fB\-afFirtx\fP] [\fB\-p\fP] [\fInome\fP[=\fIvalore\fP] ...]
.PD
Dichiara variabili e/o dà loro degli attributi.  Se il è
\fInome\fP è omesso, mostra i valori delle variabili.
L'opzione
.B \-p
mostra gli attributi e i valori di ogni
.IR nome .
Quando viene usato
.B \-p ,
vengono ignorate opzioni addizionali.
L'opzione
.B \-F
inibisce la visualizzazione delle definizioni di funzione; vengono
stampati solo il nome della funzione e i suoi attributi.
Se l'opzione di shell \fBextdebug\fP è abilitata con \fBshopt\fP,
il nome di file d'origine e il numero di riga dov'è definita la
funzione vengono anch'esse visualizzati.  L'opzione
.B \-F
sottintende
.BR \-f
Le seguenti opzioni possono essere usate per restringere l'output alle
sole variabili con gli attributi specificati o
per assegnare attributi di variabili.
.RS
.PD 0
.TP
.B \-a
Ogni \fInome\fP è una variabile di array (si veda
.B Array
sopra).
.TP
.B \-f
Usa solo nomi di funzioni.
.TP
.B \-i
La variabile è trattata come un intero; la valutazione aritmetica (si veda
.SM
.B "VALUTAZIONE ARITMETICA" ") "
è effettuata quando alla variabile è assegnato un valore.
.TP
.B \-r
Rende \fInomi\fP accessibili in sola lettura.  A questi nomi non possono
quindi essere assegnati valori da successive istruzioni di assegnamento, e i valori assegnati non possono essere rimossi.
.TP
.B \-t
Dà a ogni \fInome\fP l'attributo \fItrace\fP.
Le funzioni tracciate ereditano i segnali intercettati \fBDEBUG\fP e
\fBRETURN\fP dalla shell chiamante.
L'attributo trace non ha un significato speciale per le variabili.
.TP
.B \-x
Marca \fInomi\fP per l'esportazione ai successivi comandi attraverso l'ambiente.
.PD
.PP
Usare `+' invece di `\-' disattiva l'attributo, con l'eccezione che
\fB+a\fP non può essere usato per eliminare una variabile array.
Quando usato in una funzione, rende ogni \fInome\fP locale,
come con il
comando
.B local .
Se un nome di variabile
è seguito da =\fIvalore\fP, il valore della
variabile è impostato a \fIvalore\fP.  Il valore di ritorno
è 0 tranne quando viene incontrata un'opzione non valida,
vien fatto un tentativo di definire una funzione usando
.if n ``\-f foo=bar'',
.if t \f(CW\-f foo=bar\fP,
vien fatto un tentativo per assegnare un valore a una variabile in sola
lettura, vien fatto un tentativo per assegnare un valore a una
variabile array senza usare la sintassi di assegnamento composto (si veda
.B Array
sopra), uno dei \fInomi\fP non è un nome valido di variabile di shell,
vien fatto un tentativo per disattivare lo stato di sola lettura per una variabile in sola lettura,
vien fatto un tentativo per disattivate lo stato di array per una
variabile array, o vien fatto un tentativo per mostrare una funzione non esistente con \fB\-f\fP.
.RE
.TP
.B dirs [\fB\-clpv\fP] [+\fIn\fP] [\-\fIn\fP]
Senza opzioni, mostra la lista delle directory correntemente memorizzate.
La visualizzazione di default è su un singola riga coi nomi di
directory separate da spazi.
Le directory sono aggiunte alla lista con il comando
.BR pushd ;
il comando
.B popd
rimuove elementi dalla lista.
.RS
.PD 0
.TP
\fB+\fP\fIn\fP
Mostra l'\fIn\fP\-esimo elemento contando dalla sinistra della
lista mostrata da
.B dirs
quando è chiamato senza opzioni, partendo da zero.
.TP
\fB\-\fP\fIn\fP
Mostra l'\fIn\fP\-esimo elemento contando dalla destra della
lista mostrata da
.B dirs
quando è chiamato senza opzioni, partendo da zero.
.TP
.B \-c
Svuota lo stack delle directory cancellando tutti gli elementi.
.TP
.B \-l
produce un elenco più lungo; il formato di default per l'elencazione
usa un carattere tilde per indicare la home directory.
.TP
.B \-p
Stampa lo stack delle directory con un elemento per riga.
.TP
.B \-v
Stampa lo stack delle directory con un elemento per riga,
anteponendo a ogni elemento il suo indice nello stack.
.PD
.PP
Il valore di ritorno è 0 tranne quando
viene fornita un'opzione non valida o \fIn\fP un indice oltre la fine
dello stack delle directory.
.RE
.TP
\fBdisown\fP [\fB\-ar\fP] [\fB\-h\fP] [\fIjobspec\fP ...]
Senza opzioni, ogni
.I jobspec
viene rimosso dalla tabella dei job attivi.
Se viene data l'opzione \fB\-h\fP, ogni
.I jobspec
non viene rimosso dalla tabella, ma è marcato in modo che
.SM
.B SIGHUP
non venga inviato al job se la shell riceve un
.SM
.B SIGHUP .
Se non è presente alcun
.I jobspec
e non viene fornita né l'opzione
.B \-a
né l'opzione
.B \-r ,
viene usato il \fIjob corrente\fP.
Se non è specificata alcuna
.I jobspec
l'opzione
.B \-a
richiede la rimozione o il marcamento di tutti i job; l'opzione
.B \-r
senza un argomento
.I jobspec
restringe l'operazione ai job in esecuzione.
Il valore di ritorno è 0 tranne quando
.I jobspec
non specifica un job valido.
.TP
\fBecho\fP [\fB\-neE\fP] [\fIarg\fP ...]
Emette gli \fIarg\fP, separati da spazi, seguiti da un newline.
Lo stato di ritorno è sempre 0.
Se è specificato \fB\-n\fP, il newline finale è soppresso.  Se è data
l'opzione \fB\-e\fP, viene abilitata l'interpretazione dei successivi
caratteri preceduti dal carattere di protezione backslash.  L'opzione
.B \-E
disabilita l'interpretazione di questi caratteri di protezione, anche su
sistemi dove essi sono interpretati per default.
L'opzione di shell \fBxpg_echo\fP può essere usata per
determinare dinamicamente se \fBecho\fP espande questi
caratteri di protezione per default oppure no.
.B echo
non interpreta \fB\-\-\fP come fine delle opzioni.
.B echo
interpreta le seguenti sequenze di protezione:
.RS
.PD 0
.TP
.B \ea
allarme (segnale acustico)
.TP
.B \eb
spazio indietro (backspace)
.TP
.B \ec
sopprime il newline finale
.TP
.B \ee
un caratteri di escape
.TP
.B \ef
nuova pagina (form feed)
.TP
.B \en
nuova riga (newline)
.TP
.B \er
ritorno carrello (carriage return)
.TP
.B \et
segno di tabulazione orizzontale
.TP
.B \ev
segno di tabulazione verticale
.TP
.B \e\e
backslash
.TP
.B \e0\fInnn\fP
il carattere a otto bit il cui valore è il valore ottale \fInnn\fP
(da zero a tre cifre ottali)
.TP
.B \ex\fIHH\fP
il carattere a otto bit il cui valore è il valore esadecimale \fIHH\fP
(una o due cifre esadecimali)
.PD
.RE
.TP
\fBenable\fP [\fB\-adnps\fP] [\fB\-f\fP \fInomefile\fP] [\fInome\fP ...]
Abilita e disabilita i comandi incorporati della shell.  Disabilitare un
comando incorporato permette l'esecuzione di un comando residente su disco
con lo stesso nome di un comando incorporato della shell senza dover
specificare un percorso completo, anche se la shell normalmente cerca i
comandi incorporati prima di quelli su disco.  Se è usato \fB\-n\fP,
ogni \fInome\fP è disabilitato; altrimenti,
\fInomi\fP sono abilitati.  Per esempio, per usare il programma binario
.B test
trovato attraverso il
.SM
.B PATH ,
invece della versione incorporata nella shell, si esegue
.if t \f(CWenable -n test\fP.
.if n ``enable -n test''.
L'opzione
.B \-f
richiede di caricare il nuovo comando incorporato
.I nome
dall'oggetto condiviso
.IR nomefile ,
sui sistemi che supportano il caricamento dinamico.  L'opzione
.B \-d
elimina un comando incorporato precedentemente caricato con
.BR \-f .
Se nessun argomento \fInome\fP è specificato, o se viene fornita l'opzione
.B \-p
viene stampata una lista di tutti i comandi incorporati della shell.
Senza altri argomenti di opzione la lista è formata da tutti i
comandi incorporati della shell abilitati.
Se è fornito \fB\-n\fP, vengono stampati solo i comandi incorporati disabilitati.
Se è fornito \fB\-a\fP, la lista stampata include tutti i comandi
incorporati, con l'indicazione per ciascuno se è abilitato o no.
Se viene fornito \fB\-s\fP, l'output è ristretto ai comandi incorporati
\fIspeciali\fP POSIX.
Il valore di ritorno è 0 tranne quando
.I nome
non è un comando incorporato della shell o si verifica un errore nel
caricamento di un nuovo comando incorporato da un oggetto condiviso.
.TP
\fBeval\fP [\fIarg\fP ...]
Gli \fIarg\fP sono letti e concatenati insieme formando un singolo comando.
Questo comando è quindi letto ed eseguito dalla shell, e il suo stato di
uscita è ritornato come valore del comando
.BR eval .
Se non vi è alcun
.IR arg ,
o vi sono solo argomenti nulli,
.B eval
ritorna 0.
.TP
\fBexec\fP [\fB\-cl\fP] [\fB\-a\fP \fInome\fP] [\fIcomando\fP [\fIargomenti\fP]]
Se
.I comando
è specificato, esso sostituisce la shell.
Nessun nuovo processo viene creato.  Gli
.I argomenti
diventano gli argomenti per \fIcomando\fP.
Se viene fornita l'opzione
.B \-l
la shell pone un trattino all'inizio dell'arg numero zero
passato a
.IR comando .
Questo è quello che fa
.IR login (1) .
L'opzione
.B \-c
provoca l'esecuzione di
.I comando
con un ambiente vuoto.  Se viene fornita
.B \-a
la shell passa
.I nome
come argomento numero zero del comando eseguito.  Se
.I comando
non può essere eseguito per qualche ragione, una shell non
interattiva termina, a meno che non sia abilitata l'opzione di shell
.B execfail ,
nel qual caso restituisce insuccesso.
Una shell interattiva restituisce insuccesso se il file non può essere
eseguito.  Se
.I comando
non è specificato, qualsiasi ridirezione ha effetto nella shell
corrente, e lo stato di ritorno è 0.  Se si verifica un errore di ridirezione
lo stato di ritorno è 1.
.TP
\fBexit\fP [\fIn\fP]
Causa l'uscita della shell con uno stato d'uscita \fIn\fP.
Se
.I n
è omesso, lo stato d'uscita
è quello dell'ultimo comando eseguito.
Un'intercettazione di segnale su
.SM
.B EXIT
è eseguita prima che la shell termini.
.TP
\fBexport\fP [\fB\-nf\fP\^] [\fInome\fP[=\fIparola\fP]] ...
.PD 0
.TP
.B export \-p
.PD
I
.I nomi
forniti sono marcati per l'esportazione automatica nell'ambiente dei
comandi eseguiti in seguito.  Se è specificata l' opzione
.B \-f ,
i
.I nomi
si riferiscono a funzioni.
Se il
.I nome
è omesso o se se è fornita l'opzione
.B \-p ,
viene stampata una lista
di tutti i nomi che sono esportati in questa
shell.
L'opzione
.B \-n
provoca la rimozione della proprietà di esportazione da ogni
\fInome\fP.
Se un nome di variabile è seguito da  =\fIparola\fP, il valore della
variabile è impostato a \fIparola\fP.
.B export
ritorna una stato d'uscita di 0 tranne quando viene trovata un'opzione
non valida, uno dei \fInomi\fP non è un nome valido di variabile di
shell, o viene fornita l'opzione
.B \-f
con un
.I nome
che non è il nome di una funzione.
.TP
\fBfc\fP [\fB\-e\fP \fInome\-editor\fP] [\fB\-nlr\fP] [\fIprimo\fP] [\fIultimo\fP]
.PD 0
.TP
\fBfc\fP \fB\-s\fP [\fIpat\fP=\fIrep\fP] [\fIcmd\fP]
.PD
Corregge un comando.  Nella prima forma, un intervallo di comandi fra
.I primo
e
.I ultimo
viene selezionato dalla lista della cronologia.
.I Primo
e
.I ultimo
possono essere specificati come una stringa (per individuare l'ultimo
comando che inizia con quella stringa) o come numero (un indice nella
lista della cronologia, dove un numero negativo è usato a partire dal
numero del comando corrente).  Se
.I ultimo
non è specificato è impostato al
comando corrente per l'elencazione (così che
.if n ``fc \-l \-10''
.if t \f(CWfc \-l \-10\fP
stampa gli ultimi 10 comandi) e a
.I primo
altrimenti.
Se
.I primo
non è specificato è impostato al precedente comando per l'editing
e a \-16 per l'elencazione.
.sp 1
L'opzione
.B \-n
sopprime i numeri dei comandi quando li elenca.
L'opzione
.B \-r
inverte l'ordine dei comandi.
Se è specificata l'opzione
.BR \-l ,
i comandi sono elencati sullo
standard output.  Altrimenti, è invocato
l'editor indicato da
.I ename
su un file che contiene questi comandi.
Se
.I ename
è omesso, è usato
il valore della variabile
.SM
.BR FCEDIT ,
e il valore di
.SM
.B EDITOR
se
.SM
.B FCEDIT
non è impostata.  Se né l'una né l'altra variabile è impostata,
è usato
.FN vi .
Quando l'editing è completato, i comandi editati sono
listati ed eseguiti.
.sp 1
Nella seconda forma, \fIcomando\fP è rieseguito dopo che ogni istanza
di \fIpat\fP è sostituita da \fIrep\fP.
Un utile alias da usare con questo è
.if n ``r="fc -s"'',
.if t \f(CWr='fc \-s'\fP,
così che digitando
.if n ``r cc''
.if t \f(CWr cc\fP
si esegue l'ultimo comando che inizia con
.if n ``cc''
.if t \f(CWcc\fP
e battendo
.if n ``r''
.if t \f(CWr\fP
si riesegue l'ultimo comando.
.sp 1
Se è usata la prima forma, il valore di ritorno è 0 a meno che sia
incontrata un'opzione non valida o
.I primo
o
.I ultimo
specifichino righe di cronologia fuori dall'intervallo esistente.
Se è fornita l'opzione
.BR \-e ,
il valore di ritorno è il valore dell'ultimo
comando eseguito, o insuccesso se avviene un errore con il file
temporaneo dei comandi.  Se è usata la seconda forma, lo stato di ritorno
è quello del comando rieseguito, tranne quando
.I cmd
non specifica una riga di cronologia valida, nel qual caso
.B fc
ritorna insuccesso.
.TP
\fBfg\fP [\fIjobspec\fP]
Riprende
.I jobspec
in primo piano, e lo rende il job corrente.
Se
.I jobspec
non è presente, è usata la nozione della shell di \fIjob corrente\fP.
Il valore di ritorno è quello del comando posto in primo piano,
o insuccesso se eseguito mentre il job-control è disabilitato o,
quando eseguito col job-control abilitato, se
.I jobspec
non specifica un job valido o
.I jobspec
specifica un job che era stato avviato senza job-control.
.TP
\fBgetopts\fP \fIoptstring\fP \fInome\fP [\fIargs\fP]
.B getopts
è usato dalle procedure di shell per analizzare i parametri posizionali.
.I optstring
contiene i caratteri delle opzioni che devono essere riconosciuti; se
un carattere è seguito da due punti, l'opzione si aspetta di avere un
argomento, che dovrà essere separato dalla stessa da spazi bianchi.
I due punti e il punto interrogativo non possono essere usati come
caratteri di opzione.
Ogni volta che è invocato,
.B getopts
pone la successiva opzione nella variabile di shell
.IR nome ,
inizializzando
.I nome
se non esiste,
e l'indice del prossimo argomento da elaborare nella
variabile
.SM
.BR OPTIND .
.SM
.B OPTIND
è inizializzato a 1 ogni volta che la shell o uno script di shell
viene invocato.  Quando un'opzione richiede un argomento,
.B getopts
pone quell'argomento nella variabile
.SM
.BR OPTARG .
La shell non reimposta
.SM
.B OPTIND
automaticamente; questa variabile deve essere manualmente reimpostata tra
più chiamate a
.B getopts
dentro la stessa esecuzione della shell, se deve essere usato un nuovo
insieme di parametri.
.sp 1
Quando viene raggiunta la fine delle opzioni \fBgetopts\fP esce con un
valore di ritorno maggiore di zero.
\fBOPTIND\fP è impostato all'indice del primo argomento senza opzioni
e \fBnome\fP viene impostato a ?.
.sp 1
.B getopts
normalmente analizza i parametri posizionali, ma se più argomenti
vengono dati in
.IR args,
.B getopts
analizza solo quelli.
.sp 1
.B getopts
può informare degli errori in due modi.  Se il primo carattere di
.I optstring
è un due punti, è usata un'informazione di errore
.I silenziosa .
Normalmente i messaggi diagnostici vengono stampati quando
vengono trovate opzioni non valide o
mancano argomenti alle opzioni.
Se la variabile
.SM
.B OPTERR
è impostata a 0, nessun messaggio di errore viene mostrato, anche se il
primo carattere di
.I optstring
non è due punti.
.sp 1
Se è incontrata un'opzione non valida,
.B getopts
pone ? nel
.I nome
e, se non silenziosa,
stampa un messaggio di errore e annulla
.SM
.BR OPTARG .
Se
.B getopts
è silenziosa,
il carattere di opzione trovato è posto in
.SM
.B OPTARG
e nessun messaggio diagnostico è stampato.
.sp 1
Se un argomento richiesto non è trovato, e
.B getopts
non è silenziosa,
un punto interrogativo (\^\fB?\fP\^) è posto in
.IR nome ,
.SM
.B OPTARG
viene annullato, e viene stampato un messaggio diagnostico.
Se
.B getopts
è silenziosa, allora un carattere di due punti (\^\fB:\fP\^) è posto in
.I nome
e
.SM
.B OPTARG
è impostato al carattere di opzione trovato.
.sp 1
.B getopts
ritorna 0 [vero] se viene trovata un'opzione, specificata o non specificata.
Ritorna falso se viene incontrata la fine delle opzioni o
avviene un errore.
.TP
\fBhash\fP [\fB\-lr\fP] [\fB\-p\fP \fInomefile\fP] [\fB\-dt\fP] [\fInome\fP]
Per ciascun
.IR nome ,
il percorso completo del comando è determinato ricercando
le directory in
.B $PATH
e viene memorizzato.
Se viene fornita l'opzione
.B \-p ,
non viene effettuata nessuna ricerca di percorso e
.I nomefile
è usato come nome completo del comando.
L'opzione
.B \-r
fa sì che la shell dimentichi tutte le
i percorsi memorizzati.
L'opzione
.B \-d
fa sì che la shell dimentichi i percorsi memorizzati di ogni
\fInome\fP.  Se viene fornita l'opzione
.B \-t
è stampato il percorso completo al quale corrisponde ogni \fInome\fP.
Se vengono forniti argomenti multipli di \fInome\fP con \fB\-t\fP,
il \fInome\fP viene stampato prima del percorso completo indicizzato.
L'opzione
.B \-l
provoca la visualizzazione dell'output in un formato
riutilizzabile come input.  Se nessun argomento è dato, ed è fornito solo
\fB\-l\fP, è stampata l'informazione circa i comandi memorizzati.
Lo stato di ritorno è 0 [vero] tranne quando
.I nome
è irreperibile o viene fornita un'opzione non valida.
.TP
\fBhelp\fP [\fB\-s\fP] [\fImodello\fP]
Mostra utili informazioni sui i comandi incorporati.  Se
.I modello
è specificato,
.B help
fornisce un aiuto dettagliato su tutti i comandi che corrispondono al
.IR modello ;
altrimenti è stampato l'aiuto per tutti i comandi incorporati e
le strutture di controllo della shell.
L'opzione \fB\-s\fP restringe le informazioni visualizzate a una
breve sintassi d'uso.
Lo stato di ritorno è 0 tranne quando nessun comando è individuato dal
.IR modello .
.TP
\fBhistory\fP [\fIn\fP]
.PD 0
.TP
\fBhistory\fP \fB\-c\fP
.TP
\fBhistory \-d\fP \fIoffset\fP
.TP
\fBhistory\fP \fB\-anrw\fP [\fInomefile\fP]
.TP
\fBhistory\fP \fB\-p\fP \fIarg\fP [\fIarg ...\fP]
.TP
\fBhistory\fP \fB\-s\fP \fIarg\fP [\fIarg ...\fP]
.PD
Senza opzioni, mostra la lista della cronologia dei comandi
con i numeri di riga.  Le righe elencate
con un
.B *
sono state modificate.  Con l'argomento
.I n
elenca solo le ultime
.I n
righe.
Se la variabile di shell \fBHISTTIMEFORMAT\fP è impostata e non nulla,
è usata come stringa di formato di \fIstrftime\fP(3) per mostrare
la data/ora associata a ogni elemento della cronologia.
Nessuno spazio è interposto fra la data/ora formattata e
la riga della cronologia.
Se è fornito \fInomefile\fP, questo è usato come
nome del file di cronologia; altrimenti, è usato il valore di
.SM
.BR HISTFILE .
Le opzioni, se fornite, hanno i seguenti significati:
.RS
.PD 0
.TP
.B \-c
Svuota l'elenco della cronologia eliminando tutti gli elementi.
.TP
\fB\-d\fP \fIoffset\fP
Cancella l'elemento della cronologia alla posizione \fIoffset\fP.
.TP
.B \-a
Accoda le ``nuove'' righe della cronologia (righe della cronologia inserite
dall'inizio della corrente sessione di \fBbash\fP) al file di cronologia.
.TP
.B \-n
Inserisce le righe della cronologia non ancora lette dal file di
cronologia nella corrente lista della cronologia.  Queste sono le righe
accodate al file di cronologia dall'inizio della
corrente sessione di \fBbash\fP.
.TP
.B \-r
Legge il contenuto del file di cronologia
e lo usa come cronologia corrente.
.TP
.B \-w
scrive la cronologia corrente sul file di cronologia, sovrascrivendo
il contenuto del file di cronologia.
.TP
.B \-p
Effettua la sostituzione della cronologia sui seguenti \fIarg\fP e
mostra il risultato sullo standard output.  Non conserva il risultato
nell'elenco della cronologia.  Ogni \fIarg\fP dev'essere quotato per
disabilitare la normale espansione della cronologia.
.TP
.B \-s
Memorizza gli
.I arg
nell'elenco della cronologia come un singolo comando.  L'ultimo comando
nell'elenco della cronologia viene rimosso prima che gli
.I arg
vengano aggiunti.
.PD
.PP
Se \fBHISTTIMEFORMAT\fP è impostata, l'informazione data/ora associata
a ogni elemento di cronologia viene scritta nel file di cronologia.
Il valore di ritorno è 0 tranne quando viene incontrata un'opzione
non valida, avviene un errore mentre si legge o si scrive il file di
cronologia, viene fornito un \fIoffset\fP non valido come argomento a
\fB\-d\fP o l'espansione della cronologia fornita come argomento a \fB\-p\fP non ha successo.
.RE
.TP
\fBjobs\fP [\fB\-lnprs\fP] [ \fIjobspec\fP ... ]
.PD 0
.TP
\fBjobs\fP \fB\-x\fP \fIcomando\fP [ \fIargs\fP ... ]
.PD
La prima forma elenca i job attivi.  Le opzioni hanno i seguenti
significati:
.RS
.PD 0
.TP
.B \-l
Elenca gli ID dei processi
in aggiunta alle normali informazioni.
.TP
.B \-p
Elenca solo l'ID di processo del principale
job del gruppo di processo.
.TP
.B \-n
Mostra le informazioni solo sui job che hanno cambiato stato
dall'ultima notifica di stato mostrata all'utente.
.TP
.B \-r
Restringe l'output ai job in esecuzione.
.TP
.B \-s
Restringe l'output ai job sospesi.
.PD
.PP
Se
.I jobspec
è specificato, l'output è limitato alle informazioni su quel job.
Lo stato di ritorno è 0 a meno che venga incontrata un'opzione
non valida o sia fornito un
.I jobspec
non valido.
.PP
Se è fornita
l'opzione
.BR \-x ,
.B jobs
sostituisce qualsiasi
.I jobspec
trovato in
.I comando
o
.I args
con il corrispondente ID del gruppo di processo, ed esegue
.I comando
passandogli
.IR args ,
e ritornando il suo stato d'uscita.
.RE
.TP
\fBkill\fP [\fB\-s\fP \fIsigspec\fP | \fB\-n\fP \fIsignum\fP | \fB\-\fP\fIsigspec\fP] [\fIpid\fP | \fIjobspec\fP] ...
.PD 0
.TP
\fBkill\fP \fB\-l\fP [\fIsigspec\fP | \fIstato d'uscita\fP]
.PD
Manda il segnale indicato da
.I sigspec
o
.I signum
al processo indicato da
.I pid
o
.IR jobspec .
.I sigspec
è o un nome di segnale, senza distinzione tra maiuscole e minuscole, come
.SM
.BR SIGKILL ,
(con o senza il prefisso
.SM
.BR SIG
) o un numero di segnale;
.I signum
è un numero di segnale.
Se
.I sigspec
non è presente, si suppone essere
.SM
.BR SIGTERM .
Un
argomento
.B \-l
elenca i nomi dei segnali.
Se sono forniti degli argomenti quando è specificata l'opzione
.BR \-l ,
sono elencati i nomi dei segnali corrispondenti agli argomenti,
e lo stato di ritorno è 0.
L'argomento \fIstato d'uscita\fP di
.B \-l
è un numero che specifica o un numero di segnale o lo stato d'uscita
di un processo terminato da un segnale.
.B kill
restituisce 0 [vero] se almeno un segnale è stato inviato con successo, o
falso se avviene un errore o se è incontrata un'opzione non valida.
.TP
\fBlet\fP \fIarg\fP [\fIarg\fP ...]
Ogni
.I arg
è un'espressione aritmetica che deve essere valutata (si veda
.SM
.BR "VALUTAZIONE ARITMETICA" ).
Se l'ultimo
.I arg
viene valutato 0,
.B let
ritorna 1; altrimenti è ritornato 0.
.TP
\fBlocal\fP [\fIopzione\fP] [\fInome\fP[=\fIvalore\fP] ...]
Per ogni argomento viene creata una variabile locale chiamata
.IR nome
e le viene assegnato
.IR valore .
L'\fIopzione\fP può essere una qualunque delle opzioni accettate da
\fBdeclare\fP.  Quando
.B local
è usato dentro una funzione, fa sì che la variabile
.I nome
abbia una visibilità ristretta a quella funzione e ai suoi figli.
Senza alcun operando,
.B local
scrive una lista di variabili locali sullo standard output.
È un errore usare
.B local
quando non si è dentro una funzione.  Lo stato di ritorno è 0 tranne quando
.B local
è usata fuori da una funzione, viene fornito un
.I nome
non valido o
\fInome\fP è una variabile in sola lettura.
.TP
.B logout
Termina una shell di login.
.TP
\fBpopd\fP [\-\fBn\fP] [+\fIn\fP] [\-\fIn\fP]
Rimuove degli elementi dallo stack delle directory.  Senza argomenti,
rimuove la directory in cima allo stack, ed effettua un
.B cd
verso la nuova directory in cima allo stack.
Gli argomenti, se forniti, hanno il seguente significato:
.RS
.PD 0
.TP
\fB+\fP\fIn\fP
Rimuove l'\fIn\fP\-esimo elemento contando dalla sinistra della lista
mostrata da
.BR dirs ,
partendo da zero.  Per esempio:
.if n ``popd +0''
.if t \f(CWpopd +0\fP
rimuove la prima directory,
.if n ``popd +1''
.if t \f(CWpopd +1\fP
la seconda.
.TP
\fB\-\fP\fIn\fP
Rimuove l'\fIn\fP\-esimo elemento contando dalla destra della lista
mostrata da
.BR dirs ,
partendo da zero.  Per esempio:
.if n ``popd -0''
.if t \f(CWpopd -0\fP
Rimuove l'ultima directory,
.if n ``popd -1''
.if t \f(CWpopd -1\fP
la penultima.
.TP
.B \-n
Sopprime il normale cambiamento di directory quando rimuove directory
dallo stack, ossia viene manipolato solo lo stack.
.PD
.PP
Se il comando
.B popd
ha successo, viene anche effettuato un
.BR dirs ,
e lo stato di ritorno è 0.
.B popd
ritorna falso se viene incontrata un'opzione non valida, lo stack delle
directory è vuoto, è specificato un elemento non esistente nello stack
delle directory, o il cambio di directory non ha successo.
.RE
.TP
\fBprintf\fP [\fB\-v\fP \fIvar\fP] \fIformato\fP [\fIargomenti\fP]
Scrive gli \fIargomenti\fP formattati sullo standard output sotto il
controllo del \fIformato\fP.  Il \fIformato\fP
è una stringa di caratteri che contiene tre tipi di oggetti:
caratteri semplici, i quali sono semplicemente copiati sullo standard
output, sequenze di protezione dei caratteri, che sono convertite e copiate
sullo standard output, e specifiche di formato, ognuna delle quali
provoca la stampa dell'\fIargomento\fP seguente.
In aggiunta ai formati \fIprintf\fP(1) standard, \fB%b\fP fa sì che
\fBprintf\fP espanda le sequenze di protezione backslash nell'\fIargomento\fP
corrispondente (con l'eccezione che \fB\ec\fP fa terminare l'output, i backslash in
\fB\e\(aq\fP, \fB\e"\fP e \fB\e?\fP non sono rimossi e gli escape ottali
che iniziano con \fB\e0\fP possono contenere fino a quattro cifre), e \fB%q\fP fa sì
che \fBprintf\fP stampi sull'output l'\fIargomento\fP corrispondente in un formato
riutilizzabile come input di shell.
.sp 1
L'opzione \fB\-v\fP fa sì che l'output sia assegnato alla variabile
\fIvar\fP invece di essere stampato sullo standard output.
.sp 1
Il \fIformato\fP è riutilizzato più volte fino all'esaurimento degli
\fIargomenti\fP.  Se il \fIformato\fP richiede più \fIargomenti\fP
di quelli forniti, le specifiche di formato extra si comportano come se
fosse stato fornito, a seconda del caso, il valore zero o una stringa
nulla.  Il valore di ritorno è 0 in caso di successo, diverso da zero in caso di insuccesso.
.TP
\fBpushd\fP [\fB\-n\fP] [\fIdir\fP]
.PD 0
.TP
\fBpushd\fP [\fB\-n\fP] [+\fIn\fP] [\-\fIn\fP]
.PD
Aggiunge una directory in cima allo stack delle directory, o ruota lo
stack, rendendo la nuova cima dello stack la corrente directory di
lavoro.  Senza argomenti, scambia le due directory in cima e ritorna 0,
a meno che lo stack delle directory non sia vuoto.
Gli argomenti, se forniti, hanno il seguente significato:
.RS
.PD 0
.TP
\fB+\fP\fIn\fP
Ruota lo stack così che la \fIn\fP\-esima directory
(contando dalla sinistra della lista mostrata da
.BR dirs ,
partendo da zero)
vada in cima.
.TP
\fB\-\fP\fIn\fP
Ruota lo stack così che la \fIn\fP\-esima directory
(contando da destra della lista mostrata da
.BR dirs ,
partendo da zero) vada in cima.
.TP
.B \-n
Sopprime il normale cambio di directory quando si aggiungono
directory allo stack, ossia viene manipolato solo lo stack.
.TP
.B dir
Aggiunge
.I dir
in cima allo stack delle directory, rendendola la nuova
directory di lavoro corrente.
.PD
.PP
Se il comando
.B pushd
ha successo, viene anche effettuato un
.B dirs .
Se è usata
la prima forma,
.B pushd
ritorna 0 a meno che il cd verso
.I dir
non abbia successo.  Con la seconda forma,
.B pushd
ritorna 0 tranne quando lo stack delle directory è vuoto,
è specificato un elemento non esistente nello stack delle directory,
o il cambiamento di directory verso la nuova directory corrente
specificata non ha successo.
.RE
.TP
\fBpwd\fP [\fB\-LP\fP]
Stampa il percorso assoluto della corrente directory di lavoro.
Il percorso stampato non contiene alcun collegamento simbolico se è fornita l'opzione
.B \-P
o l'opzione
.B \-o physical
al comando incorporato
.B set
è abilitata.
Se viene usata l'opzione
.B \-L
il percorso stampato può contenere collegamenti simbolici.
Lo stato di ritorno è 0 tranne quando avviene un errore mentre
si legge il percorso della directory corrente o viene fornita
un'opzione non valida.
.TP
\fBread\fP [\fB\-ers\fP] [\fB\-u\fP \fIfd\fP] [\fB\-t\fP \fItimeout\fP] [\fB\-a\fP \fIaname\fP] [\fB\-p\fP \fIprompt\fP] [\fB\-n\fP \fInchars\fP] [\fB\-d\fP \fIdelim\fP] [\fInome\fP ...]
Viene letta una riga dallo standard input, o dal descrittore di file
\fIfd\fP fornito come argomento dell'opzione \fB\-u\fP, e la prima
parola è assegnata al primo
.IR nome ,
la seconda parola al secondo
.IR nome ,
e così via, e le parole rimaste, compresi i separatori, sono
assegnate all'ultimo
.IR nome .
Se ci sono meno parole lette dalla riga di input che nomi, ai nomi
rimanenti vengono assegnati valori nulli.
I caratteri in
.SM
.B IFS
sono usati per suddividere la riga in parole.
Il carattere backslash \fB\e\fP può essere usato per rimuovere
qualsiasi significato speciale dal successivo carattere letto e per
la continuazione di riga.  Le opzioni, se fornite, hanno il seguente significato:
.RS
.PD 0
.TP
.B \-a \fIaname\fP
Le parole sono assegnate a indici sequenziali
della variabile array
.IR aname ,
partendo da 0.
.I aname
viene annullata prima dell'assegnamento dei nuovi valori.
Altri argomenti \fInome\fP vengono ignorati.
.TP
.B \-d \fIdelim\fP
Il primo carattere di \fIdelim\fP è usato per far terminare la riga di
input, invece di newline.
.TP
.B \-e
Se lo standard input
viene da un terminale,
.B readline
(si veda
.SM
.B READLINE
sopra) è usato per ottenere la riga.
.TP
.B \-n \fInchars\fP
\fBread\fP è considerata completata dopo aver letto \fIinchars\fP,
invece di aspettare una riga di input completa.
.TP
.B \-p \fIprompt\fP
Visualizza \fIprompt\fP sullo standard error, senza un newline finale,
prima di tentare di leggere qualsiasi input.  Il prompt è mostrato solo
se l'input proviene da un terminale.
.TP
.B \-r
Backslash non fa da carattere di protezione.
Il backslash è considerato come parte della riga.
In particolare, una coppia backslash-newline non può essere usata come
una continuazione di riga.
.TP
.B \-s
Modalità silenziosa.  Se l'input viene da un terminale i caratteri immessi
non vengono visualizzati sul terminale.
.TP
.B \-t \fItimeout\fP
Fa sì che \fBread\fP vada fuori tempo massimo e ritorni insuccesso se
un riga completa di input non viene letta entro \fItimeout\fP secondi.
Quest'opzione non produce effetti se \fBread\fP non sta
leggendo l'input da un terminale o da una pipe.
.TP
.B \-u \fIfd\fP
Legge l'input dal descrittore di file \fIfd\fP.
.PD
.PP
Se non sono forniti
.I nomi
la riga viene assegnata alla variabile
.SM
.BR REPLY .
Lo stato d'uscita è 0, tranne quando viene raggiunta la fine del
file, \fBread\fP esaurisce il tempo limite consentito o viene fornito
un descrittore di file non valido come argomento a \fB\-u\fP.
.RE
.TP
\fBreadonly\fP [\fB\-apf\fP] [\fInome\fP[=\fIparola\fP] ...]
.PD
I \fInomi\fP
dati sono da considerare in sola lettura; i valori di questi
.I nomi
non possono essere cambiati dagli assegnamenti successivi.
Se è fornita l'opzione
.BR \-f ,
sono così marcate
le funzioni corrispondenti ai
\fInomi\fP.
L'opzione
.B \-a
restringe le variabili agli array.
Se nessun argomento
.I nome
è dato, o se è fornita l'opzione
.BR \-p ,
viene stampata una lista di tutti i nomi in sola lettura.
L'opzione
.B \-p
provoca la visualizzazione dell'output in un formato
riutilizzabile come input.
Se un nome di variabile è seguito da =\fIparola\fP il valore della
variabile è impostato a \fIparola\fP.
Lo stato di ritorno è 0 tranne quando è incontrata un'opzione non
valida, uno dei
.I nomi
non è un nome di variabile di shell valido, o viene fornita l'opzione
.B \-f
con un
.I nome
che non è una funzione.
.TP
\fBreturn\fP [\fIn\fP]
Fa sì che una funzione esca con il valore di ritorno specificato da
.IR n .
Se
.I n
è omesso, lo stato di ritorno è quello dell'ultimo comando
eseguito nel corpo della funzione.  Se usato fuori da una funzione,
ma durante l'esecuzione di un script tramite il comando
.B .
(\fBsource\fP), fa sì che la shell smetta di eseguire
quello script e ritorni o
.I n
o lo stato d'uscita dell'ultimo comando eseguito dentro lo
script come stato d'uscita dello script.  Se usato fuori da una
funzione e non durante l'esecuzione di uno script per mezzo di
\fB.\fP\^, lo stato di ritorno è falso.
Qualsiasi comando associato alla gestione del segnale \fBRETURN\fP viene
eseguito prima che l'esecuzione riprenda dopo la funzione o script.
.TP
\fBset\fP [\fB\-\-abefhkmnptuvxBCHP\fP] [\fB\-o\fP \fIoption\fP] [\fIarg\fP ...]
Senza opzioni, il nome e il valore di ogni variabile di shell vengono
visualizzati in un formato riutilizzabile come input
per impostare o reimpostare le variabili attualmente impostate.
Le variabili in sola lettura non possono essere reimpostate.
In \fImodalità posix\fP sono elencate solo le variabili di shell.
L'output è ordinato in base alla localizzazione corrente.
Quando sono specificate opzioni, queste impostano o annullano attributi di shell.
Gli argomenti che rimangono dopo che le opzioni sono state elaborate
sono trattati come valori per i parametri posizionali e vengono assegnati, nell'ordine, a
.BR $1 ,
.BR $2 ,
.B ...
.BR $\fIn\fP .
Le opzioni, se specificate, hanno i seguenti significati:
.RS
.PD 0
.TP 8
.B \-a
Automaticamente marca le variabili e le funzioni che sono modificate o
create, come da esportare verso l'ambiente dei comandi successivi.
.TP 8
.B \-b
Riporta immediatamente lo stato dei job in background terminati,
invece che prima di stampare il prossimo prompt primario.
Questo è applicabile solo quando è abilitato il job-control.
.TP 8
.B \-e
Esce immediatamente se un \fIcomando semplice\fP (si veda
.SM
.B GRAMMATICA DELLA SHELL
sopra) termina con uno stato diverso da zero.
La shell non esce se il comando che non ha successo fa parte di un elenco di
comandi che segue subito dopo una parola chiave
.B while
o
.B until ,
se fa parte di un controllo in
un'istruzione
.I if ,
se fa parte di una lista
.B &&
o
.B \(bv\(bv ,
o se il valore di ritorno del comando è stato negato per mezzo di
.BR ! .
Un comando sul segnale intercettato \fBERR\fP, se impostato, è eseguito
prima dell'uscita della shell.
.TP 8
.B \-f
Disabilita l'espansione di percorso.
.TP 8
.B \-h
Ricorda la posizione dei comandi man mano che sono ritrovati per
l'esecuzione.  Questa è abilitata per default.
.TP 8
.B \-k
Tutti gli argomenti nella forma di istruzioni di assegnamento
sono posti nell'ambiente per un comando, non solo
quelli che precedono il nome del comando stesso.
.TP 8
.B \-m
Modo monitor.  Il job-control è abilitato.  Quest'opzione è attiva
per default per le shell interattive, su sistemi che lo supportano
(si veda
.SM
.B JOB-CONTROL
sopra).  I processi in background girano in un gruppo di processo
separato e una riga che contiene il loro stato d'uscita viene
stampata al termine della loro esecuzione.
.TP 8
.B \-n
Legge i comandi ma non li esegue.  Questo può essere usato per
controllare uno script di shell per errori di sintassi.  Questo viene
ignorato se la shell è interattiva.
.TP 8
.B \-o \fInome\-opzione\fP
Il \fInome\-opzione\fP può essere uno dei seguenti:
.RS
.TP 8
.B allexport
Lo stesso di
.BR \-a .
.TP 8
.B braceexpand
Lo stesso di
.BR \-B
.TP 8
.B emacs
Usa una interfaccia di editing della riga di comando in stile emacs.
Questo è abilitato per default quando la shell è interattiva,
a meno che la shell non sia avviata
con l'opzione
.BR \-\-noediting .
.TP 8
.B errtrace
Lo stesso di
.BR \-E .
.TP 8
.B functrace
Lo stesso di
.BR \-T .
.TP 8
.B errexit
Lo stesso di
.BR \-e .
.TP 8
.B hashall
Lo stesso di
.BR \-h .
.TP 8
.B histexpand
Lo stesso di
.BR \-H .
.TP 8
.B history
Abilita la cronologia dei comandi, come descritto in precedenza, sotto
.SM
.BR CRONOLOGIA .
Questa opzione è attiva per default nelle shell interattive.
.TP 8
.B ignoreeof
L'effetto è lo stesso come se fosse stato eseguito
il comando di shell
.if t \f(CWIGNOREEOF=10\fP
.if n ``IGNOREEOF=10''
(si veda
.B Variabili di shell
sopra).
.TP 8
.B keyword
Lo stesso di
.BR \-k .
.TP 8
.B monitor
Lo stesso di
.BR \-m .
.TP 8
.B noclobber
Lo stesso di
.BR \-C .
.TP 8
.B noexec
Lo stesso di
.BR \-n .
.TP 8
.B noglob
Lo stesso di
.BR \-f .
.B nolog
Attualmente ignorato.
.TP 8
.B notify
Lo stesso di
.BR \-b .
.TP 8
.B nounset
Lo stesso di
.BR \-u .
.TP 8
.B onecmd
Lo stesso di
.BR \-t .
.TP 8
.B physical
Lo stesso di
.BR \-P .
.TP 8
.B pipefail
Se impostato, il valore di ritorno di una pipeline è il valore
dell'ultimo comando (quello più a destra) che esce con uno stato d'uscita
diverso da zero, o zero se tutti i comandi nella pipeline escono con
successo.  Questa opzione è disabilitata per default.
.TP 8
.B posix
Cambia il comportamento di
.B bash
quando il comportamento di default differisce da quello standard POSIX
per farlo concordare con la (\fImodalità posix\fP standard.
.TP 8
.B privileged
Lo stesso di
.BR \-p .
.TP 8
.B verbose
Lo stesso di
.BR \-v .
.TP 8
.B vi
Usa un'interfaccia di editing della riga di comando in stile vi.
.TP 8
.B xtrace
Lo stesso di
.BR \-x .
.sp 5
.PP
Se
.B \-o
è fornito con nessun \fInome\-opzione\fP, sono stampati i valori
delle opzioni correnti.
Se
.B +o
è fornito con nessun \fInome\-opzione\fP, una serie di comandi
.B set
per ricreare le impostazioni dell'opzione corrente viene visualizzata
sullo standard output.
.RE
.TP 8
.B \-p
Attiva il modo
.IR privilegiato .
In questo modo, i file
.SM
.B $ENV
e
.SM
.B $BASH_ENV
non vengono elaborati, le funzioni di shell non sono ereditate
dall'ambiente e la variabile
.SM
.B SHELLOPTS ,
se appare in un ambiente, viene ignorata.  Se la shell è avviata
con l'id (gruppo) effettivo dell'utente non uguale all'id (gruppo)
reale dell'utente, e non viene fornita l'opzione \fB\-p\fP,
queste azioni vengono eseguite e l'id effettivo dell'utente è
impostato all'id reale dell'utente.  Se viene fornita l'opzione
\fB\-p\fP all'avvio, l'id effettivo dell'utente non è reimpostato.
Disattivare questa opzione fa sì che gli id effettivi dell'utente e del
gruppo siano impostati agli id reali dell'utente e del gruppo.
.TP 8
.B \-t
Esce dopo aver letto ed eseguito un comando.
.TP 8
.B \-u
Considera errore le variabili non impostate quando effettua
l'espansione di parametro.  Se l'espansione è tentata su una
variabile non impostata, la shell stampa un messaggio di errore e,
se non interattiva, esce con uno stato diverso da zero.
.TP 8
.B \-v
Stampa le righe in input alla shell appena sono lette.
.TP 8
.B \-x
Dopo l'espansione di ogni \fIcomando semplice\fp,
comando \fBfor\fP, comando \fBcase\fP, comando \fBselect\fP o
comando \fBfor\fP aritmetico, mostra il valore espanso di
.SM
.BR PS4 ,
seguito dal comando e dai suoi argomenti espansi
o dall'elenco di parole associate.
.TP 8
.B \-B
La shell effettua l'espansione delle parentesi graffe (si veda
.B Espansione delle parentesi graffe
sopra).  Questo è attivo per default.
.TP 8
.B \-C
Se impostato,
.B bash
non sovrascrive un file esistente con gli operatori di ridirezione
.BR > ,
.BR >&
e
.B <> .
Una sovrascrittura può ancora essere ottenuta
creando i file di output usando l'operatore di ridirezione
.B >|
al posto di
.BR > .
.TP 8
.B \-E
Se impostato, ogni segnale intercettato \fBERR\fP è ereditato dalle
funzioni di shell, sostituzioni di comando e comandi eseguiti in un ambiente di subshell.
Il segnale intercettato \fBERR\fP non viene normalmente ereditato in questi casi.
.TP 8
.B \-H
Abilita la sostituzione della cronologia in stile
.B ! .
Quest'opzione è attiva per default
quando la shell è interattiva.
.TP 8
.B \-P
Se impostato, non segue i collegamenti simbolici quando esegue
comandi come
.BR cd
che cambiano la directory di lavoro corrente. È invece usata la
struttura di directory fisica. Per default,
.B bash
segue la successione logica delle directory quando si eseguono comandi
che cambiano la directory corrente.
.TP 8
.B \-T
Se impostata, i comandi sui segnali intercettati \fBDEBUG\fP e
\fBRETURN\fP sono ereditati dalle funzioni di shell, dalle sostituzioni
di comando e dai comandi eseguiti in un ambiente di subshell.
I segnali intercettati \fBDEBUG\fP e \fBRETURN\fP normalmente non vengono
ereditati in questi casi.
.TP 8
.B \-\-
Se nessun argomento segue questa opzione, allora i parametri
posizionali sono assenti.  Altrimenti, i parametri posizionali
sono impostati agli \fIarg\fP, anche se alcuni di loro iniziano con un
.BR \- .
.TP
.B \-
Segnala la fine delle opzioni, e fa sì che tutti i rimanenti \fIarg\fP
siano assegnati ai parametri posizionali.  Le opzioni
.B \-x
e
.B \-v
sono disattivate.
Se non vi è alcun \fIarg\fP,
i parametri posizionali rimangono inalterati.
.PD
.PP
Le opzioni sono disattivate per default se non specificato
diversamente.  Usare + piuttosto che \- causa la disattivazione di
queste opzioni.  Le opzioni possono anche essere specificate come
argomenti a un'invocazione della shell.
Il corrente insieme di opzioni può essere trovato in
.BR $\- .
Lo stato di ritorno è sempre 0 [vero] a meno che non si incontri un'opzione non valida.
.RE
.TP
\fBshift\fP [\fIn\fP]
I parametri posizionali da \fIn\fP+1 ... sono rinominati
.B $1
.B ....
I parametri rappresentati dai numeri \fB$#\fP
fino a \fB$#\fP\-\fIn\fP+1 non sono impostati.
.I n
dev'essere un numero non negativo minore o uguale a \fB$#\fP.
Se
.I n
è 0, nessun parametro viene cambiato.
Se
.I n
è omesso, è considerato valere 1.
Se
.I n
è più grande di \fB$#\fP, i parametri posizionali non sono cambiati.
Lo stato di ritorno è più grande di 0 se
.I n
è più grande di
.B $#
o minore di 0; altrimenti 0.
.TP
\fBshopt\fP [\fB\-pqsu\fP] [\fB\-o\fP] [\fIoptname\fP ...]
Attiva/disattiva i valori di variabili che controllano il comportamento
opzionale della shell.  Senza opzioni, o con l'opzione
.B \-p ,
viene mostrata una lista di tutte le opzioni impostabili, con una
indicazione se ognuna è impostata o no.
L'opzione \fB\-p\fP fa sì che l'output sia mostrato in una forma che
può essere riutilizzata come input.
Altre opzioni hanno il seguente significato:
.RS
.PD 0
.TP
.B \-s
Abilita (attiva) ogni \fIoptname\fP.
.TP
.B \-u
Disabilita (disattiva) ogni \fIoptname\fP.
.TP
.B \-q
Sopprime il normale output (modalità silenziosa); lo stato di ritorno
indica se il \fIoptname\fP è attivato o non attivato.
Se sono dati argomenti \fIoptname\fP multipli con
.BR \-q ,
lo stato di ritorno è 0 se tutti gli \fIoptname\fP sono attivati;
diverso da zero altrimenti.
.TP
.B \-o
Restringe i valori di \fIoptname\fP a quelli definiti per l'opzione
.B \-o
del
comando incorporato
.B set .
.PD
.PP
Se una delle opzioni
.B \-s
o
.B \-u
viene usata senza argomenti \fIoptname\fP, la visualizzazione è
limitata a quelle opzioni che sono, rispettivamente,
attivate o non attivate.  Se non diversamente indicato le opzioni
\fBshopt\fP sono disabilitate (non attivate) per default.
.PP
Lo stato di ritorno quando vengono elencate delle opzioni è 0 se
tutti gli \fIoptname\fP sono abilitati, altrimenti è diverso da zero.
Quando si impostano o si rimuovono opzioni, lo stato di ritorno è 0
tranne quando \fIoptname\fP non è una valida opzione di shell.
.PP
L'elenco delle opzioni di \fBshopt\fP è:
.if t .sp .5v
.if n .sp 1v
.PD 0
.TP 8
.B cdable_vars
Se impostata, un argomento al comando incorporato
.B cd
che
non sia una directory è considerato come il nome di una variabile il
cui valore è la directory verso cui cambiare.
.TP 8
.B cdspell
Se impostata, vengono corretti errori minori nell'ortografia di un
componente di directory in un comando
.B cd .
Gli errori ricercati sono caratteri invertiti,
mancanza di un carattere e un carattere in più.
Se viene trovata una correzione il nome di file corretto viene
stampato e il comando prosegue.
Quest'opzione è usata solo dalle shell interattive.
.TP 8
.B checkhash
Se impostata, \fBbash\fP controlla che un comando trovato in una
tabella hash esista prima di tentarne l'esecuzione.  Se un comando
la cui posizione è disponibile in un elemento della tabella hash non esiste più, viene effettuata una normale ricerca di percorso.
.TP 8
.B checkwinsize
Se impostata, \fBbash\fP controlla la dimensione della finestra dopo
ogni comando e, se necessario, aggiorna i valori di
.SM
.B LINES
e
.SM
.BR COLUMNS
.TP 8
.B cmdhist
Se impostata,
.B bash
tenta di salvare tutte le righe di un comando a riga multipla
nello stesso elemento di cronologia.  Questo facilita
la ripetizione di comandi multiriga.
.TP 8
.B dotglob
Se impostata,
.B bash
include i nomi di file che iniziano con un `.' nel risultato
dell'espansione del percorso.
.TP 8
.B execfail
Se impostata, una shell non interattiva non esce se non può eseguire il
file specificato come argomento al comando incorporato
.B exec .
Una shell interattiva non esce se
.B exec
non ha successo.
.TP 8
.B expand_aliases
Se impostata, gli alias vengono espansi come descritto in precedenza, sotto
.SM
.BR ALIASES .
Questa opzione è abilitata per default per le shell interattive.
.TP 8
.B extdebug
Se impostata, il comportamento previsto per poter usare dei debugger è abilitato:
.RS
.TP
.B 1.
L'opzione \fB\-F\fP al comando incorporato \fBdeclare\fP mostra il nome
di file di origine e il numero di riga corrispondente a ogni nome di
funzione fornita come argomento.
.TP
.B 2.
Se il comando eseguito nella gestione del segnale \fBDEBUG\fP ritorna un
valore diverso da zero, il comando successivo viene saltato e non è eseguito.
.TP
.B 3.
Se il comando eseguito nella gestione del segnale \fBDEBUG\fP ritorna il
valore 2, e la shell è in esecuzione in una subroutine (una funzione di
shell o uno script di shell eseguito dai comandi incorporati  \fB.\fP o
\fBsource\fP), viene simulata una chiamata a \fBreturn\fP.
.TP
.B 4.
\fBBASH_ARGC\fP e \fBBASH_ARGV\fP sono aggiornati come descritto nelle
loro descrizioni viste sopra.
.TP
.B 5.
Il tracciamento delle funzioni è abilitato: sostituzione di comando,
funzioni di shell, e subshell invocate con \fB(\fP \fIcomando\fP
\fB)\fP ereditano le intercettazione di segnale \fBDEBUG\fP e \fBRETURN\fP.
.TP
.B 6.
Il tracciamento degli errori è abilitato: sostituzione di comando,
funzioni di shell, e subshell invocate con \fB(\fP \fIcomando\fP
\fB)\fP ereditano le intercettazione di segnale \fBERROR\fP.
.RE
.TP 8
.B extglob
Se impostata, le caratteristiche di corrispondenza estesa di modelli descritte
in precedenza, sotto \fBEspansione di percorso\fP sono abilitate.
.TP 8
.B extquote
Se impostato, la quotatura \fB$\fP\(aq\fIstringa\fP\(aq e \fB$\fP"\fIstringa\fP"
è effettuata all'interno delle espansioni di \fB${\fP\fIparametro\fP\fB}\fP
racchiuse tra virgolette.  Quest'opzione è abilitata per default.
.TP 8
.B failglob
Se impostata, i modelli che non generano nomi validi di
file durante l'espansione del percorso danno come risultato un errore di espansione.
.TP 8
.B force_fignore
Se impostata, i suffissi specificati dalla variabile di shell
\fBFIGNORE\fP fanno si che delle parole vengano ignorate quando viene
effettuato il completamento delle parole anche se le parole ignorate
sono i soli possibili completamenti.  Si veda
.SM
\fBVARIABILI DI SHELL\fP
sopra per una descrizione di \fBFIGNORE\fP.
Quest'opzione è abilitata per default.
.TP 8
.B gnu_errfmt
Se impostata, i messaggi di errore della shell vengono scritti
nel formato GNU standard dei messaggi di errore.
.TP 8
.B histappend
Se impostata, l'elenco della cronologia è accodato al file
indicato dalla variabile
.B HISTFILE
all'uscita della shell, invece che sostituire il file preesistente.
.TP 8
.B histreedit
Se impostata, e
.B readline
è in uso, viene data l'opportunità a un utente di ripetere una
sostituzione della cronologia che non ha avuto successo.
.TP 8
.B histverify
Se impostata, e
.B readline
è in uso, i risultati della sostituzione della cronologia non sono
immediatamente passati all'analizzatore della shell.  Invece, la
riga risultante viene caricata nel buffer di editing \fBreadline\fP,permettendo ulteriori modifiche.
.TP 8
.B hostcomplete
Se impostata, e
.B readline
è in uso, \fBbash\fP tenta di effettuare il completamento del nome
di host quando una parola contenente un \fB@\fP è in corso di
completamento (si veda
.B Completamento
in precedenza, sotto
.SM
.B READLINE .
Questa è abilitata per default.
.TP 8
.B huponexit
Se impostata, \fBbash\fP invia
.SM
.B SIGHUP
a tutti i job all'uscita di una shell di login interattiva.
.TP 8
.B interactive_comments
Se impostata, fa sì che, se una parola inizia con
.B # ,
quella parola e tutti i caratteri rimanenti su quella
riga siano ignorati in una shell interattiva (si veda
.SM
.B COMMENTI
sopra).  Quest'opzione è abilitata per default.
.TP 8
.B lithist
Se impostata, e l'opzione
.B cmdhist
è abilitata, i comandi multiriga sono salvati nella cronologia includendo
i newline, piuttosto che usando come separatori il punto e virgola, dove possibile.
.TP 8
.B login_shell
La shell imposta quest'opzione se viene avviata come shell di login (si veda
.SM
.B "INVOCAZIONE"
sopra).
Il valore non può essere cambiato.
.TP 8
.B mailwarn
Se impostata, e un file sul quale \fBbash\fP sta ricercando della
posta ha avuto un accesso dall'ultima volta che è stato controllato,
viene visualizzato il messagio ``The mail in \fImailfile\fP has been read''.
.TP 8
.B no_empty_cmd_completion
Se impostata, e
.B readline
è in uso,
.B bash
non tenta di cercare il \fBPATH\fP per possibili completamenti quando
viene tentato il completamento di una riga vuota.
.TP 8
.B nocaseglob
Se impostata,
.B bash
individua i nomi di file senza distinguere le maiuscole dalle minuscole quando
effettua l'espansione del percorso (si veda
.B Espansione del percorso
sopra).
.TP 8
.B nocasematch
Se impostata,
.B bash
confronta modellisenza distinguere le maiuscole dalle minuscole quando
ricerca corrispondenze mentre esegue i comandi condizionali \fBcase\fP o \fB[[\fP.
.TP 8
.B nullglob
Se impostata,
.B bash
permette ai modelli che non individuano
nessun file (si veda
.B Espansione del percorso
sopra)
di espandere come una stringa nulla, piuttosto che essere presi letteralmente.
.TP 8
.B progcomp
Se impostata, i servizi di completamento programmabile (si veda
\fBCompletamento programmabile\fP sopra) vengono abilitati.
Quest'opzione è abilitata per default.
.TP 8
.B promptvars
Se impostata, le stringhe di prompt subiscono espansione di
parametro, sostituzione di comando, espansione aritmetica e rimozione
dei segni di quotatura dopo che sono stati espansi come descritto in
.SM
.B STRINGHE DI PROMPT
sopra.  Quest'opzione è abilitata per default.
.TP 8
.B restricted_shell
La shell imposta quest'opzione se è stata avviata in modalità ristretta (si veda
.SM
.B "SHELL RISTRETTA"
più avanti).
Il valore non può essere cambiato.
Questo non viene reimpostato quando i file di avvio vengono eseguiti,
permettendo ai file di avvio di accertare se una shell è ristretta o meno.
.TP 8
.B shift_verbose
Se impostata, il comando incorporato
.B shift
stampa un messaggio di errore quando il numero di comandi shift effettuati
eccede il numero dei parametri posizionali.
.TP 8
.B sourcepath
Se impostata, il comando incorporato
\fBsource\fP (\fB.\fP) usa il valore di
.SM
.B PATH
per trovare la directory contenente il file fornito come argomento.
Quest'opzione è abilitata per default.
.TP 8
.B xpg_echo
Se impostata, il comando incorporato \fBecho\fP espande sequenze di
protezione backslash per default.
.RE
.TP
\fBsuspend\fP [\fB\-f\fP]
Sospende l'esecuzione di questa shell fino a che non riceve un segnale
.SM
.BR SIGCONT .
L'opzione
.B \-f
dice di non preoccuparsi se questa è una shell di login; va sospesa
comunque.  Lo stato di ritorno è 0 tranne quando la shell è una
shell di login e non è fornito
.BR \-f ,
o se il job-control non è abilitato.
.TP
\fBtest\fP \fIexpr\fP
.PD 0
.TP
\fB[\fP \fIexpr\fP \fB]\fP
Ritorna uno stato di 0  o 1 a seconda del risultato della
valutazione dell'espressione condizionale
.IR expr .
Ogni operatore e operando deve essere un argomento separato.
Le espressioni sono composte dagli elementi descritti in precedenza, sotto
.SM
.BR "ESPRESSIONI CONDIZIONALI" .
\fBtest\fP non accetta opzioni, né accetta, ignorandolo,
un argomento \fB\-\-\fP come indicatore di fine delle opzioni.
.if t .sp 0.5
.if n .sp 1
Le espressioni possono essere combinate usando i seguenti operatori,
elencati in ordine decrescente di precedenza.
.RS
.PD 0
.TP
.B ! \fIexpr\fP
Vero se
.I expr
è falso.
.TP
.B ( \fIexpr\fP )
Ritorna il valore di \fIexpr\fP.
Questo può essere usato per modificare la normale precedenza degli operatori.
.TP
\fIexpr1\fP \-\fBa\fP \fIexpr2\fP
Vero se sia
.I expr1
che
.I expr2
sono vere.
.TP
\fIexpr1\fP \-\fBo\fP \fIexpr2\fP
Vero se o
.I expr1
o
.I expr2
è vera.
.PD
.PP
\fBtest\fP e \fB[\fP valutano espressioni condizionali
usando una serie di regole basate sul numero di argomenti.
.if t .sp 0.5
.if n .sp 1
.PD 0
.TP
0 argomenti
L'espressione è falsa.
.TP
1 argomento
L'espressione è vera se e solo se l'argomento non è nullo.
.TP
2 argomenti
Se il primo argomento è \fB!\fP, l'espressione è vera se e solo se il
secondo argomento è nullo.
Se il primo argomento è uno degli operatori condizionali elencati in precedenza,
sotto
.SM
.BR "ESPRESSIONI CONDIZIONALI" ,
l'espressione è vera se il test unario è vero.
Se il primo argomento non è un operatore condizionale unario valido,
l'espressione è falsa.
.TP
3 argomenti
Se il secondo argomento è uno degli operatori binari condizionali
elencati in precedenza, sotto
.SM
.BR "ESPRESSIONI CONDIZIONALI" ,
il risultato dell'espressione è il risultato del test binario che usa
gli argomenti primo e terzo come operandi.
Se il primo argomento è \fB!\fP, il valore è la negazione del test con
due argomenti costituito dagli argomenti secondo e terzo.
Se il primo argomento è esattamente \fB(\fP e il terzo argomento è
esattamente \fB)\fP, il risultato è il test, con 1 argomento, del
secondo argomento.
Altrimenti, l'espressione è falsa.
Gli operatori \fB\-a\fP e \fB\-o\fP sono considerati
in questo caso operatori binari
.TP
4 argomenti
Se il primo argomento è \fB!\fP, il risultato è la negazione
dell'espressione composta dai rimanenti argomenti.
Altrimenti, l'espressione è analizzata e valutata secondo le
precedenze usando le regole elencate sopra.
.TP
5 o più argomenti
L'espressione è analizzata e valutata secondo le
precedenze usando le regole elencate sopra.
.RE
.PD
.TP
.B times
Stampa i tempi spesi come utente e come sistema per la shell e per i processi
eseguiti dalla shell.  Lo stato di ritorno è 0.
.TP
\fBtrap\fP [\fB\-lp\fP] [[\fIarg\fP] \fIsigspec\fP ...]
Il comando
.I arg
dev'essere letto e eseguito quando la shell riceve
il segnale(i)
.IR sigspec .
Se
.I arg
è assente (e c'è un singolo \fIsigspec\fP) o
.BR \- ,
ogni segnale specificato è
riportato alla sua configurazione originale
(il valore che aveva al momento dell'ingresso nella shell).
Se
.I arg
è la stringa nulla il segnale specificato da ogni
.I sigspec
è ignorato dalla shell e dai comandi che essa invoca.
Se
.I arg
non è presente e
.B \-p
è stato fornito, allora i comandi di intercettazione di segnale associati a ogni
.I sigspec
vengono visualizzati.
Se non viene fornito alcun argomento o se
è dato solo
.B \-p ,
.B trap
stampa la lista dei comandi associati a ogni segnale.
L'opzione
.B \-l
fa sì che la shell stampi una lista di nomi di segnale e
i numeri a loro corrispondenti.
Ogni
.I sigspec
è o un nome di segnale
definito in <\fIsignal.h\fP>, o un numero di segnale.  I nomi di
segnale possono essere scritti sia in minuscolo che in maiuscolo e il prefisso SIG è opzionale.
Se un
.I sigspec
è
.SM
.B EXIT
(0) il comando
.I arg
è eseguito all'uscita della shell.
Se un
.I sigspec
è
.SM
.BR DEBUG ,
il comando
.I arg
viene eseguito prima di ogni \fIcomando semplice\fP, comando \fIfor\fP,
comando \fIcase\fP, comando \fIselect\fP, ogni comando \fIfor\fP
aritmetico, e prima di eseguire il primo comando in una funzione di shell (si veda
.SM
.B GRAMMATICA DELLA SHELL
sopra).
Fare riferimento alla descrizione dell'opzione \fBextdebug\fP del
comando incorporato \fBshopt\fP per dettagli sul suo effetto nella
gestione del segnale \fBDEBUG\fP.
Se un
.I sigspec
è
.SM
.BR ERR
il comando
.I arg
viene eseguito ogni volta che un comando semplice ha uno stato di
uscita diverso da 0, tenuto conto delle seguenti condizioni.
La gestione del segnale
.SM
.B ERR
non viene invocata se il comando in errore fa parte della lista di
comandi immediatamente seguente un comando
.B while
o
.B until ,
se fa parte del test in un'istruzione
.I if ,
 se fa parte di una lista
.B &&
o
.B \(bv\(bv ,
o se il valore di ritorno del comando in esecuzione
viene negato da un
.BR ! .
Queste sono le stesse condizioni imposte all'opzione \fBerrexit\fP.
Se un
.I sigspec
è
.SM
.BR RETURN ,
il comando
.I arg
viene eseguito ogni volta che una funzione di shell o uno script
eseguito coi comandi incorporati \fB.\fP o \fBsource\fP completa
l'esecuzione.  I segnali ignorati al momento dell'ingresso della
shell non possono essere intercettati o resettati.  I segnali
intercettati non ignorati sono riportati al loro valore originale in un
processo figlio quando esso è creato.
Lo stato di ritorno è falso se un
.I sigspec
non è valido; altrimenti
.B trap
ritorna 0 [vero].
.TP
\fBtype\fP [\fB\-aftpP\fP] \fInome\fP [\fInome\fP ...]
Senza opzioni,
indica come dovrà essere interpretato ciascun
.I nome
se usato come un nome di comando.
Se è usata l'opzione
.BR \-t ,
.B type
stampa una stringa che è una fra
.IR alias ,
.IR keyword ,
.IR function ,
.IR builtin ,
o
.I file
se
.I nome
è, rispettivamente,
un alias, una parola riservata della shell,
una funzione, un comando incorporato, o un file su disco.
Se il
.I nome
non è trovato, non viene stampato nulla,
ed è ritornato uno stato d'uscita di falso.
Se viene usata
l'opzione
.BR \-p ,
.B type
ritorna o il nome del file su disco
che dovrebbe essere eseguito se
.I nome
fosse specificato come nome di comando,
o nulla se
.if t \f(CWtype -t nome\fP
.if n ``type -t nome''
non avesse ritornato
.IR file .
L'opzione
.B \-P
forza
.SM
.B PATH
a ricercare ogni \fInome\fP, anche se
.if t \f(CWtype -t nome\fP
.if n ``type -t nome''
non dovesse ritornare
.IR file .
Se un comando è nella tabella hash,
.B \-p
e
.B \-P
stampano il valore nella tabella hash, non necessariamente il file
che appare per primo in
.SM
.BR PATH .
Se
viene usata l'opzione
.BR \-a ,
.B type
stampa tutti le posizioni che corrispondono a
un eseguibile chiamato
.IR nome .
Questo include alias e funzioni,
se e solo se
non viene usata anche l'opzione
.BR \-p .
La tabella hash dei comandi non è consultata
quando si usa
.BR \-a .
L'opzione
.B \-f
sopprime la ricerca della funzione di shell, come col
comando incorporato \fBcommand\fP.
.B type
ritorna 0 [vero] se uno qualsiasi degli argomenti viene trovato, falso se
non ne è trovato nemmeno uno.
.TP
\fBulimit\fP [\fB\-SHacdefilmnpqrstuvx\fP [\fIlimite\fP]]
Fornisce controllo sulle risorse disponibili per la shell e per i
processi avviati da essa, sui sistemi che consentono un tale controllo.
Le opzioni \fB\-H\fP e \fB\-S\fP specificano che viene impostato il limite
hard o limite soft per la data risorsa.  Un limite hard non può essere
aumentato una volta impostato; un limite soft può essere
aumentato fino al valore del limite hard.  Se né \fB\-H\fP né \fB\-S\fP
sono specificati, vengono impostati entrambi i limiti, hard e soft.  Il valore di
.I limite
può essere un numero nell'unità specificata per la risorsa,
o uno dei valori speciali
.BR hard ,
.BR soft
o
.BR unlimited .
che stanno rispettivamente per limite hard corrente, limite soft
corrente e nessun limite.
Se
.I limite
è omesso, viene stampato il valore corrente del limite soft della
risorsa, a meno che non venga data l'opzione \fB\-H\fP.  Quando è
specificata più di una risorsa, il nome del limite e l'unità vengono stampati prima del valore.
Le altre opzioni sono interpretate come segue:
.RS
.PD 0
.TP
.B \-a
sono riportati tutti i limiti correnti
.TP
.B \-c
la dimensione massima dei file core creati
.TP
.B \-d
la dimensione massima del segmento dati di un processo
.TP
.B \-e
La priorità massima di schedulazione dei processi ("nice")
.TP
.B \-f
la dimensione massima dei file scritti dalla shell e dai suoi figli
.TP
.B \-i
Il numero massimo di segnali pendenti
.TP
.B \-l
la dimensione massima di memoria che può essere bloccata
.TP
.B \-m
la dimensione massima della memoria occupata.
.TP
.B \-n
il numero massimo di descrittori di file aperti (la maggior parte dei
sistemi non permette che questo valore sia cambiato)
.TP
.B \-p
la dimensione delle pipe in blocchi da 512 byte (questo non può essere cambiato)
.TP
.B \-q
Il numero massimo di byte nelle code dei messaggi POSIX
.TP
.B \-r
La priorità massima di schedulazione dei processi in tempo reale
.TP
.B \-s
la dimensione massima dello stack
.TP
.B \-t
il massimo quantitativo di tempo macchina utilizzabile, in secondi
.TP
.B \-u
il numero massimo di processi disponibili per un singolo utente
.TP
.B \-v
Il massimo ammontare di memoria virtuale disponibile per la shell
.TP
.B \-x
Il numero massimo di file lock
.PD
.PP
Se
.I limite
è dato, esso è il nuovo valore della risorsa specificata (l'opzione
.B \-a
è solo per visualizzazione).
Se nessuna opzione è data, allora è assunta
.BR \-f .
I valori sono in multipli di 1024 byte, tranne che per
.BR \-t ,
che è in secondi,
.BR \-p ,
che è in unità di blocchi da 512 byte,
e
.B \-n
e
.BR \-u ,
che sono numeri puri.  Lo stato di ritorno è 0
tranne quando viene incontrata un'opzione o un argomento non valido,
o avvenga un errore mentre si imposta un nuovo limite.
.RE
.TP
\fBumask\fP [\fB\-p\fP] [\fB\-S\fP] [\fImodo\fP]
La maschera di creazione dei file dell'utente è impostata a
.IR modo .
Se
.I modo
inizia con una cifra,
è interpretato come numero ottale;
altrimenti è interpretato come una maschera simbolico di modo
simile a quelle accettate da
.IR chmod (1).
Se
.I modo
è omesso, viene stampato il valore corrente della maschera.
L'opzione
.B \-S
fa sì che la maschera venga stampata in formato simbolico;
l'output di default è un numero ottale.
Se viene fornita l'opzione
.B \-p
e
.I modo
è omesso, l'output è in una forma riutilizzabile come input.
Lo stato di ritorno è 0 se il modo è stato cambiato con successo o se
nessun argomento \fImodo\fP era stato fornito, e falso altrimenti.
.TP
\fBunalias\fP [\-\fBa\fP] [\fInome\fP ...]
Rimuove ciascun \fInome\fP dalla lista degli alias definiti.  Se si specifica
.B \-a ,
sono rimosse tutte le definizioni di alias.
Il valore di ritorno è 0 [vero] tranne quando un
.I nome
fornito non è un alias attualmente definito.
.TP
\fBunset\fP [\-\fBfv\fP] [\fInome\fP ...]
Per ciascun
.IR nome ,
rimuove la corrispondente variabile o funzione.
Se non vengono fornite opzioni, o è specificata l'opzione
.B \-v ,
ogni
.I nome
designa una variabile di shell.
Le variabili in sola lettura non possono essere rimosse.
Se viene specificata
.B \-f ,
ogni
.I nome
designa una funzione di shell, e la definizione di funzione
viene rimossa.
Ogni variabile o funzione rimossa è eliminata dall'ambiente
passato ai comandi successivi.
Se una qualsiasi fra
.SM
.BR RANDOM ,
.SM
.BR SECONDS ,
.SM
.BR LINENO ,
.SM
.BR HISTCMD ,
.SM
.BR FUNCNAME ,
.SM
.BR GROUPS
o
.SM
.B DIRSTACK
è annullata, perde la sua speciale proprietà, anche se viene
successivamente ridefinita.  Lo stato d'uscita è 0 [vero] a meno che un
.I nome
non sia in sola lettura.
.TP
\fBwait\fP [\fIn ...\fP]
Aspetta ogni processo specificato e ritorna il suo stato di completamento.
Ciascun
.I n
può essere un ID di processo o una specificazione di job;
se è data una specificazione di job, si aspettano
tutti i processi nella pipeline di quel job.  Se
.I n
è omesso, si aspettano tutti i processi figli
correntemente attivi, e lo stato di ritorno è 0.  Se
.I n
specifica un processo o job non esistenti, lo stato di ritorno è 127.
Altrimenti, lo stato di ritorno è lo stato d'uscita dell'ultimo
processo o job di cui si è atteso il completamento.
.\" bash_builtins
.if \n(zZ=1 .ig zZ
.SH "SHELL RISTRETTA"
.\" rbash.1
.zY
.PP
Se
.B bash
è avviata col nome
.BR rbash ,
o l'opzione
.B \-r
viene fornita all'invocazione,
la shell diventa ristretta.
Una shell ristretta è usata per impostare un ambiente più controllato
di quello della shell standard.
Si comporta identicamente a
.B bash
con l'eccezione che quel che segue è o non permesso o non effettuato:
.IP \(bu
cambiare le directory con \fBcd\fP
.IP \(bu
impostare o rimuovere i valori di
.BR SHELL ,
.BR PATH ,
.BR ENV
o
.B BASH_ENV
.IP \(bu
specificare nomi di comando contenenti un
.B /
.IP \(bu
specificare un nome di file contenente un
.B /
come argomento al
comando incorporato
.B .
.IP \(bu
Specificare un nome di file contenente una barra [/] come argomento
all'opzione
.B \-p
del comando incorporato
.B hash
.IP \(bu
importare definizioni di funzione dall'ambiente della shell all'avvio
.IP \(bu
analizzare il valore di \fBSHELLOPTS\fP dall'ambiente di shell all'avvio
.IP \(bu
ridirigere l'output usando gli operatori di ridirezione
>, >|, <>, >&, &>, e >>
.IP \(bu
usare il comando incorporato
.B exec
per sostituire la shell con un altro comando
.IP \(bu
aggiungere o eliminare comandi incorporati con le opzioni
.B \-f
e
.B \-d
del comando incorporato
.B enable
.IP \(bu
Usare il comando incorporato \fBenable\fP per abilitare
comandi incorporati della shell che sono disabilitati
.IP \(bu
specificare l'opzione
.B \-p
al
comando incorporato
.B command
.IP \(bu
disattivare la modalità ristretta con
\fBset +r\fP o \fBset +o restricted\fP.
.PP
Queste restrizioni sono imposte dopo aver letto eventuali file di avvio.
.PP
.ie \n(zY=1 Quando viene eseguito un comando che viene riconosciuto come uno script di shell,
.el \{ Quando viene eseguito un comando che viene riconosciuto come
uno script di shell
(si veda
.SM
.B "ESECUZIONE DI UN COMANDO"
sopra),
\}
.B rbash
rimuove ogni restrizione nella shell creata dalla shell genitrice
per eseguire lo script.
.\" end of rbash.1
.if \n(zY=1 .ig zY
.SH "VEDERE ANCHE"
.PD 0
.TP
\fIBash Reference Manual\fP, Brian Fox and Chet Ramey
.TP
\fIThe Gnu Readline Library\fP, Brian Fox and Chet Ramey
.TP
\fIThe Gnu History Library\fP, Brian Fox and Chet Ramey
.TP
\fIPortable Operating System Interface (POSIX) Part 2: Shell and Utilities\fP, IEEE
.TP
\fIsh\fP(1), \fIksh\fP(1), \fIcsh\fP(1)
.TP
\fIemacs\fP(1), \fIvi\fP(1)
.TP
\fIreadline\fP(3)
.PD
.SH FILE
.PD 0
.TP
.FN /bin/bash
L'eseguibile \fBbash\fP
.TP
.FN /etc/profile
Il file di inizializzazione generale di sistema, eseguito per le shell di login
.TP
.FN ~/.bash_profile
Il file di inizializzazione personale, eseguito per le shell di login
.TP
.FN ~/.bashrc
Il file di inizializzazione individuale per ogni shell interattiva
.TP
.FN ~/.bash_logout
Il file di pulizia della shell di login individuale, eseguito quando una shell di login termina
.TP
.FN ~/.inputrc
Il file di inizializzazione individuale per \fIreadline\fP
.PD
.SH AUTORI
Brian Fox, Free Software Foundation
.br
bfox@gnu.org
.PP
Chet Ramey, Case Western Reserve University
.br
chet@po.cwru.edu
.SH NOTIFICA DEI BACHI
Se trovate un baco [bug] in
.B bash,
dovreste segnalarlo.  Ma prima, dovreste assicurarvi
che sia veramente un baco, e che appaia nella
versione più recente di
.B bash .
L'ultima versione è sempre disponibile da
\fIftp://ftp.gnu.org/pub/bash/\fP.
.PP
Una volta determinato che avete individuato realmente un baco, usate il comando
.I bashbug
per inviare una notifica del baco.
Se avete una correzione, siete invitati a inviare anche quella!
Suggerimenti e rapporti su bachi 'filosofici' possono essere inviati
a \fIbug-bash@gnu.org\fP o inviati al newsgroup su Usenet
.BR gnu.bash.bug .
.PP
TUTTI i rapporti su bachi dovranno includere:
.PP
.PD 0
.TP 20
Il numero di versione di \fBbash\fR
.TP
L'hardware e il sistema operativo
.TP
Il compilatore usato per compilare
.TP
Una descrizione del comportamento bacato
.TP
Un breve script o `ricetta' che produca il baco
.PD
.PP
.I bashbug
inserisce le prime tre voci automaticamente nel modello
che fornisce per compilare una notifica di baco.
.PP
Commenti e notifiche su bachi riguardanti questa
pagina di manuale dovranno essere indirizzati a
.IR chet@po.cwru.edu .
.SH BACHI
.PP
È troppo grande e troppo lenta.
.PP
Vi sono alcune sottili differenze tra
.B bash
e le versioni tradizionali di
.BR sh ,
soprattutto per via delle specifiche
.SM
.B POSIX
.PP
In alcuni casi gli alias possono essere causa di confusione.
.PP
Comandi incorporati della shell e funzioni non sono sospendibili/riavviabili.
.PP
Comandi composti e sequenze di comandi nella forma di `a ; b ; c'
non sono trattati in modo completamente corretto
quando viene richiesta la sospensione
di un processo.  Quando un processo viene sospeso, la shell esegue
immediatamente il comando che lo segue immediatamente.
Basta mettere una sequenza di comandi fra parentesi per forzarla
in una subshell, che può essere sospesa come se fosse un'unica entità.
.PP
I comandi all'interno di una sostituzione di comando \fB$(\fP...\fB)\fP non
sono analizzati finché non è stata tentata la sostituzione.  Questo
posticipa la scoperta di errori a qualche tempo dopo che è stato dato il
comando.  Per esempio, parentesi aperte e non chiuse e viceversa, anche all'interno di
commenti di shell, producono un messaggio di errore già mentre il
costrutto è in fase di lettura.
.PP
Le variabili di array non possono essere esportate (per il momento).
.zZ
.zY
